{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "userClaim",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardsEscrowClaim",
          "type": "uint256"
        }
      ],
      "name": "Hunt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_BPS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot_",
          "type": "bytes32"
        }
      ],
      "name": "__MerkleDistributor_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimsStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "epochDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getClaimsStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentRewardsRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGracePeriodEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNextEpochRewardsRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNextEpochStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gracePeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot_",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "epochDuration_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardReductionPerEpoch_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimsStart_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gracePeriod_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "rewardsEscrow_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "isClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recycleExcess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardReductionPerEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsEscrow",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/badger-hunt/BadgerHunt.sol",
    "1": "contracts/badger-hunt/MerkleDistributor.sol",
    "2": "deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol",
    "3": "deps/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
    "4": "deps/@openzeppelin/contracts-upgradeable/cryptography/MerkleProofUpgradeable.sol",
    "5": "deps/@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
    "6": "deps/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
    "8": "interfaces/badger/IMerkleDistributor.sol"
  },
  "ast": {
    "absolutePath": "contracts/badger-hunt/BadgerHunt.sol",
    "exportedSymbols": {
      "BadgerHunt": [
        421
      ]
    },
    "id": 422,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:24:0"
      },
      {
        "absolutePath": "deps/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "deps/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 422,
        "sourceUnit": 724,
        "src": "65:80:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "deps/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "file": "deps/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 422,
        "sourceUnit": 1069,
        "src": "146:84:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "deps/@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
        "file": "deps/@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 422,
        "sourceUnit": 991,
        "src": "231:79:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "deps/@openzeppelin/contracts-upgradeable/cryptography/MerkleProofUpgradeable.sol",
        "file": "deps/@openzeppelin/contracts-upgradeable/cryptography/MerkleProofUpgradeable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 422,
        "sourceUnit": 795,
        "src": "311:90:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/badger/IMerkleDistributor.sol",
        "file": "interfaces/badger/IMerkleDistributor.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 422,
        "sourceUnit": 1099,
        "src": "402:50:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/badger-hunt/MerkleDistributor.sol",
        "file": "./MerkleDistributor.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 422,
        "sourceUnit": 594,
        "src": "453:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "MerkleDistributor",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 593,
              "src": "511:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleDistributor_$593",
                "typeString": "contract MerkleDistributor"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "511:17:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "OwnableUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 723,
              "src": "530:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableUpgradeable_$723",
                "typeString": "contract OwnableUpgradeable"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "530:18:0"
          }
        ],
        "contractDependencies": [
          593,
          723,
          1098,
          1169,
          1214
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 421,
        "linearizedBaseContracts": [
          421,
          723,
          1214,
          593,
          1098,
          1169
        ],
        "name": "BadgerHunt",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14,
            "libraryName": {
              "contractScope": null,
              "id": 12,
              "name": "SafeMathUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 990,
              "src": "561:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathUpgradeable_$990",
                "typeString": "library SafeMathUpgradeable"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "555:38:0",
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "585:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "fd967f47",
            "id": 17,
            "mutability": "constant",
            "name": "MAX_BPS",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 421,
            "src": "598:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "598:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "632:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "829eb92c",
            "id": 19,
            "mutability": "mutable",
            "name": "claimsStart",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 421,
            "src": "644:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "644:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a06db7dc",
            "id": 21,
            "mutability": "mutable",
            "name": "gracePeriod",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 421,
            "src": "676:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "676:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4ff0876a",
            "id": 23,
            "mutability": "mutable",
            "name": "epochDuration",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 421,
            "src": "709:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "709:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9f2e7b19",
            "id": 25,
            "mutability": "mutable",
            "name": "rewardReductionPerEpoch",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 421,
            "src": "743:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "743:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f51ace70",
            "id": 27,
            "mutability": "mutable",
            "name": "currentRewardRate",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 421,
            "src": "787:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "787:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3a98d88e",
            "id": 29,
            "mutability": "mutable",
            "name": "finalEpoch",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 421,
            "src": "825:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "825:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f2157932",
            "id": 31,
            "mutability": "mutable",
            "name": "rewardsEscrow",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 421,
            "src": "857:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "857:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 43,
            "name": "Hunt",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 43,
                  "src": "903:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 43,
                  "src": "918:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 43,
                  "src": "943:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userClaim",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 43,
                  "src": "959:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardsEscrowClaim",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 43,
                  "src": "978:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "902:103:0"
            },
            "src": "892:114:0"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "1300:448:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "token_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1335:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "merkleRoot_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1343:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 64,
                      "name": "__MerkleDistributor_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "1310:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1310:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 69,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "1366:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1366:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "1366:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "1410:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 72,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "1392:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1392:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1392:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 76,
                      "name": "epochDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1428:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 77,
                      "name": "epochDuration_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "1444:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1428:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1428:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "rewardReductionPerEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1468:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 81,
                      "name": "rewardReductionPerEpoch_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "1494:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1468:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1468:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 84,
                      "name": "claimsStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1528:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 85,
                      "name": "claimsStart_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "1542:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1528:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 88,
                      "name": "gracePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1564:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 89,
                      "name": "gracePeriod_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "1578:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1564:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1564:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 92,
                      "name": "rewardsEscrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1601:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 93,
                      "name": "rewardsEscrow_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "1617:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1601:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1601:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 96,
                      "name": "currentRewardRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1642:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3130303030",
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1662:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "1642:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1642:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "finalEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1678:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 101,
                              "name": "currentRewardRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1692:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 102,
                              "name": "rewardReductionPerEpoch_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "1712:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1692:44:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 104,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1691:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1740:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1691:50:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1678:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1678:63:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5a857e58",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 62,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 61,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1146,
                  "src": "1288:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1288:11:0"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "token_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1041:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "merkleRoot_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1065:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "epochDuration_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1094:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "rewardReductionPerEpoch_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1126:32:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "claimsStart_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1168:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1168:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "gracePeriod_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1198:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "rewardsEscrow_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1228:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 110,
                  "src": "1260:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1031:249:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1300:0:0"
            },
            "scope": 421,
            "src": "1012:736:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "1892:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 118,
                        "name": "gracePeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1925:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "claimsStart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1909:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 823,
                      "src": "1909:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1909:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 115,
                  "id": 120,
                  "nodeType": "Return",
                  "src": "1902:35:0"
                }
              ]
            },
            "documentation": {
              "id": 111,
              "nodeType": "StructuredDocumentation",
              "src": "1754:74:0",
              "text": "===== View Functions =====\n @dev Get grace period end timestamp"
            },
            "functionSelector": "e58e230a",
            "id": 122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGracePeriodEnd",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1859:2:0"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 122,
                  "src": "1883:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1883:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1882:9:0"
            },
            "scope": 421,
            "src": "1833:111:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "2052:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 128,
                    "name": "claimsStart",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "2069:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 127,
                  "id": 129,
                  "nodeType": "Return",
                  "src": "2062:18:0"
                }
              ]
            },
            "documentation": {
              "id": 123,
              "nodeType": "StructuredDocumentation",
              "src": "1952:35:0",
              "text": "@dev Get claims start timestamp"
            },
            "functionSelector": "96d857c5",
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimsStartTime",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2019:2:0"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 131,
                  "src": "2043:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2043:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2042:9:0"
            },
            "scope": 421,
            "src": "1992:95:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 171,
              "nodeType": "Block",
              "src": "2190:295:0",
              "statements": [
                {
                  "assignments": [
                    138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138,
                      "mutability": "mutable",
                      "name": "gracePeriodEnd",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 171,
                      "src": "2200:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 137,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2200:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 143,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 141,
                        "name": "gracePeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "2241:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "claimsStart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "2225:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 823,
                      "src": "2225:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2200:53:0"
                },
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "mutability": "mutable",
                      "name": "epoch",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 171,
                      "src": "2263:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 144,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2263:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 148,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 146,
                      "name": "getCurrentEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "2279:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2279:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2263:33:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 149,
                      "name": "epoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "2311:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2320:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2311:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 169,
                    "nodeType": "Block",
                    "src": "2389:90:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 165,
                                  "name": "epoch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145,
                                  "src": "2461:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 163,
                                  "name": "epochDuration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23,
                                  "src": "2443:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 903,
                                "src": "2443:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2443:24:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 160,
                                  "name": "gracePeriod",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "2426:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 158,
                                  "name": "claimsStart",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19,
                                  "src": "2410:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 159,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "add",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 823,
                                "src": "2410:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2410:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 823,
                            "src": "2410:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2410:58:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 136,
                        "id": 168,
                        "nodeType": "Return",
                        "src": "2403:65:0"
                      }
                    ]
                  },
                  "id": 170,
                  "nodeType": "IfStatement",
                  "src": "2307:172:0",
                  "trueBody": {
                    "id": 157,
                    "nodeType": "Block",
                    "src": "2323:60:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 154,
                              "name": "gracePeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "2360:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 152,
                              "name": "claimsStart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "2344:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 823,
                            "src": "2344:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2344:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 136,
                        "id": 156,
                        "nodeType": "Return",
                        "src": "2337:35:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 132,
              "nodeType": "StructuredDocumentation",
              "src": "2093:33:0",
              "text": "@dev Get the next epoch start"
            },
            "functionSelector": "65c5f94a",
            "id": 172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNextEpochStart",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2157:2:0"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "2181:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2181:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2180:9:0"
            },
            "scope": 421,
            "src": "2131:354:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "2590:269:0",
              "statements": [
                {
                  "assignments": [
                    179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 179,
                      "mutability": "mutable",
                      "name": "gracePeriodEnd",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 207,
                      "src": "2600:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 178,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2600:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 184,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "gracePeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "2641:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "claimsStart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "2625:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 823,
                      "src": "2625:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2625:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2600:53:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 185,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -17,
                      "src": "2668:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 186,
                      "name": "gracePeriodEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2674:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2668:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 191,
                  "nodeType": "IfStatement",
                  "src": "2664:59:0",
                  "trueBody": {
                    "id": 190,
                    "nodeType": "Block",
                    "src": "2690:33:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2711:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 177,
                        "id": 189,
                        "nodeType": "Return",
                        "src": "2704:8:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 193,
                      "mutability": "mutable",
                      "name": "secondsPastGracePeriod",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 207,
                      "src": "2732:30:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2732:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 198,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 196,
                        "name": "gracePeriodEnd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "2773:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 194,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "2765:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 840,
                      "src": "2765:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2765:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2732:56:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2850:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 199,
                              "name": "secondsPastGracePeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "2806:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 200,
                              "name": "epochDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "2831:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2806:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 202,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2805:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 823,
                      "src": "2805:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2805:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 177,
                  "id": 206,
                  "nodeType": "Return",
                  "src": "2798:54:0"
                }
              ]
            },
            "documentation": {
              "id": 173,
              "nodeType": "StructuredDocumentation",
              "src": "2491:37:0",
              "text": "@dev Get the current epoch number"
            },
            "functionSelector": "b97dd9e2",
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentEpoch",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2557:2:0"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 208,
                  "src": "2581:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2581:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2580:9:0"
            },
            "scope": 421,
            "src": "2533:326:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "2976:201:0",
              "statements": [
                {
                  "assignments": [
                    215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 215,
                      "mutability": "mutable",
                      "name": "epoch",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 239,
                      "src": "2986:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 214,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2986:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 218,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 216,
                      "name": "getCurrentEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "3002:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3002:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2986:33:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 219,
                      "name": "epoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "3033:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3042:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3033:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 224,
                  "nodeType": "IfStatement",
                  "src": "3029:30:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 222,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "3052:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 213,
                    "id": 223,
                    "nodeType": "Return",
                    "src": "3045:14:0"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 225,
                      "name": "epoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "3073:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 226,
                      "name": "finalEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "3081:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3073:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 234,
                              "name": "rewardReductionPerEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "3145:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 232,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 215,
                              "src": "3135:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 903,
                            "src": "3135:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3135:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 230,
                          "name": "MAX_BPS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "3123:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 840,
                        "src": "3123:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3123:47:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 213,
                    "id": 237,
                    "nodeType": "Return",
                    "src": "3116:54:0"
                  },
                  "id": 238,
                  "nodeType": "IfStatement",
                  "src": "3069:101:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3100:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 213,
                    "id": 229,
                    "nodeType": "Return",
                    "src": "3093:8:0"
                  }
                }
              ]
            },
            "documentation": {
              "id": 209,
              "nodeType": "StructuredDocumentation",
              "src": "2865:43:0",
              "text": "@dev Get the rewards % of current epoch"
            },
            "functionSelector": "be084c77",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentRewardsRate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2943:2:0"
            },
            "returnParameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 240,
                  "src": "2967:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2967:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2966:9:0"
            },
            "scope": 421,
            "src": "2913:264:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "3298:208:0",
              "statements": [
                {
                  "assignments": [
                    247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 247,
                      "mutability": "mutable",
                      "name": "epoch",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 274,
                      "src": "3308:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 246,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3308:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3346:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 248,
                          "name": "getCurrentEpoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "3324:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3324:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 823,
                      "src": "3324:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3324:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3308:40:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 254,
                      "name": "epoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "3362:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3371:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3362:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 259,
                  "nodeType": "IfStatement",
                  "src": "3358:30:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 257,
                      "name": "MAX_BPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "3381:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 245,
                    "id": 258,
                    "nodeType": "Return",
                    "src": "3374:14:0"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 260,
                      "name": "epoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "3402:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 261,
                      "name": "finalEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "3410:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3402:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 269,
                              "name": "rewardReductionPerEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "3474:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 267,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 247,
                              "src": "3464:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 903,
                            "src": "3464:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3464:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 265,
                          "name": "MAX_BPS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "3452:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 840,
                        "src": "3452:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3452:47:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 245,
                    "id": 272,
                    "nodeType": "Return",
                    "src": "3445:54:0"
                  },
                  "id": 273,
                  "nodeType": "IfStatement",
                  "src": "3398:101:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3429:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 245,
                    "id": 264,
                    "nodeType": "Return",
                    "src": "3422:8:0"
                  }
                }
              ]
            },
            "documentation": {
              "id": 241,
              "nodeType": "StructuredDocumentation",
              "src": "3183:45:0",
              "text": "@dev Get the rewards % of following epoch"
            },
            "functionSelector": "8d0f7e11",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNextEpochRewardsRate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3265:2:0"
            },
            "returnParameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 275,
                  "src": "3289:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3288:9:0"
            },
            "scope": 421,
            "src": "3233:273:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              592
            ],
            "body": {
              "id": 379,
              "nodeType": "Block",
              "src": "3707:961:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 290,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 280,
                          "src": "3725:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 291,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3736:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3736:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3725:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4261646765724469737472696275746f723a2043616e206f6e6c7920636c61696d20666f72206f776e206163636f756e742e",
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3748:52:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1093cc02b660d578cdc65632b77a31edc324bc227df63227344af5ec2721885c",
                          "typeString": "literal_string \"BadgerDistributor: Can only claim for own account.\""
                        },
                        "value": "BadgerDistributor: Can only claim for own account."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1093cc02b660d578cdc65632b77a31edc324bc227df63227344af5ec2721885c",
                          "typeString": "literal_string \"BadgerDistributor: Can only claim for own account.\""
                        }
                      ],
                      "id": 289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3717:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3717:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "3717:84:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3819:17:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 299,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 278,
                              "src": "3830:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 298,
                            "name": "isClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 497,
                            "src": "3820:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3820:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4261646765724469737472696275746f723a2044726f7020616c726561647920636c61696d65642e",
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3838:42:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_347ffec49d23563b33ffb9799130786e6ba38d7dae32ea05243a6a3598f964d3",
                          "typeString": "literal_string \"BadgerDistributor: Drop already claimed.\""
                        },
                        "value": "BadgerDistributor: Drop already claimed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_347ffec49d23563b33ffb9799130786e6ba38d7dae32ea05243a6a3598f964d3",
                          "typeString": "literal_string \"BadgerDistributor: Drop already claimed.\""
                        }
                      ],
                      "id": 297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3811:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3811:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "3811:70:0"
                },
                {
                  "assignments": [
                    306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 306,
                      "mutability": "mutable",
                      "name": "node",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 379,
                      "src": "3928:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 305,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3928:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 315,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 310,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "3970:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 311,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 280,
                            "src": "3977:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 312,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "3986:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 308,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3953:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3953:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3953:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 307,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3943:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3943:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3928:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 319,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "4042:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 320,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "4055:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 321,
                            "name": "node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "4067:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 317,
                            "name": "MerkleProofUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 794,
                            "src": "4012:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProofUpgradeable_$794_$",
                              "typeString": "type(library MerkleProofUpgradeable)"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 793,
                          "src": "4012:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4012:60:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4261646765724469737472696275746f723a20496e76616c69642070726f6f662e",
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4074:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e48ce91e45dc9162be900d06aa56195284bad520b7eaa060163e63afc6ab456",
                          "typeString": "literal_string \"BadgerDistributor: Invalid proof.\""
                        },
                        "value": "BadgerDistributor: Invalid proof."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e48ce91e45dc9162be900d06aa56195284bad520b7eaa060163e63afc6ab456",
                          "typeString": "literal_string \"BadgerDistributor: Invalid proof.\""
                        }
                      ],
                      "id": 316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4004:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4004:106:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "4004:106:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 327,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "4180:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 326,
                      "name": "_setClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 528,
                      "src": "4168:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4168:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "4168:18:0"
                },
                {
                  "assignments": [
                    331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 331,
                      "mutability": "mutable",
                      "name": "claimable",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 379,
                      "src": "4197:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 330,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4197:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 340,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 338,
                        "name": "MAX_BPS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "4257:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 334,
                              "name": "getCurrentRewardsRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 240,
                              "src": "4228:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4228:23:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 332,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "4217:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 903,
                          "src": "4217:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4217:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 920,
                      "src": "4217:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4217:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4197:68:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 346,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 280,
                            "src": "4318:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 347,
                            "name": "claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "4327:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 343,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 433,
                                "src": "4302:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 342,
                              "name": "IERC20Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1068,
                              "src": "4284:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1068_$",
                                "typeString": "type(contract IERC20Upgradeable)"
                              }
                            },
                            "id": 344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4284:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$1068",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1017,
                          "src": "4284:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4284:53:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e7366657220746f2075736572206661696c65642e",
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4339:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0895c42d5996e8f76f4c023fedf64a73ac72368d894b9d51f81f879f65565ba5",
                          "typeString": "literal_string \"Transfer to user failed.\""
                        },
                        "value": "Transfer to user failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0895c42d5996e8f76f4c023fedf64a73ac72368d894b9d51f81f879f65565ba5",
                          "typeString": "literal_string \"Transfer to user failed.\""
                        }
                      ],
                      "id": 341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4276:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4276:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "4276:90:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 352,
                      "name": "claimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "4433:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 353,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "4446:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4433:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 367,
                  "nodeType": "IfStatement",
                  "src": "4429:155:0",
                  "trueBody": {
                    "id": 366,
                    "nodeType": "Block",
                    "src": "4454:130:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 360,
                                  "name": "rewardsEscrow",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "4510:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 361,
                                  "name": "claimable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 331,
                                  "src": "4525:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 357,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 433,
                                      "src": "4494:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 356,
                                    "name": "IERC20Upgradeable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1068,
                                    "src": "4476:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1068_$",
                                      "typeString": "type(contract IERC20Upgradeable)"
                                    }
                                  },
                                  "id": 358,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4476:24:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$1068",
                                    "typeString": "contract IERC20Upgradeable"
                                  }
                                },
                                "id": 359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1017,
                                "src": "4476:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4476:59:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5472616e7366657220746f2072657761726473457363726f77206661696c65642e",
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4537:35:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_02c466bb6ab8f9a7f81750950f3f388e939449e6abb85ec8c5b4deb5524e4251",
                                "typeString": "literal_string \"Transfer to rewardsEscrow failed.\""
                              },
                              "value": "Transfer to rewardsEscrow failed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_02c466bb6ab8f9a7f81750950f3f388e939449e6abb85ec8c5b4deb5524e4251",
                                "typeString": "literal_string \"Transfer to rewardsEscrow failed.\""
                              }
                            ],
                            "id": 355,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4468:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4468:105:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 365,
                        "nodeType": "ExpressionStatement",
                        "src": "4468:105:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 369,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "4604:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 370,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "4611:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 371,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "4620:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 372,
                        "name": "claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "4628:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 375,
                            "name": "claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "4650:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 373,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "4639:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 840,
                          "src": "4639:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4639:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 368,
                      "name": "Hunt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "4599:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4599:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 378,
                  "nodeType": "EmitStatement",
                  "src": "4594:67:0"
                }
              ]
            },
            "documentation": {
              "id": 276,
              "nodeType": "StructuredDocumentation",
              "src": "3512:31:0",
              "text": "===== Public Actions ====="
            },
            "functionSelector": "2e7ba6ef",
            "id": 380,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 287,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3698:8:0"
            },
            "parameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 380,
                  "src": "3572:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3572:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 380,
                  "src": "3595:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3595:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 380,
                  "src": "3620:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3620:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 380,
                  "src": "3644:30:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 283,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3644:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 284,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3644:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3562:118:0"
            },
            "returnParameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3707:0:0"
            },
            "scope": 421,
            "src": "3548:1120:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 419,
              "nodeType": "Block",
              "src": "4840:278:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 387,
                              "name": "getCurrentRewardsRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 240,
                              "src": "4858:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4858:23:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4885:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4858:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 391,
                              "name": "getCurrentEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 208,
                              "src": "4890:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4890:17:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 393,
                            "name": "finalEpoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "4910:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4890:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4858:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "48756e7420706572696f64206e6f742066696e6973686564",
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4922:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6136e9c42d645428cb41338bd3d3babd1097619ff897edd1690da8ecd7a8d20e",
                          "typeString": "literal_string \"Hunt period not finished\""
                        },
                        "value": "Hunt period not finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6136e9c42d645428cb41338bd3d3babd1097619ff897edd1690da8ecd7a8d20e",
                          "typeString": "literal_string \"Hunt period not finished\""
                        }
                      ],
                      "id": 386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4850:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4850:99:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "4850:99:0"
                },
                {
                  "assignments": [
                    400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 400,
                      "mutability": "mutable",
                      "name": "remainingBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 419,
                      "src": "4959:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 399,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4959:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 410,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 407,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5029:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BadgerHunt_$421",
                              "typeString": "contract BadgerHunt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BadgerHunt_$421",
                              "typeString": "contract BadgerHunt"
                            }
                          ],
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5021:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 405,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5021:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5021:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 402,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "5004:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 401,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1068,
                          "src": "4986:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1068_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4986:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1068",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1007,
                      "src": "4986:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4986:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4959:76:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 415,
                        "name": "rewardsEscrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "5079:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 416,
                        "name": "remainingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "5094:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 412,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "5063:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 411,
                          "name": "IERC20Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1068,
                          "src": "5045:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1068_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5045:24:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$1068",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1017,
                      "src": "5045:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5045:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "5045:66:0"
                }
              ]
            },
            "documentation": {
              "id": 381,
              "nodeType": "StructuredDocumentation",
              "src": "4716:75:0",
              "text": "@notice After hunt is complete, transfer excess funds to rewardsEscrow "
            },
            "functionSelector": "f9f1f302",
            "id": 420,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 384,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 383,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 668,
                  "src": "4830:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4830:9:0"
              }
            ],
            "name": "recycleExcess",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4818:2:0"
            },
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4840:0:0"
            },
            "scope": 421,
            "src": "4796:322:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 422,
        "src": "488:4632:0"
      }
    ],
    "src": "39:5082:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50611521806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80639e34070f116100c3578063f21579321161007c578063f21579321461033b578063f2fde38b14610343578063f51ace7014610369578063f9f1f30214610371578063fc0c546a14610379578063fd967f471461038157610158565b80639e34070f146102e25780639f2e7b1914610313578063a06db7dc1461031b578063b97dd9e214610323578063be084c771461032b578063e58e230a1461033357610158565b806365c5f94a1161011557806365c5f94a14610296578063715018a61461029e578063829eb92c146102a65780638d0f7e11146102ae5780638da5cb5b146102b657806396d857c5146102da57610158565b80632e7ba6ef1461015d5780632eb4a7ab146101eb5780633a98d88e146102055780634ff0876a1461020d5780635a857e5814610215578063601839ae1461026a575b600080fd5b6101e96004803603608081101561017357600080fd5b8135916001600160a01b0360208201351691604082013591908101906080810160608201356401000000008111156101aa57600080fd5b8201836020820111156101bc57600080fd5b803590602001918460208302840111640100000000831117156101de57600080fd5b509092509050610389565b005b6101f3610721565b60408051918252519081900360200190f35b6101f3610727565b6101f361072d565b6101e9600480360361010081101561022c57600080fd5b506001600160a01b03813581169160208101359160408201359160608101359160808201359160a08101359160c082013581169160e0013516610733565b6101e96004803603604081101561028057600080fd5b506001600160a01b038135169060200135610840565b6101f361090b565b6101e9610979565b6101f3610a2d565b6101f3610a33565b6102be610a92565b604080516001600160a01b039092168252519081900360200190f35b6101f3610aa1565b6102ff600480360360208110156102f857600080fd5b5035610aa7565b604080519115158252519081900360200190f35b6101f3610acd565b6101f3610ad3565b6101f3610ad9565b6101f3610b33565b6101f3610b3e565b6102be610b5c565b6101e96004803603602081101561035957600080fd5b50356001600160a01b0316610b6b565b6101f3610c76565b6101e9610c7c565b6102be610e5e565b6101f3610e73565b6001600160a01b03841633146103d05760405162461bcd60e51b81526004018080602001828103825260328152602001806113fc6032913960400191505060405180910390fd5b6103d985610aa7565b156104155760405162461bcd60e51b81526004018080602001828103825260288152602001806114756028913960400191505060405180910390fd5b600085858560405160200180848152602001836001600160a01b031660601b8152601401828152602001935050505060405160208183030381529060405280519060200120905061049d838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506001549150849050610e79565b6104d85760405162461bcd60e51b81526004018080602001828103825260218152602001806114546021913960400191505060405180910390fd5b6104e186610f22565b60006105016127106104fb6104f4610b33565b8890610f49565b90610fab565b9050600060029054906101000a90046001600160a01b03166001600160a01b031663a9059cbb87836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561056f57600080fd5b505af1158015610583573d6000803e3d6000fd5b505050506040513d602081101561059957600080fd5b50516105ec576040805162461bcd60e51b815260206004820152601860248201527f5472616e7366657220746f2075736572206661696c65642e0000000000000000604482015290519081900360640190fd5b8481146106bb5760008054606d546040805163a9059cbb60e01b81526001600160a01b039283166004820152602481018690529051620100009093049091169263a9059cbb926044808401936020939083900390910190829087803b15801561065457600080fd5b505af1158015610668573d6000803e3d6000fd5b505050506040513d602081101561067e57600080fd5b50516106bb5760405162461bcd60e51b81526004018080602001828103825260218152602001806113db6021913960400191505060405180910390fd5b6001600160a01b0386167f8eaf15614908a4e9022141fe4a596b1ab0cb72ab32b25023e3da2a459c9a335c8887846106f38282610fed565b604080519485526020850193909352838301919091526060830152519081900360800190a250505050505050565b60015481565b606c5481565b60695481565b600054610100900460ff168061074c575061074c61102f565b8061075a575060005460ff16155b6107955760405162461bcd60e51b815260040180806020018281038252602e81526020018061149d602e913960400191505060405180910390fd5b600054610100900460ff161580156107c0576000805460ff1961ff0019909116610100171660011790555b6107ca8989610840565b6107d2611035565b6107db82610b6b565b6069879055606a86905560678590556068849055606d80546001600160a01b0319166001600160a01b038516179055612710606b81905560019087908161081e57fe5b0403606c558015610835576000805461ff00191690555b505050505050505050565b600054610100900460ff1680610859575061085961102f565b80610867575060005460ff16155b6108a25760405162461bcd60e51b815260040180806020018281038252602e81526020018061149d602e913960400191505060405180910390fd5b600054610100900460ff161580156108cd576000805460ff1961ff0019909116610100171660011790555b6000805462010000600160b01b031916620100006001600160a01b0386160217905560018290558015610906576000805461ff00191690555b505050565b6000806109256068546067546110e790919063ffffffff16565b90506000610931610ad9565b90508061095057606854606754610947916110e7565b92505050610976565b606954610947906109619083610f49565b606854606754610970916110e7565b906110e7565b90565b610981611141565b6035546001600160a01b039081169116146109e3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6035546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603580546001600160a01b0319169055565b60675481565b600080610a436001610970610ad9565b905080610a5557612710915050610976565b606c54811115610a69576000915050610976565b610a8a610a81606a5483610f4990919063ffffffff16565b61271090610fed565b915050610976565b6035546001600160a01b031690565b60675490565b6101008104600090815260026020526040902054600160ff9092169190911b9081161490565b606a5481565b60685481565b600080610af36068546067546110e790919063ffffffff16565b905080421015610b07576000915050610976565b6000610b134283610fed565b9050610b2c60016069548381610b2557fe5b04906110e7565b9250505090565b600080610a43610ad9565b6000610b576068546067546110e790919063ffffffff16565b905090565b606d546001600160a01b031681565b610b73611141565b6035546001600160a01b03908116911614610bd5576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610c1a5760405162461bcd60e51b815260040180806020018281038252602681526020018061142e6026913960400191505060405180910390fd5b6035546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603580546001600160a01b0319166001600160a01b0392909216919091179055565b606b5481565b610c84611141565b6035546001600160a01b03908116911614610ce6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610cee610b33565b158015610d035750606c54610d01610ad9565b115b610d54576040805162461bcd60e51b815260206004820152601860248201527f48756e7420706572696f64206e6f742066696e69736865640000000000000000604482015290519081900360640190fd5b60008054604080516370a0823160e01b81523060048201529051620100009092046001600160a01b0316916370a0823191602480820192602092909190829003018186803b158015610da557600080fd5b505afa158015610db9573d6000803e3d6000fd5b505050506040513d6020811015610dcf57600080fd5b505160008054606d546040805163a9059cbb60e01b81526001600160a01b03928316600482015260248101869052905194955062010000909204169263a9059cbb92604480840193602093929083900390910190829087803b158015610e3457600080fd5b505af1158015610e48573d6000803e3d6000fd5b505050506040513d602081101561090657600080fd5b6000546201000090046001600160a01b031681565b61271081565b600081815b8551811015610f17576000868281518110610e9557fe5b60200260200101519050808311610edc5782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250610f0e565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b50600101610e7e565b509092149392505050565b610100810460009081526002602052604090208054600160ff9093169290921b9091179055565b600082610f5857506000610fa5565b82820282848281610f6557fe5b0414610fa25760405162461bcd60e51b81526004018080602001828103825260218152602001806114cb6021913960400191505060405180910390fd5b90505b92915050565b6000610fa283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611145565b6000610fa283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506111e7565b303b1590565b600054610100900460ff168061104e575061104e61102f565b8061105c575060005460ff16155b6110975760405162461bcd60e51b815260040180806020018281038252602e81526020018061149d602e913960400191505060405180910390fd5b600054610100900460ff161580156110c2576000805460ff1961ff0019909116610100171660011790555b6110ca611241565b6110d26112e1565b80156110e4576000805461ff00191690555b50565b600082820183811015610fa2576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b600081836111d15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561119657818101518382015260200161117e565b50505050905090810190601f1680156111c35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816111dd57fe5b0495945050505050565b600081848411156112395760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561119657818101518382015260200161117e565b505050900390565b600054610100900460ff168061125a575061125a61102f565b80611268575060005460ff16155b6112a35760405162461bcd60e51b815260040180806020018281038252602e81526020018061149d602e913960400191505060405180910390fd5b600054610100900460ff161580156110d2576000805460ff1961ff00199091166101001716600117905580156110e4576000805461ff001916905550565b600054610100900460ff16806112fa57506112fa61102f565b80611308575060005460ff16155b6113435760405162461bcd60e51b815260040180806020018281038252602e81526020018061149d602e913960400191505060405180910390fd5b600054610100900460ff1615801561136e576000805460ff1961ff0019909116610100171660011790555b6000611378611141565b603580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156110e4576000805461ff00191690555056fe5472616e7366657220746f2072657761726473457363726f77206661696c65642e4261646765724469737472696275746f723a2043616e206f6e6c7920636c61696d20666f72206f776e206163636f756e742e4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734261646765724469737472696275746f723a20496e76616c69642070726f6f662e4261646765724469737472696275746f723a2044726f7020616c726561647920636c61696d65642e496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212207116bbb34c72989be25cf5df79e3175dc0497e897cd265d675ab2aaad8d6168e64736f6c634300060c0033",
  "bytecodeSha1": "9ccfa18ddefaa00594b09808a009b11a9612ae9f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "BadgerHunt",
  "coverageMap": {
    "branches": {
      "0": {
        "BadgerHunt.claim": {
          "56": [
            3725,
            3746,
            true
          ],
          "57": [
            3819,
            3836,
            true
          ],
          "58": [
            4012,
            4072,
            true
          ],
          "59": [
            4284,
            4337,
            true
          ],
          "60": [
            4433,
            4452,
            false
          ],
          "61": [
            4476,
            4535,
            true
          ]
        },
        "BadgerHunt.getCurrentEpoch": {
          "65": [
            2668,
            2688,
            false
          ]
        },
        "BadgerHunt.getNextEpochRewardsRate": {
          "63": [
            3362,
            3372,
            false
          ],
          "64": [
            3402,
            3420,
            false
          ]
        },
        "BadgerHunt.getNextEpochStart": {
          "62": [
            2311,
            2321,
            false
          ]
        },
        "BadgerHunt.recycleExcess": {
          "66": [
            4858,
            4886,
            false
          ],
          "67": [
            4890,
            4920,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "BadgerHunt.recycleExcess": {
          "73": [
            1520,
            1542,
            true
          ]
        },
        "OwnableUpgradeable.transferOwnership": {
          "72": [
            2321,
            2343,
            true
          ]
        }
      },
      "4": {
        "MerkleProofUpgradeable.verify": {
          "71": [
            760,
            788,
            false
          ]
        }
      },
      "5": {
        "SafeMathUpgradeable.add": {
          "76": [
            997,
            1003,
            true
          ]
        },
        "SafeMathUpgradeable.div": {
          "77": [
            3837,
            3842,
            true
          ]
        },
        "SafeMathUpgradeable.mul": {
          "74": [
            2490,
            2496,
            false
          ],
          "75": [
            2576,
            2586,
            true
          ]
        },
        "SafeMathUpgradeable.sub": {
          "78": [
            1870,
            1876,
            true
          ]
        }
      },
      "6": {
        "OwnableUpgradeable.__Ownable_init_unchained": {
          "68": [
            1426,
            1439,
            true
          ],
          "69": [
            1443,
            1459,
            true
          ],
          "70": [
            1464,
            1476,
            true
          ]
        }
      },
      "8": {}
    },
    "statements": {
      "0": {
        "BadgerHunt.claim": {
          "0": [
            3717,
            3801
          ],
          "1": [
            3811,
            3881
          ],
          "2": [
            4004,
            4110
          ],
          "3": [
            4168,
            4186
          ],
          "4": [
            4276,
            4366
          ],
          "5": [
            4468,
            4573
          ],
          "6": [
            4594,
            4661
          ]
        },
        "BadgerHunt.getClaimsStartTime": {
          "27": [
            2062,
            2080
          ]
        },
        "BadgerHunt.getCurrentEpoch": {
          "29": [
            2704,
            2712
          ],
          "30": [
            2798,
            2852
          ]
        },
        "BadgerHunt.getGracePeriodEnd": {
          "31": [
            1902,
            1937
          ]
        },
        "BadgerHunt.getNextEpochRewardsRate": {
          "23": [
            3374,
            3388
          ],
          "24": [
            3422,
            3430
          ],
          "25": [
            3445,
            3499
          ]
        },
        "BadgerHunt.getNextEpochStart": {
          "19": [
            2337,
            2372
          ],
          "20": [
            2403,
            2468
          ]
        },
        "BadgerHunt.initialize": {
          "7": [
            1310,
            1355
          ],
          "8": [
            1366,
            1382
          ],
          "9": [
            1392,
            1417
          ],
          "10": [
            1428,
            1458
          ],
          "11": [
            1468,
            1518
          ],
          "12": [
            1528,
            1554
          ],
          "13": [
            1564,
            1590
          ],
          "14": [
            1601,
            1631
          ],
          "15": [
            1642,
            1667
          ],
          "16": [
            1678,
            1741
          ]
        },
        "BadgerHunt.recycleExcess": {
          "35": [
            4850,
            4949
          ],
          "36": [
            5045,
            5111
          ]
        }
      },
      "1": {
        "MerkleDistributor.__MerkleDistributor_init": {
          "17": [
            706,
            720
          ],
          "18": [
            730,
            754
          ]
        },
        "MerkleDistributor._setClaimed": {
          "41": [
            1248,
            1338
          ]
        },
        "MerkleDistributor.isClaimed": {
          "28": [
            1052,
            1085
          ]
        }
      },
      "2": {
        "ContextUpgradeable._msgSender": {
          "51": [
            900,
            917
          ]
        }
      },
      "3": {
        "OwnableUpgradeable.__Ownable_init": {
          "48": [
            973,
            999
          ],
          "49": [
            1009,
            1035
          ]
        },
        "OwnableUpgradeable.__Ownable_init_unchained": {
          "54": [
            1157,
            1175
          ],
          "55": [
            1185,
            1233
          ]
        },
        "OwnableUpgradeable.owner": {
          "26": [
            1373,
            1386
          ]
        },
        "OwnableUpgradeable.renounceOwnership": {
          "21": [
            2003,
            2048
          ],
          "22": [
            2058,
            2077
          ]
        },
        "OwnableUpgradeable.transferOwnership": {
          "32": [
            2313,
            2386
          ],
          "33": [
            2396,
            2439
          ],
          "34": [
            2449,
            2466
          ]
        }
      },
      "4": {
        "MerkleProofUpgradeable.verify": {
          "37": [
            886,
            956
          ],
          "38": [
            1073,
            1143
          ],
          "39": [
            691,
            694
          ],
          "40": [
            1253,
            1280
          ]
        }
      },
      "5": {
        "SafeMathUpgradeable.add": {
          "50": [
            989,
            1035
          ]
        },
        "SafeMathUpgradeable.div": {
          "45": [
            3189,
            3235
          ],
          "52": [
            3829,
            3857
          ]
        },
        "SafeMathUpgradeable.mul": {
          "42": [
            2512,
            2520
          ],
          "43": [
            2568,
            2624
          ],
          "44": [
            2635,
            2643
          ]
        },
        "SafeMathUpgradeable.sub": {
          "46": [
            1409,
            1459
          ],
          "53": [
            1862,
            1891
          ]
        }
      },
      "6": {
        "Initializable._isConstructor": {
          "47": [
            2438,
            2452
          ]
        }
      },
      "8": {}
    }
  },
  "dependencies": [
    "ContextUpgradeable",
    "IMerkleDistributor",
    "Initializable",
    "MerkleDistributor",
    "MerkleProofUpgradeable",
    "OwnableUpgradeable",
    "SafeMathUpgradeable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "488:4632:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3548:1120;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3548:1120:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3548:1120:0;;-1:-1:-1;3548:1120:0;-1:-1:-1;3548:1120:0;:::i;:::-;;474:25:1;;;:::i;:::-;;;;;;;;;;;;;;;;825::0;;;:::i;709:28::-;;;:::i;1012:736::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1012:736:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;606:155:1:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;606:155:1;;;;;;;;:::i;2131:354:0:-;;;:::i;1939:145:3:-;;;:::i;644:26:0:-;;;:::i;3233:273::-;;;:::i;1316:77:3:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1316:77:3;;;;;;;;;;;;;;1992:95:0;;;:::i;767:325:1:-;;;;;;;;;;;;;;;;-1:-1:-1;767:325:1;;:::i;:::-;;;;;;;;;;;;;;;;;;743:38:0;;;:::i;676:26::-;;;:::i;2533:326::-;;;:::i;2913:264::-;;;:::i;1833:111::-;;;:::i;857:28::-;;;:::i;2233:240:3:-;;;;;;;;;;;;;;;;-1:-1:-1;2233:240:3;-1:-1:-1;;;;;2233:240:3;;:::i;787:32:0:-;;;:::i;4796:322::-;;;:::i;448:20:1:-;;;:::i;598:39:0:-;;;:::i;3548:1120::-;-1:-1:-1;;;;;3725:21:0;;3736:10;3725:21;3717:84;;;;-1:-1:-1;;;3717:84:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3820:16;3830:5;3820:9;:16::i;:::-;3819:17;3811:70;;;;-1:-1:-1;;;3811:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3928:12;3970:5;3977:7;3986:6;3953:40;;;;;;;;;;;-1:-1:-1;;;;;3953:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3943:51;;;;;;3928:66;;4012:60;4042:11;;4012:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4055:10:0;;;-1:-1:-1;4067:4:0;;-1:-1:-1;4012:29:0;:60::i;:::-;4004:106;;;;-1:-1:-1;;;4004:106:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4168:18;4180:5;4168:11;:18::i;:::-;4197:17;4217:48;632:5;4217:35;4228:23;:21;:23::i;:::-;4217:6;;:10;:35::i;:::-;:39;;:48::i;:::-;4197:68;;4302:5;;;;;;;;;-1:-1:-1;;;;;4302:5:0;-1:-1:-1;;;;;4284:33:0;;4318:7;4327:9;4284:53;;;;;;;;;;;;;-1:-1:-1;;;;;4284:53:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4284:53:0;4276:90;;;;;-1:-1:-1;;;4276:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4446:6;4433:9;:19;4429:155;;4494:5;;;4510:13;;4476:59;;;-1:-1:-1;;;4476:59:0;;-1:-1:-1;;;;;4510:13:0;;;4476:59;;;;;;;;;;;;4494:5;;;;;;;;4476:33;;:59;;;;;;;;;;;;;;;;;4494:5;4476:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4476:59:0;4468:105;;;;-1:-1:-1;;;4468:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4599:62:0;;;4604:5;4620:6;4628:9;4639:21;4620:6;4628:9;4639:10;:21::i;:::-;4599:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3548:1120;;;;;;;:::o;474:25:1:-;;;;:::o;825::0:-;;;;:::o;709:28::-;;;;:::o;1012:736::-;1426:13:6;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:6;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:6;;;;;1652:19;1634:4;1652:19;;;1584:98;1310:45:0::1;1335:6;1343:11;1310:24;:45::i;:::-;1366:16;:14;:16::i;:::-;1392:25;1410:6;1392:17;:25::i;:::-;1428:13;:30:::0;;;1468:23:::1;:50:::0;;;1528:11:::1;:26:::0;;;1564:11:::1;:26:::0;;;1601:13:::1;:30:::0;;-1:-1:-1;;;;;;1601:30:0::1;-1:-1:-1::0;;;;;1601:30:0;::::1;;::::0;;1662:5:::1;1642:17;:25:::0;;;-1:-1:-1;;1468:50:0;;;1692:44:::1;;;;;1691:50;1678:10;:63:::0;1704:66:6;;;;1754:5;1738:21;;-1:-1:-1;;1738:21:6;;;1704:66;1012:736:0;;;;;;;;;:::o;606:155:1:-;1426:13:6;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:6;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:6;;;;;1652:19;1634:4;1652:19;;;1584:98;706:5:1::1;:14:::0;;-1:-1:-1;;;;;;706:14:1::1;::::0;-1:-1:-1;;;;;706:14:1;::::1;;;::::0;;-1:-1:-1;730:24:1;;;1704:66:6;;;;1754:5;1738:21;;-1:-1:-1;;1738:21:6;;;1704:66;606:155:1;;;:::o;2131:354:0:-;2181:7;2200:22;2225:28;2241:11;;2225;;:15;;:28;;;;:::i;:::-;2200:53;;2263:13;2279:17;:15;:17::i;:::-;2263:33;-1:-1:-1;2311:10:0;2307:172;;2360:11;;2344;;:28;;:15;:28::i;:::-;2337:35;;;;;;2307:172;2443:13;;2410:58;;2443:24;;2461:5;2443:17;:24::i;:::-;2426:11;;2410;;:28;;:15;:28::i;:::-;:32;;:58::i;2131:354::-;;:::o;1939:145:3:-;1530:12;:10;:12::i;:::-;1520:6;;-1:-1:-1;;;;;1520:6:3;;;:22;;;1512:67;;;;;-1:-1:-1;;;1512:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2029:6:::1;::::0;2008:40:::1;::::0;2045:1:::1;::::0;-1:-1:-1;;;;;2029:6:3::1;::::0;2008:40:::1;::::0;2045:1;;2008:40:::1;2058:6;:19:::0;;-1:-1:-1;;;;;;2058:19:3::1;::::0;;1939:145::o;644:26:0:-;;;;:::o;3233:273::-;3289:7;3308:13;3324:24;3346:1;3324:17;:15;:17::i;:24::-;3308:40;-1:-1:-1;3362:10:0;3358:30;;632:5;3374:14;;;;;3358:30;3410:10;;3402:5;:18;3398:101;;;3429:1;3422:8;;;;;3398:101;3452:47;3464:34;3474:23;;3464:5;:9;;:34;;;;:::i;:::-;632:5;;3452:11;:47::i;:::-;3445:54;;;;;1316:77:3;1380:6;;-1:-1:-1;;;;;1380:6:3;1316:77;:::o;1992:95:0:-;2069:11;;1992:95;:::o;767:325:1:-;882:3;874:11;;831:4;964:31;;;:13;:31;;;;;;1021:1;921:11;;;;1021:20;;;;1059:18;;;:26;;767:325::o;743:38:0:-;;;;:::o;676:26::-;;;;:::o;2533:326::-;2581:7;2600:22;2625:28;2641:11;;2625;;:15;;:28;;;;:::i;:::-;2600:53;;2674:14;2668:3;:20;2664:59;;;2711:1;2704:8;;;;;2664:59;2732:30;2765:23;:3;2773:14;2765:7;:23::i;:::-;2732:56;;2805:47;2850:1;2831:13;;2806:22;:38;;;;;;;2805:44;:47::i;:::-;2798:54;;;;2533:326;:::o;2913:264::-;2967:7;2986:13;3002:17;:15;:17::i;1833:111::-;1883:7;1909:28;1925:11;;1909;;:15;;:28;;;;:::i;:::-;1902:35;;1833:111;:::o;857:28::-;;;-1:-1:-1;;;;;857:28:0;;:::o;2233:240:3:-;1530:12;:10;:12::i;:::-;1520:6;;-1:-1:-1;;;;;1520:6:3;;;:22;;;1512:67;;;;;-1:-1:-1;;;1512:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2321:22:3;::::1;2313:73;;;;-1:-1:-1::0;;;2313:73:3::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2422:6;::::0;2401:38:::1;::::0;-1:-1:-1;;;;;2401:38:3;;::::1;::::0;2422:6:::1;::::0;2401:38:::1;::::0;2422:6:::1;::::0;2401:38:::1;2449:6;:17:::0;;-1:-1:-1;;;;;;2449:17:3::1;-1:-1:-1::0;;;;;2449:17:3;;;::::1;::::0;;;::::1;::::0;;2233:240::o;787:32:0:-;;;;:::o;4796:322::-;1530:12:3;:10;:12::i;:::-;1520:6;;-1:-1:-1;;;;;1520:6:3;;;:22;;;1512:67;;;;;-1:-1:-1;;;1512:67:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:23:0::1;:21;:23::i;:::-;:28:::0;:62;::::1;;;;4910:10;;4890:17;:15;:17::i;:::-;:30;4858:62;4850:99;;;::::0;;-1:-1:-1;;;4850:99:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;4959:24;5004:5:::0;;4986:49:::1;::::0;;-1:-1:-1;;;4986:49:0;;5029:4:::1;4986:49;::::0;::::1;::::0;;;5004:5;;;::::1;-1:-1:-1::0;;;;;5004:5:0::1;::::0;4986:34:::1;::::0;:49;;;;;::::1;::::0;;;;;;;;;5004:5;4986:49;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;4986:49:0;5063:5:::1;::::0;;5079:13:::1;::::0;5045:66:::1;::::0;;-1:-1:-1;;;5045:66:0;;-1:-1:-1;;;;;5079:13:0;;::::1;5045:66;::::0;::::1;::::0;;;;;;;;;4986:49;;-1:-1:-1;5063:5:0;;;::::1;;::::0;5045:33:::1;::::0;:66;;;;;4986:49:::1;::::0;5045:66;;;;;;;;;;;5063:5;5045:66;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;448:20:1::0;;;;;;-1:-1:-1;;;;;448:20:1;;:::o;598:39:0:-;632:5;598:39;:::o;508:779:4:-;599:4;638;599;653:515;677:5;:12;673:1;:16;653:515;;;710:20;733:5;739:1;733:8;;;;;;;;;;;;;;710:31;;776:12;760;:28;756:402;;928:12;942;911:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;901:55;;;;;;886:70;;756:402;;;1115:12;1129;1098:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1088:55;;;;;;1073:70;;756:402;-1:-1:-1;691:3:4;;653:515;;;-1:-1:-1;1260:20:4;;;;508:779;-1:-1:-1;;;508:779:4:o;1098:247:1:-;1188:3;1180:11;;1153:24;1282:31;;;:13;:31;;;;;;;1317:1;1227:11;;;;1317:20;;;;1282:56;;;1248:90;;1098:247::o;2191:459:5:-;2249:7;2490:6;2486:45;;-1:-1:-1;2519:1:5;2512:8;;2486:45;2553:5;;;2557:1;2553;:5;:1;2576:5;;;;;:10;2568:56;;;;-1:-1:-1;;;2568:56:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2642:1;-1:-1:-1;2191:459:5;;;;;:::o;3112:130::-;3170:7;3196:39;3200:1;3203;3196:39;;;;;;;;;;;;;;;;;:3;:39::i;1332:134::-;1390:7;1416:43;1420:1;1423;1416:43;;;;;;;;;;;;;;;;;:3;:43::i;1866:593:6:-;2302:4;2410:17;2445:7;1866:593;:::o;916:126:3:-;1426:13:6;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:6;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:6;;;;;1652:19;1634:4;1652:19;;;1584:98;973:26:3::1;:24;:26::i;:::-;1009;:24;:26::i;:::-;1708:14:6::0;1704:66;;;1754:5;1738:21;;-1:-1:-1;;1738:21:6;;;1704:66;916:126:3;:::o;885:176:5:-;943:7;974:5;;;997:6;;;;989:46;;;;;-1:-1:-1;;;989:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;820:104:2;907:10;820:104;:::o;3724:272:5:-;3810:7;3844:12;3837:5;3829:28;;;;-1:-1:-1;;;3829:28:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3867:9;3883:1;3879;:5;;;;;;;3724:272;-1:-1:-1;;;;;3724:272:5:o;1757:187::-;1843:7;1878:12;1870:6;;;;1862:29;;;;-1:-1:-1;;;1862:29:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1913:5:5;;;1757:187::o;751:64:2:-;1426:13:6;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:6;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:6;;;;;1652:19;1634:4;1652:19;;;1708:14;1704:66;;;1754:5;1738:21;;-1:-1:-1;;1738:21:6;;;751:64:2;:::o;1048:192:3:-;1426:13:6;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:6;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:6;;;;;1652:19;1634:4;1652:19;;;1584:98;1115:17:3::1;1135:12;:10;:12::i;:::-;1157:6;:18:::0;;-1:-1:-1;;;;;;1157:18:3::1;-1:-1:-1::0;;;;;1157:18:3;::::1;::::0;;::::1;::::0;;;1190:43:::1;::::0;1157:18;;-1:-1:-1;1157:18:3;-1:-1:-1;;1190:43:3::1;::::0;-1:-1:-1;;1190:43:3::1;1692:1:6;1708:14:::0;1704:66;;;1754:5;1738:21;;-1:-1:-1;;1738:21:6;;;1048:192:3;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "claim(uint256,address,uint256,bytes32[])": {
        "notice": "===== Public Actions ====="
      },
      "getClaimsStartTime()": {
        "details": "Get claims start timestamp"
      },
      "getCurrentEpoch()": {
        "details": "Get the current epoch number"
      },
      "getCurrentRewardsRate()": {
        "details": "Get the rewards % of current epoch"
      },
      "getGracePeriodEnd()": {
        "details": "Get grace period end timestamp",
        "notice": "===== View Functions ====="
      },
      "getNextEpochRewardsRate()": {
        "details": "Get the rewards % of following epoch"
      },
      "getNextEpochStart()": {
        "details": "Get the next epoch start"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "recycleExcess()": {
        "notice": "After hunt is complete, transfer excess funds to rewardsEscrow "
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    488,
    5120
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E34070F GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xF2157932 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF2157932 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xF51ACE70 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xF9F1F302 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xFD967F47 EQ PUSH2 0x381 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x9E34070F EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x9F2E7B19 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xA06DB7DC EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xB97DD9E2 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xBE084C77 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xE58E230A EQ PUSH2 0x333 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x65C5F94A GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x65C5F94A EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x829EB92C EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x8D0F7E11 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x96D857C5 EQ PUSH2 0x2DA JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x2E7BA6EF EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x3A98D88E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x4FF0876A EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x5A857E58 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x601839AE EQ PUSH2 0x26A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x389 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH2 0x721 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0xC0 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0xE0 ADD CALLDATALOAD AND PUSH2 0x733 JUMP JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x840 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x90B JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x979 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0xACD JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0xAD3 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0xB33 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x2BE PUSH2 0xB5C JUMP JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0xC7C JUMP JUMPDEST PUSH2 0x2BE PUSH2 0xE5E JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13FC PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D9 DUP6 PUSH2 0xAA7 JUMP JUMPDEST ISZERO PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1475 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x49D DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x1 SLOAD SWAP2 POP DUP5 SWAP1 POP PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1454 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E1 DUP7 PUSH2 0xF22 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x501 PUSH2 0x2710 PUSH2 0x4FB PUSH2 0x4F4 PUSH2 0xB33 JUMP JUMPDEST DUP9 SWAP1 PUSH2 0xF49 JUMP JUMPDEST SWAP1 PUSH2 0xFAB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP8 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x583 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x5EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220746F2075736572206661696C65642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 EQ PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x6D SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH3 0x10000 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP5 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x668 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x6BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13DB PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH32 0x8EAF15614908A4E9022141FE4A596B1AB0CB72AB32B25023E3DA2A459C9A335C DUP9 DUP8 DUP5 PUSH2 0x6F3 DUP3 DUP3 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x69 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x74C JUMPI POP PUSH2 0x74C PUSH2 0x102F JUMP JUMPDEST DUP1 PUSH2 0x75A JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x149D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x7C0 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x7CA DUP10 DUP10 PUSH2 0x840 JUMP JUMPDEST PUSH2 0x7D2 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x7DB DUP3 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x69 DUP8 SWAP1 SSTORE PUSH1 0x6A DUP7 SWAP1 SSTORE PUSH1 0x67 DUP6 SWAP1 SSTORE PUSH1 0x68 DUP5 SWAP1 SSTORE PUSH1 0x6D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH2 0x2710 PUSH1 0x6B DUP2 SWAP1 SSTORE PUSH1 0x1 SWAP1 DUP8 SWAP1 DUP2 PUSH2 0x81E JUMPI INVALID JUMPDEST DIV SUB PUSH1 0x6C SSTORE DUP1 ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x859 JUMPI POP PUSH2 0x859 PUSH2 0x102F JUMP JUMPDEST DUP1 PUSH2 0x867 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x8A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x149D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH3 0x10000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND MUL OR SWAP1 SSTORE PUSH1 0x1 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x925 PUSH1 0x68 SLOAD PUSH1 0x67 SLOAD PUSH2 0x10E7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x931 PUSH2 0xAD9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x950 JUMPI PUSH1 0x68 SLOAD PUSH1 0x67 SLOAD PUSH2 0x947 SWAP2 PUSH2 0x10E7 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x976 JUMP JUMPDEST PUSH1 0x69 SLOAD PUSH2 0x947 SWAP1 PUSH2 0x961 SWAP1 DUP4 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x67 SLOAD PUSH2 0x970 SWAP2 PUSH2 0x10E7 JUMP JUMPDEST SWAP1 PUSH2 0x10E7 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x981 PUSH2 0x1141 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x9E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x35 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x35 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x67 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA43 PUSH1 0x1 PUSH2 0x970 PUSH2 0xAD9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA55 JUMPI PUSH2 0x2710 SWAP2 POP POP PUSH2 0x976 JUMP JUMPDEST PUSH1 0x6C SLOAD DUP2 GT ISZERO PUSH2 0xA69 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x976 JUMP JUMPDEST PUSH2 0xA8A PUSH2 0xA81 PUSH1 0x6A SLOAD DUP4 PUSH2 0xF49 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2710 SWAP1 PUSH2 0xFED JUMP JUMPDEST SWAP2 POP POP PUSH2 0x976 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x67 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x100 DUP2 DIV PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 SHL SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x6A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x68 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAF3 PUSH1 0x68 SLOAD PUSH1 0x67 SLOAD PUSH2 0x10E7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 TIMESTAMP LT ISZERO PUSH2 0xB07 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x976 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB13 TIMESTAMP DUP4 PUSH2 0xFED JUMP JUMPDEST SWAP1 POP PUSH2 0xB2C PUSH1 0x1 PUSH1 0x69 SLOAD DUP4 DUP2 PUSH2 0xB25 JUMPI INVALID JUMPDEST DIV SWAP1 PUSH2 0x10E7 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA43 PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB57 PUSH1 0x68 SLOAD PUSH1 0x67 SLOAD PUSH2 0x10E7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xB73 PUSH2 0x1141 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xBD5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x142E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x35 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x35 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6B SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC84 PUSH2 0x1141 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xCE6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCEE PUSH2 0xB33 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xD03 JUMPI POP PUSH1 0x6C SLOAD PUSH2 0xD01 PUSH2 0xAD9 JUMP JUMPDEST GT JUMPDEST PUSH2 0xD54 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x48756E7420706572696F64206E6F742066696E69736865640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH3 0x10000 SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x6D SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD SWAP5 SWAP6 POP PUSH3 0x10000 SWAP1 SWAP3 DIV AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP5 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP3 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xF17 JUMPI PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE95 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0xEDC JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0xF0E JUMP JUMPDEST DUP1 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xE7E JUMP JUMPDEST POP SWAP1 SWAP3 EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x100 DUP2 DIV PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 SHL SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF58 JUMPI POP PUSH1 0x0 PUSH2 0xFA5 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xF65 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xFA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14CB PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1145 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA2 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x11E7 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x104E JUMPI POP PUSH2 0x104E PUSH2 0x102F JUMP JUMPDEST DUP1 PUSH2 0x105C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x149D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x10C2 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x10CA PUSH2 0x1241 JUMP JUMPDEST PUSH2 0x10D2 PUSH2 0x12E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10E4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xFA2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1196 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x117E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11C3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x11DD JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1196 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x117E JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x125A JUMPI POP PUSH2 0x125A PUSH2 0x102F JUMP JUMPDEST DUP1 PUSH2 0x1268 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x12A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x149D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x10D2 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x10E4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x12FA JUMPI POP PUSH2 0x12FA PUSH2 0x102F JUMP JUMPDEST DUP1 PUSH2 0x1308 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1343 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x149D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x136E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 PUSH2 0x1378 PUSH2 0x1141 JUMP JUMPDEST PUSH1 0x35 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP DUP1 ISZERO PUSH2 0x10E4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP INVALID SLOAD PUSH19 0x616E7366657220746F20726577617264734573 PUSH4 0x726F7720 PUSH7 0x61696C65642E42 PUSH2 0x6467 PUSH6 0x724469737472 PUSH10 0x6275746F723A2043616E KECCAK256 PUSH16 0x6E6C7920636C61696D20666F72206F77 PUSH15 0x206163636F756E742E4F776E61626C PUSH6 0x3A206E657720 PUSH16 0x776E657220697320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x6573734261646765724469737472696275746F PUSH19 0x3A20496E76616C69642070726F6F662E426164 PUSH8 0x6572446973747269 PUSH3 0x75746F PUSH19 0x3A2044726F7020616C726561647920636C6169 PUSH14 0x65642E496E697469616C697A6162 PUSH13 0x653A20636F6E74726163742069 PUSH20 0x20616C726561647920696E697469616C697A6564 MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 PUSH18 0x16BBB34C72989BE25CF5DF79E3175DC0497E DUP10 PUSH29 0xD265D675AB2AAAD8D6168E64736F6C634300060C003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        488,
        5120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "25": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9E34070F"
    },
    "38": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2157932"
    },
    "49": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2157932"
    },
    "60": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33B"
    },
    "64": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2FDE38B"
    },
    "71": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x343"
    },
    "75": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF51ACE70"
    },
    "82": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x369"
    },
    "86": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF9F1F302"
    },
    "93": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x371"
    },
    "97": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFC0C546A"
    },
    "104": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x379"
    },
    "108": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFD967F47"
    },
    "115": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "116": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "119": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "120": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "123": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMP",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9E34070F"
    },
    "131": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E2"
    },
    "135": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9F2E7B19"
    },
    "142": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x313"
    },
    "146": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA06DB7DC"
    },
    "153": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31B"
    },
    "157": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB97DD9E2"
    },
    "164": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x323"
    },
    "168": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBE084C77"
    },
    "175": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32B"
    },
    "179": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE58E230A"
    },
    "186": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "187": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x333"
    },
    "190": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "191": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "194": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMP",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x65C5F94A"
    },
    "202": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "GT",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x65C5F94A"
    },
    "213": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x296"
    },
    "217": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x715018A6"
    },
    "224": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "225": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29E"
    },
    "228": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "229": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x829EB92C"
    },
    "235": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "236": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A6"
    },
    "239": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "240": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8D0F7E11"
    },
    "246": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "247": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE"
    },
    "250": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "251": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "257": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "258": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B6"
    },
    "261": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "262": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "263": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x96D857C5"
    },
    "268": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "269": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DA"
    },
    "272": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "273": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "276": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMP",
      "path": "0"
    },
    "277": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "278": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "279": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2E7BA6EF"
    },
    "284": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "285": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15D"
    },
    "288": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "289": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "290": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2EB4A7AB"
    },
    "295": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "296": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB"
    },
    "299": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "300": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "301": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3A98D88E"
    },
    "306": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "307": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x205"
    },
    "310": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "311": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "312": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4FF0876A"
    },
    "317": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "318": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20D"
    },
    "321": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "322": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "323": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5A857E58"
    },
    "328": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "329": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x215"
    },
    "332": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "333": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "334": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x601839AE"
    },
    "339": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "EQ",
      "path": "0"
    },
    "340": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26A"
    },
    "343": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "344": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "345": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "347": {
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "348": {
      "first_revert": true,
      "fn": null,
      "offset": [
        488,
        5120
      ],
      "op": "REVERT",
      "path": "0"
    },
    "349": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "350": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E9"
    },
    "353": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "355": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP1",
      "path": "0"
    },
    "356": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "357": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "SUB",
      "path": "0"
    },
    "358": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "360": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP2",
      "path": "0"
    },
    "361": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "LT",
      "path": "0"
    },
    "362": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "363": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173"
    },
    "366": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "367": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "369": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP1",
      "path": "0"
    },
    "370": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "REVERT",
      "path": "0"
    },
    "371": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "372": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP2",
      "path": "0"
    },
    "373": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "374": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "381": {
      "op": "SHL"
    },
    "382": {
      "op": "SUB"
    },
    "383": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "385": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP3",
      "path": "0"
    },
    "386": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "ADD",
      "path": "0"
    },
    "387": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "388": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "AND",
      "path": "0"
    },
    "389": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "390": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "392": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP3",
      "path": "0"
    },
    "393": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "ADD",
      "path": "0"
    },
    "394": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "395": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "396": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "397": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP2",
      "path": "0"
    },
    "398": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "ADD",
      "path": "0"
    },
    "399": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "400": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "402": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP2",
      "path": "0"
    },
    "403": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "ADD",
      "path": "0"
    },
    "404": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "406": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP3",
      "path": "0"
    },
    "407": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "ADD",
      "path": "0"
    },
    "408": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "409": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "415": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP2",
      "path": "0"
    },
    "416": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "GT",
      "path": "0"
    },
    "417": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "418": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA"
    },
    "421": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "422": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "424": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP1",
      "path": "0"
    },
    "425": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "REVERT",
      "path": "0"
    },
    "426": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "427": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP3",
      "path": "0"
    },
    "428": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "ADD",
      "path": "0"
    },
    "429": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP4",
      "path": "0"
    },
    "430": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "432": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP3",
      "path": "0"
    },
    "433": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "ADD",
      "path": "0"
    },
    "434": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "GT",
      "path": "0"
    },
    "435": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "436": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BC"
    },
    "439": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "440": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "442": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP1",
      "path": "0"
    },
    "443": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "REVERT",
      "path": "0"
    },
    "444": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "445": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP1",
      "path": "0"
    },
    "446": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "447": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "448": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "450": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "ADD",
      "path": "0"
    },
    "451": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "452": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP5",
      "path": "0"
    },
    "453": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "455": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP4",
      "path": "0"
    },
    "456": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "MUL",
      "path": "0"
    },
    "457": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP5",
      "path": "0"
    },
    "458": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "ADD",
      "path": "0"
    },
    "459": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "GT",
      "path": "0"
    },
    "460": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x100000000"
    },
    "466": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP4",
      "path": "0"
    },
    "467": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "GT",
      "path": "0"
    },
    "468": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "OR",
      "path": "0"
    },
    "469": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "470": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DE"
    },
    "473": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "474": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "476": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "DUP1",
      "path": "0"
    },
    "477": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "REVERT",
      "path": "0"
    },
    "478": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "479": {
      "op": "POP"
    },
    "480": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "481": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "484": {
      "op": "POP"
    },
    "485": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x389"
    },
    "488": {
      "fn": "BadgerHunt.claim",
      "jump": "i",
      "offset": [
        3548,
        4668
      ],
      "op": "JUMP",
      "path": "0"
    },
    "489": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "490": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "STOP",
      "path": "0"
    },
    "491": {
      "offset": [
        474,
        499
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "492": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F3"
    },
    "495": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x721"
    },
    "498": {
      "fn": "BadgerHunt.claim",
      "jump": "i",
      "offset": [
        474,
        499
      ],
      "op": "JUMP",
      "path": "1"
    },
    "499": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "500": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "502": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "DUP1",
      "path": "1"
    },
    "503": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "504": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "505": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "DUP3",
      "path": "1"
    },
    "506": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "507": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "508": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "509": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "DUP2",
      "path": "1"
    },
    "510": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "511": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "SUB",
      "path": "1"
    },
    "512": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "514": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "ADD",
      "path": "1"
    },
    "515": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "516": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "RETURN",
      "path": "1"
    },
    "517": {
      "offset": [
        825,
        850
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "518": {
      "fn": "BadgerHunt.claim",
      "offset": [
        825,
        850
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "521": {
      "fn": "BadgerHunt.claim",
      "offset": [
        825,
        850
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x727"
    },
    "524": {
      "fn": "BadgerHunt.claim",
      "jump": "i",
      "offset": [
        825,
        850
      ],
      "op": "JUMP",
      "path": "0"
    },
    "525": {
      "offset": [
        709,
        737
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "526": {
      "fn": "BadgerHunt.claim",
      "offset": [
        709,
        737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "529": {
      "fn": "BadgerHunt.claim",
      "offset": [
        709,
        737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72D"
    },
    "532": {
      "fn": "BadgerHunt.claim",
      "jump": "i",
      "offset": [
        709,
        737
      ],
      "op": "JUMP",
      "path": "0"
    },
    "533": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "534": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E9"
    },
    "537": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "539": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "DUP1",
      "path": "0"
    },
    "540": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "541": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "SUB",
      "path": "0"
    },
    "542": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "545": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "DUP2",
      "path": "0"
    },
    "546": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "LT",
      "path": "0"
    },
    "547": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "548": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22C"
    },
    "551": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "552": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "554": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "DUP1",
      "path": "0"
    },
    "555": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "REVERT",
      "path": "0"
    },
    "556": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "557": {
      "op": "POP"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "564": {
      "op": "SHL"
    },
    "565": {
      "op": "SUB"
    },
    "566": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "DUP2",
      "path": "0"
    },
    "567": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "568": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "DUP2",
      "path": "0"
    },
    "569": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "AND",
      "path": "0"
    },
    "570": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "571": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "573": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "DUP2",
      "path": "0"
    },
    "574": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "ADD",
      "path": "0"
    },
    "575": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "576": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "577": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "579": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "DUP3",
      "path": "0"
    },
    "580": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "ADD",
      "path": "0"
    },
    "581": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "582": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "583": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "585": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "DUP2",
      "path": "0"
    },
    "586": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "ADD",
      "path": "0"
    },
    "587": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "588": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "589": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "591": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "DUP3",
      "path": "0"
    },
    "592": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "ADD",
      "path": "0"
    },
    "593": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "594": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "595": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "597": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "DUP2",
      "path": "0"
    },
    "598": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "ADD",
      "path": "0"
    },
    "599": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "600": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "601": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "603": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "DUP3",
      "path": "0"
    },
    "604": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "ADD",
      "path": "0"
    },
    "605": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "606": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "DUP2",
      "path": "0"
    },
    "607": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "AND",
      "path": "0"
    },
    "608": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "609": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "611": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "ADD",
      "path": "0"
    },
    "612": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "613": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "AND",
      "path": "0"
    },
    "614": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x733"
    },
    "617": {
      "fn": "BadgerHunt.initialize",
      "jump": "i",
      "offset": [
        1012,
        1748
      ],
      "op": "JUMP",
      "path": "0"
    },
    "618": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "619": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E9"
    },
    "622": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "624": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "DUP1",
      "path": "1"
    },
    "625": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "626": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "SUB",
      "path": "1"
    },
    "627": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "629": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "DUP2",
      "path": "1"
    },
    "630": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "LT",
      "path": "1"
    },
    "631": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "632": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x280"
    },
    "635": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "636": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "638": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "DUP1",
      "path": "1"
    },
    "639": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "REVERT",
      "path": "1"
    },
    "640": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "641": {
      "op": "POP"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "648": {
      "op": "SHL"
    },
    "649": {
      "op": "SUB"
    },
    "650": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "DUP2",
      "path": "1"
    },
    "651": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "652": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "AND",
      "path": "1"
    },
    "653": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "654": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "656": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "ADD",
      "path": "1"
    },
    "657": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "658": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x840"
    },
    "661": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "jump": "i",
      "offset": [
        606,
        761
      ],
      "op": "JUMP",
      "path": "1"
    },
    "662": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2131,
        2485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "663": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2131,
        2485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "666": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2131,
        2485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90B"
    },
    "669": {
      "fn": "BadgerHunt.getNextEpochStart",
      "jump": "i",
      "offset": [
        2131,
        2485
      ],
      "op": "JUMP",
      "path": "0"
    },
    "670": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1939,
        2084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "671": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1939,
        2084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E9"
    },
    "674": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1939,
        2084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x979"
    },
    "677": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "i",
      "offset": [
        1939,
        2084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "678": {
      "offset": [
        644,
        670
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "679": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        644,
        670
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "682": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        644,
        670
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2D"
    },
    "685": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "i",
      "offset": [
        644,
        670
      ],
      "op": "JUMP",
      "path": "0"
    },
    "686": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3233,
        3506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "687": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3233,
        3506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "690": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3233,
        3506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA33"
    },
    "693": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "jump": "i",
      "offset": [
        3233,
        3506
      ],
      "op": "JUMP",
      "path": "0"
    },
    "694": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "695": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BE"
    },
    "698": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA92"
    },
    "701": {
      "fn": "OwnableUpgradeable.owner",
      "jump": "i",
      "offset": [
        1316,
        1393
      ],
      "op": "JUMP",
      "path": "3"
    },
    "702": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "703": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "705": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "DUP1",
      "path": "3"
    },
    "706": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "713": {
      "op": "SHL"
    },
    "714": {
      "op": "SUB"
    },
    "715": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "716": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "717": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "AND",
      "path": "3"
    },
    "718": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "DUP3",
      "path": "3"
    },
    "719": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "720": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "721": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "722": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "DUP2",
      "path": "3"
    },
    "723": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "724": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "SUB",
      "path": "3"
    },
    "725": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "727": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "ADD",
      "path": "3"
    },
    "728": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "729": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "RETURN",
      "path": "3"
    },
    "730": {
      "fn": "BadgerHunt.getClaimsStartTime",
      "offset": [
        1992,
        2087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "731": {
      "fn": "BadgerHunt.getClaimsStartTime",
      "offset": [
        1992,
        2087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "734": {
      "fn": "BadgerHunt.getClaimsStartTime",
      "offset": [
        1992,
        2087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA1"
    },
    "737": {
      "fn": "BadgerHunt.getClaimsStartTime",
      "jump": "i",
      "offset": [
        1992,
        2087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "738": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "739": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FF"
    },
    "742": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "744": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "DUP1",
      "path": "1"
    },
    "745": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "746": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "SUB",
      "path": "1"
    },
    "747": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "749": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "DUP2",
      "path": "1"
    },
    "750": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "LT",
      "path": "1"
    },
    "751": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "752": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F8"
    },
    "755": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "756": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "758": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "DUP1",
      "path": "1"
    },
    "759": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "REVERT",
      "path": "1"
    },
    "760": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "761": {
      "op": "POP"
    },
    "762": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "763": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA7"
    },
    "766": {
      "fn": "MerkleDistributor.isClaimed",
      "jump": "i",
      "offset": [
        767,
        1092
      ],
      "op": "JUMP",
      "path": "1"
    },
    "767": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "768": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "770": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "DUP1",
      "path": "1"
    },
    "771": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "772": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "773": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "774": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "775": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "DUP3",
      "path": "1"
    },
    "776": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "777": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "778": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "779": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "DUP2",
      "path": "1"
    },
    "780": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "781": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "SUB",
      "path": "1"
    },
    "782": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "784": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "ADD",
      "path": "1"
    },
    "785": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "786": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "RETURN",
      "path": "1"
    },
    "787": {
      "offset": [
        743,
        781
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "788": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        743,
        781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "791": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        743,
        781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xACD"
    },
    "794": {
      "fn": "MerkleDistributor.isClaimed",
      "jump": "i",
      "offset": [
        743,
        781
      ],
      "op": "JUMP",
      "path": "0"
    },
    "795": {
      "offset": [
        676,
        702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "796": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        676,
        702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "799": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        676,
        702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD3"
    },
    "802": {
      "fn": "MerkleDistributor.isClaimed",
      "jump": "i",
      "offset": [
        676,
        702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "803": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2533,
        2859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "804": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2533,
        2859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "807": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2533,
        2859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD9"
    },
    "810": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "jump": "i",
      "offset": [
        2533,
        2859
      ],
      "op": "JUMP",
      "path": "0"
    },
    "811": {
      "fn": "BadgerHunt.getCurrentRewardsRate",
      "offset": [
        2913,
        3177
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "812": {
      "fn": "BadgerHunt.getCurrentRewardsRate",
      "offset": [
        2913,
        3177
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "815": {
      "fn": "BadgerHunt.getCurrentRewardsRate",
      "offset": [
        2913,
        3177
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB33"
    },
    "818": {
      "fn": "BadgerHunt.getCurrentRewardsRate",
      "jump": "i",
      "offset": [
        2913,
        3177
      ],
      "op": "JUMP",
      "path": "0"
    },
    "819": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1833,
        1944
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "820": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1833,
        1944
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "823": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1833,
        1944
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3E"
    },
    "826": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "jump": "i",
      "offset": [
        1833,
        1944
      ],
      "op": "JUMP",
      "path": "0"
    },
    "827": {
      "offset": [
        857,
        885
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "828": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        857,
        885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BE"
    },
    "831": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        857,
        885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5C"
    },
    "834": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "jump": "i",
      "offset": [
        857,
        885
      ],
      "op": "JUMP",
      "path": "0"
    },
    "835": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "836": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E9"
    },
    "839": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "841": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "DUP1",
      "path": "3"
    },
    "842": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "843": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "SUB",
      "path": "3"
    },
    "844": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "846": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "DUP2",
      "path": "3"
    },
    "847": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "LT",
      "path": "3"
    },
    "848": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "849": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x359"
    },
    "852": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "853": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "855": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "DUP1",
      "path": "3"
    },
    "856": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "REVERT",
      "path": "3"
    },
    "857": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "858": {
      "op": "POP"
    },
    "859": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "866": {
      "op": "SHL"
    },
    "867": {
      "op": "SUB"
    },
    "868": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "AND",
      "path": "3"
    },
    "869": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB6B"
    },
    "872": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "i",
      "offset": [
        2233,
        2473
      ],
      "op": "JUMP",
      "path": "3"
    },
    "873": {
      "offset": [
        787,
        819
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "874": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        787,
        819
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "877": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        787,
        819
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC76"
    },
    "880": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "i",
      "offset": [
        787,
        819
      ],
      "op": "JUMP",
      "path": "0"
    },
    "881": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4796,
        5118
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "882": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4796,
        5118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E9"
    },
    "885": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4796,
        5118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7C"
    },
    "888": {
      "fn": "BadgerHunt.recycleExcess",
      "jump": "i",
      "offset": [
        4796,
        5118
      ],
      "op": "JUMP",
      "path": "0"
    },
    "889": {
      "offset": [
        448,
        468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "890": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        448,
        468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BE"
    },
    "893": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        448,
        468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE5E"
    },
    "896": {
      "fn": "BadgerHunt.recycleExcess",
      "jump": "i",
      "offset": [
        448,
        468
      ],
      "op": "JUMP",
      "path": "1"
    },
    "897": {
      "offset": [
        598,
        637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "898": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        598,
        637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F3"
    },
    "901": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        598,
        637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE73"
    },
    "904": {
      "fn": "BadgerHunt.recycleExcess",
      "jump": "i",
      "offset": [
        598,
        637
      ],
      "op": "JUMP",
      "path": "0"
    },
    "905": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "912": {
      "op": "SHL"
    },
    "913": {
      "op": "SUB"
    },
    "914": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3725,
        3746
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 0
    },
    "915": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3725,
        3746
      ],
      "op": "AND",
      "path": "0"
    },
    "916": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3736,
        3746
      ],
      "op": "CALLER",
      "path": "0"
    },
    "917": {
      "branch": 56,
      "fn": "BadgerHunt.claim",
      "offset": [
        3725,
        3746
      ],
      "op": "EQ",
      "path": "0"
    },
    "918": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D0"
    },
    "921": {
      "branch": 56,
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "922": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "924": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "925": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "929": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "931": {
      "op": "SHL"
    },
    "932": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "DUP2",
      "path": "0"
    },
    "933": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "934": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "936": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "ADD",
      "path": "0"
    },
    "937": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "DUP1",
      "path": "0"
    },
    "938": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "DUP1",
      "path": "0"
    },
    "939": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "941": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "ADD",
      "path": "0"
    },
    "942": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "DUP3",
      "path": "0"
    },
    "943": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "DUP2",
      "path": "0"
    },
    "944": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "SUB",
      "path": "0"
    },
    "945": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "DUP3",
      "path": "0"
    },
    "946": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "947": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "949": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "DUP2",
      "path": "0"
    },
    "950": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "951": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "953": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "ADD",
      "path": "0"
    },
    "954": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "DUP1",
      "path": "0"
    },
    "955": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13FC"
    },
    "958": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "960": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "961": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "962": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "964": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "ADD",
      "path": "0"
    },
    "965": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "966": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "POP",
      "path": "0"
    },
    "967": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "POP",
      "path": "0"
    },
    "968": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "970": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "971": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "DUP1",
      "path": "0"
    },
    "972": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "973": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "SUB",
      "path": "0"
    },
    "974": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "975": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "REVERT",
      "path": "0"
    },
    "976": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3717,
        3801
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "977": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3820,
        3836
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 1,
      "value": "0x3D9"
    },
    "980": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3830,
        3835
      ],
      "op": "DUP6",
      "path": "0"
    },
    "981": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3820,
        3829
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA7"
    },
    "984": {
      "fn": "BadgerHunt.claim",
      "jump": "i",
      "offset": [
        3820,
        3836
      ],
      "op": "JUMP",
      "path": "0"
    },
    "985": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3820,
        3836
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "986": {
      "branch": 57,
      "fn": "BadgerHunt.claim",
      "offset": [
        3819,
        3836
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "987": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x415"
    },
    "990": {
      "branch": 57,
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "991": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "993": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "994": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "998": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1000": {
      "op": "SHL"
    },
    "1001": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1002": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1003": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1005": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "ADD",
      "path": "0"
    },
    "1006": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1007": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1008": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1010": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "ADD",
      "path": "0"
    },
    "1011": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1012": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1013": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "SUB",
      "path": "0"
    },
    "1014": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1015": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1016": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x28"
    },
    "1018": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1019": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1020": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1022": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "ADD",
      "path": "0"
    },
    "1023": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1024": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1475"
    },
    "1027": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x28"
    },
    "1029": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1030": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "1031": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1033": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "ADD",
      "path": "0"
    },
    "1034": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1035": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "POP",
      "path": "0"
    },
    "1036": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "POP",
      "path": "0"
    },
    "1037": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1039": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1040": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1041": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1042": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "SUB",
      "path": "0"
    },
    "1043": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1044": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1045": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3811,
        3881
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1046": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3928,
        3940
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1048": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3970,
        3975
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1049": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3977,
        3984
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1050": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3986,
        3992
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1051": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1053": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1054": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1056": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "ADD",
      "path": "0"
    },
    "1057": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1058": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1059": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1060": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1061": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1063": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "ADD",
      "path": "0"
    },
    "1064": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1071": {
      "op": "SHL"
    },
    "1072": {
      "op": "SUB"
    },
    "1073": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "AND",
      "path": "0"
    },
    "1074": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1076": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "SHL",
      "path": "0"
    },
    "1077": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1078": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1079": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "1081": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "ADD",
      "path": "0"
    },
    "1082": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1083": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1084": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1085": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1087": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "ADD",
      "path": "0"
    },
    "1088": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1089": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "POP",
      "path": "0"
    },
    "1090": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "POP",
      "path": "0"
    },
    "1091": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "POP",
      "path": "0"
    },
    "1092": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "POP",
      "path": "0"
    },
    "1093": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1095": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1096": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1098": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1099": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1100": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "SUB",
      "path": "0"
    },
    "1101": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "SUB",
      "path": "0"
    },
    "1102": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1103": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1104": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1105": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1107": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3953,
        3993
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1108": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3943,
        3994
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1109": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3943,
        3994
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1110": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3943,
        3994
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1111": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3943,
        3994
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1113": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3943,
        3994
      ],
      "op": "ADD",
      "path": "0"
    },
    "1114": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3943,
        3994
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1115": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3928,
        3994
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1116": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3928,
        3994
      ],
      "op": "POP",
      "path": "0"
    },
    "1117": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 2,
      "value": "0x49D"
    },
    "1120": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4042,
        4053
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1121": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4042,
        4053
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1122": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1123": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1124": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1126": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "MUL",
      "path": "0"
    },
    "1127": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1129": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "ADD",
      "path": "0"
    },
    "1130": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1132": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1133": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1134": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1135": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "ADD",
      "path": "0"
    },
    "1136": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1138": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1139": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1140": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1141": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1142": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1143": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1144": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1145": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1146": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1147": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1149": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "ADD",
      "path": "0"
    },
    "1150": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1151": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1152": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1154": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "MUL",
      "path": "0"
    },
    "1155": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1156": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1157": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1158": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "1159": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1161": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1162": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "ADD",
      "path": "0"
    },
    "1163": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1164": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1165": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1166": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1167": {
      "op": "POP"
    },
    "1168": {
      "op": "POP"
    },
    "1169": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4055,
        4065
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1171": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4055,
        4065
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1172": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4055,
        4065
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1173": {
      "op": "POP"
    },
    "1174": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4067,
        4071
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1175": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4067,
        4071
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1176": {
      "op": "POP"
    },
    "1177": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE79"
    },
    "1180": {
      "fn": "BadgerHunt.claim",
      "jump": "i",
      "offset": [
        4012,
        4072
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1181": {
      "branch": 58,
      "fn": "BadgerHunt.claim",
      "offset": [
        4012,
        4072
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1182": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D8"
    },
    "1185": {
      "branch": 58,
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1186": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1188": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1189": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1195": {
      "op": "SHL"
    },
    "1196": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1197": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1198": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1200": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "ADD",
      "path": "0"
    },
    "1201": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1202": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1203": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1205": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "ADD",
      "path": "0"
    },
    "1206": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1207": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1208": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "SUB",
      "path": "0"
    },
    "1209": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1210": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1211": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x21"
    },
    "1213": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1214": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1215": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1217": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "ADD",
      "path": "0"
    },
    "1218": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1219": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1454"
    },
    "1222": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x21"
    },
    "1224": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1225": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "1226": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1228": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "ADD",
      "path": "0"
    },
    "1229": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1230": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "POP",
      "path": "0"
    },
    "1231": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "POP",
      "path": "0"
    },
    "1232": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1234": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1235": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1236": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1237": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "SUB",
      "path": "0"
    },
    "1238": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1239": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1240": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4004,
        4110
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1241": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4168,
        4186
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x4E1"
    },
    "1244": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4180,
        4185
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1245": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4168,
        4179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF22"
    },
    "1248": {
      "fn": "BadgerHunt.claim",
      "jump": "i",
      "offset": [
        4168,
        4186
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1249": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4168,
        4186
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1250": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4197,
        4214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1252": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4217,
        4265
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x501"
    },
    "1255": {
      "offset": [
        632,
        637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "1258": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4217,
        4252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FB"
    },
    "1261": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4228,
        4251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F4"
    },
    "1264": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4228,
        4249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB33"
    },
    "1267": {
      "fn": "BadgerHunt.claim",
      "jump": "i",
      "offset": [
        4228,
        4251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1268": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4228,
        4251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1269": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4217,
        4223
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1270": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4217,
        4223
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1271": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4217,
        4227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF49"
    },
    "1274": {
      "fn": "BadgerHunt.claim",
      "jump": "i",
      "offset": [
        4217,
        4252
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1275": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4217,
        4252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1276": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4217,
        4256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1277": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4217,
        4256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFAB"
    },
    "1280": {
      "fn": "BadgerHunt.claim",
      "jump": "i",
      "offset": [
        4217,
        4265
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1281": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4217,
        4265
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1282": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4197,
        4265
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1283": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4197,
        4265
      ],
      "op": "POP",
      "path": "0"
    },
    "1284": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4302,
        4307
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "1286": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4302,
        4307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1288": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4302,
        4307
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1289": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4302,
        4307
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1290": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4302,
        4307
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1291": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4302,
        4307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1294": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4302,
        4307
      ],
      "op": "EXP",
      "path": "0"
    },
    "1295": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4302,
        4307
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1296": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4302,
        4307
      ],
      "op": "DIV",
      "path": "0"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1303": {
      "op": "SHL"
    },
    "1304": {
      "op": "SUB"
    },
    "1305": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4302,
        4307
      ],
      "op": "AND",
      "path": "0"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1312": {
      "op": "SHL"
    },
    "1313": {
      "op": "SUB"
    },
    "1314": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4317
      ],
      "op": "AND",
      "path": "0"
    },
    "1315": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4317
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "1320": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4318,
        4325
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1321": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4327,
        4336
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1322": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1324": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1325": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1326": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1331": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "AND",
      "path": "0"
    },
    "1332": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1334": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "SHL",
      "path": "0"
    },
    "1335": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1336": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1337": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1339": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1340": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1341": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1348": {
      "op": "SHL"
    },
    "1349": {
      "op": "SUB"
    },
    "1350": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "AND",
      "path": "0"
    },
    "1351": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1352": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1353": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1355": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1356": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1357": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1358": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1359": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1361": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "ADD",
      "path": "0"
    },
    "1362": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1363": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "POP",
      "path": "0"
    },
    "1364": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "POP",
      "path": "0"
    },
    "1365": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "POP",
      "path": "0"
    },
    "1366": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1368": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1370": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1371": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1372": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1373": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "SUB",
      "path": "0"
    },
    "1374": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1375": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1377": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1378": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1379": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1380": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1381": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1382": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1383": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56F"
    },
    "1386": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1387": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1389": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1390": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1391": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1392": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "POP",
      "path": "0"
    },
    "1393": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "GAS",
      "path": "0"
    },
    "1394": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "CALL",
      "path": "0"
    },
    "1395": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1396": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1397": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1398": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x583"
    },
    "1401": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1402": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1403": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1405": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1406": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1407": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1408": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1410": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1411": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1412": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "POP",
      "path": "0"
    },
    "1413": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "POP",
      "path": "0"
    },
    "1414": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "POP",
      "path": "0"
    },
    "1415": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "POP",
      "path": "0"
    },
    "1416": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1418": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1419": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1420": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1422": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1423": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "LT",
      "path": "0"
    },
    "1424": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1425": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x599"
    },
    "1428": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1429": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1431": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1432": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1433": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1434": {
      "op": "POP"
    },
    "1435": {
      "branch": 59,
      "fn": "BadgerHunt.claim",
      "offset": [
        4284,
        4337
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1436": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EC"
    },
    "1439": {
      "branch": 59,
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1440": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1442": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1443": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1444": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1450": {
      "op": "SHL"
    },
    "1451": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1452": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1453": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1455": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1457": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1458": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "ADD",
      "path": "0"
    },
    "1459": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1460": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "1462": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1464": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1465": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "ADD",
      "path": "0"
    },
    "1466": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1467": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x5472616E7366657220746F2075736572206661696C65642E0000000000000000"
    },
    "1500": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1502": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1503": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "ADD",
      "path": "0"
    },
    "1504": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1505": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1506": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1507": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1508": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1509": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1510": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "SUB",
      "path": "0"
    },
    "1511": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1513": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "ADD",
      "path": "0"
    },
    "1514": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1515": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1516": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4276,
        4366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1517": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4446,
        4452
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1518": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4433,
        4442
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1519": {
      "branch": 60,
      "fn": "BadgerHunt.claim",
      "offset": [
        4433,
        4452
      ],
      "op": "EQ",
      "path": "0"
    },
    "1520": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4429,
        4584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BB"
    },
    "1523": {
      "branch": 60,
      "fn": "BadgerHunt.claim",
      "offset": [
        4429,
        4584
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1524": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4494,
        4499
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x0"
    },
    "1526": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4494,
        4499
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1527": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4494,
        4499
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1528": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4510,
        4523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6D"
    },
    "1530": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4510,
        4523
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1531": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1533": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1534": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1535": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1542": {
      "op": "SHL"
    },
    "1543": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1544": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1551": {
      "op": "SHL"
    },
    "1552": {
      "op": "SUB"
    },
    "1553": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4510,
        4523
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1554": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4510,
        4523
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1555": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4510,
        4523
      ],
      "op": "AND",
      "path": "0"
    },
    "1556": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1558": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1559": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "ADD",
      "path": "0"
    },
    "1560": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1561": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1563": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1564": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "ADD",
      "path": "0"
    },
    "1565": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1566": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1567": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1568": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1569": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1570": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4494,
        4499
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "1574": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4494,
        4499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1575": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4494,
        4499
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1576": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4494,
        4499
      ],
      "op": "DIV",
      "path": "0"
    },
    "1577": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4494,
        4499
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1578": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4494,
        4499
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1579": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4494,
        4499
      ],
      "op": "AND",
      "path": "0"
    },
    "1580": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4494,
        4499
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1581": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4509
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "1586": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4509
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1587": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1589": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1590": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1591": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "ADD",
      "path": "0"
    },
    "1592": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1593": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1595": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1596": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1597": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1598": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1599": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "SUB",
      "path": "0"
    },
    "1600": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1601": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1602": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "ADD",
      "path": "0"
    },
    "1603": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1604": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1605": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1606": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4494,
        4499
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1607": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1608": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1609": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1610": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1611": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1612": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x654"
    },
    "1615": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1616": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1618": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1619": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1620": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1621": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "POP",
      "path": "0"
    },
    "1622": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "GAS",
      "path": "0"
    },
    "1623": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "CALL",
      "path": "0"
    },
    "1624": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1625": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1626": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1627": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x668"
    },
    "1630": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1631": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1632": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1634": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1635": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1636": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1637": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1639": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1640": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1641": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "POP",
      "path": "0"
    },
    "1642": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "POP",
      "path": "0"
    },
    "1643": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "POP",
      "path": "0"
    },
    "1644": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "POP",
      "path": "0"
    },
    "1645": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1647": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1648": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1649": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1651": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1652": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "LT",
      "path": "0"
    },
    "1653": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1654": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67E"
    },
    "1657": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1658": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1660": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1661": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1662": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1663": {
      "op": "POP"
    },
    "1664": {
      "branch": 61,
      "fn": "BadgerHunt.claim",
      "offset": [
        4476,
        4535
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1665": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BB"
    },
    "1668": {
      "branch": 61,
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1669": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1671": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1672": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1678": {
      "op": "SHL"
    },
    "1679": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1680": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1681": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1683": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "ADD",
      "path": "0"
    },
    "1684": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1685": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1686": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1688": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "ADD",
      "path": "0"
    },
    "1689": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1690": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1691": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "SUB",
      "path": "0"
    },
    "1692": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1693": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1694": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x21"
    },
    "1696": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1697": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1698": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1700": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "ADD",
      "path": "0"
    },
    "1701": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1702": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13DB"
    },
    "1705": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x21"
    },
    "1707": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1708": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "1709": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1711": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "ADD",
      "path": "0"
    },
    "1712": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1713": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "POP",
      "path": "0"
    },
    "1714": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "POP",
      "path": "0"
    },
    "1715": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1717": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1718": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1719": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1720": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "SUB",
      "path": "0"
    },
    "1721": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1722": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1723": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4468,
        4573
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1730": {
      "op": "SHL"
    },
    "1731": {
      "op": "SUB"
    },
    "1732": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 6
    },
    "1733": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "AND",
      "path": "0"
    },
    "1734": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8EAF15614908A4E9022141FE4A596B1AB0CB72AB32B25023E3DA2A459C9A335C"
    },
    "1767": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4604,
        4609
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1768": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4620,
        4626
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1769": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4628,
        4637
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1770": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4639,
        4660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F3"
    },
    "1773": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4620,
        4626
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1774": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4628,
        4637
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1775": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4639,
        4649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFED"
    },
    "1778": {
      "fn": "BadgerHunt.claim",
      "jump": "i",
      "offset": [
        4639,
        4660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1779": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4639,
        4660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1780": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1782": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1783": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1784": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1785": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1786": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1787": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1789": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1790": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "ADD",
      "path": "0"
    },
    "1791": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1792": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1793": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1794": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1795": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1796": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1797": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "ADD",
      "path": "0"
    },
    "1798": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1799": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1800": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1801": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1802": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1804": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1805": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "ADD",
      "path": "0"
    },
    "1806": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1807": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1808": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1809": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1810": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1811": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "SUB",
      "path": "0"
    },
    "1812": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1814": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "ADD",
      "path": "0"
    },
    "1815": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1816": {
      "fn": "BadgerHunt.claim",
      "offset": [
        4599,
        4661
      ],
      "op": "LOG2",
      "path": "0"
    },
    "1817": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "POP",
      "path": "0"
    },
    "1818": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "POP",
      "path": "0"
    },
    "1819": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "POP",
      "path": "0"
    },
    "1820": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "POP",
      "path": "0"
    },
    "1821": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "POP",
      "path": "0"
    },
    "1822": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "POP",
      "path": "0"
    },
    "1823": {
      "fn": "BadgerHunt.claim",
      "offset": [
        3548,
        4668
      ],
      "op": "POP",
      "path": "0"
    },
    "1824": {
      "fn": "BadgerHunt.claim",
      "jump": "o",
      "offset": [
        3548,
        4668
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1825": {
      "offset": [
        474,
        499
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1826": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1828": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1829": {
      "fn": "BadgerHunt.claim",
      "offset": [
        474,
        499
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1830": {
      "fn": "BadgerHunt.claim",
      "jump": "o",
      "offset": [
        474,
        499
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1831": {
      "offset": [
        825,
        850
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1832": {
      "fn": "BadgerHunt.claim",
      "offset": [
        825,
        850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6C"
    },
    "1834": {
      "fn": "BadgerHunt.claim",
      "offset": [
        825,
        850
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1835": {
      "fn": "BadgerHunt.claim",
      "offset": [
        825,
        850
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1836": {
      "fn": "BadgerHunt.claim",
      "jump": "o",
      "offset": [
        825,
        850
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1837": {
      "offset": [
        709,
        737
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1838": {
      "fn": "BadgerHunt.claim",
      "offset": [
        709,
        737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x69"
    },
    "1840": {
      "fn": "BadgerHunt.claim",
      "offset": [
        709,
        737
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1841": {
      "fn": "BadgerHunt.claim",
      "offset": [
        709,
        737
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1842": {
      "fn": "BadgerHunt.claim",
      "jump": "o",
      "offset": [
        709,
        737
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1843": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1844": {
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1846": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1426,
        1439
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1847": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "1850": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1426,
        1439
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1851": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1426,
        1439
      ],
      "op": "DIV",
      "path": "6"
    },
    "1852": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1854": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1426,
        1439
      ],
      "op": "AND",
      "path": "6"
    },
    "1855": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1426,
        1439
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1856": {
      "offset": [
        1426,
        1459
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x74C"
    },
    "1859": {
      "offset": [
        1426,
        1459
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1860": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1426,
        1459
      ],
      "op": "POP",
      "path": "6"
    },
    "1861": {
      "offset": [
        1443,
        1459
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x74C"
    },
    "1864": {
      "offset": [
        1443,
        1457
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102F"
    },
    "1867": {
      "jump": "i",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1868": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1869": {
      "offset": [
        1426,
        1476
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1870": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1426,
        1476
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x75A"
    },
    "1873": {
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1877": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1464,
        1476
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1878": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1880": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1464,
        1476
      ],
      "op": "AND",
      "path": "6"
    },
    "1881": {
      "offset": [
        1463,
        1476
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1882": {
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1883": {
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x795"
    },
    "1886": {
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1887": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1889": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1890": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1896": {
      "op": "SHL"
    },
    "1897": {
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1898": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1899": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1901": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "1902": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1903": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1904": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1906": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "1907": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1908": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1909": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "SUB",
      "path": "6"
    },
    "1910": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1911": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1912": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2E"
    },
    "1914": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1915": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1916": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1918": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "1919": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1920": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x149D"
    },
    "1923": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2E"
    },
    "1925": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1926": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "1927": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1929": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "1930": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1931": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "POP",
      "path": "6"
    },
    "1932": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "POP",
      "path": "6"
    },
    "1933": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1935": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1936": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1937": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1938": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "SUB",
      "path": "6"
    },
    "1939": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1940": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1941": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1942": {
      "offset": [
        1538,
        1557
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1944": {
      "offset": [
        1561,
        1574
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1945": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "1948": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1561,
        1574
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1949": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1561,
        1574
      ],
      "op": "DIV",
      "path": "6"
    },
    "1950": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1952": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1561,
        1574
      ],
      "op": "AND",
      "path": "6"
    },
    "1953": {
      "offset": [
        1560,
        1574
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1954": {
      "offset": [
        1584,
        1682
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1955": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1584,
        1682
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1956": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1584,
        1682
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C0"
    },
    "1959": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1584,
        1682
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1960": {
      "offset": [
        1618,
        1631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1962": {
      "offset": [
        1618,
        1638
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1963": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1618,
        1638
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1966": {
      "op": "NOT"
    },
    "1967": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "1970": {
      "op": "NOT"
    },
    "1971": {
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1972": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1973": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1618,
        1638
      ],
      "op": "AND",
      "path": "6"
    },
    "1974": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1618,
        1638
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "1977": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1618,
        1638
      ],
      "op": "OR",
      "path": "6"
    },
    "1978": {
      "offset": [
        1652,
        1671
      ],
      "op": "AND",
      "path": "6"
    },
    "1979": {
      "offset": [
        1634,
        1638
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1981": {
      "offset": [
        1652,
        1671
      ],
      "op": "OR",
      "path": "6"
    },
    "1982": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1652,
        1671
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1983": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1652,
        1671
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1984": {
      "offset": [
        1584,
        1682
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1985": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1310,
        1355
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x7CA"
    },
    "1988": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1335,
        1341
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1989": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1343,
        1354
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1990": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1310,
        1334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x840"
    },
    "1993": {
      "fn": "BadgerHunt.initialize",
      "jump": "i",
      "offset": [
        1310,
        1355
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1994": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1310,
        1355
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1995": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1366,
        1382
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x7D2"
    },
    "1998": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1366,
        1380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1035"
    },
    "2001": {
      "fn": "BadgerHunt.initialize",
      "jump": "i",
      "offset": [
        1366,
        1382
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2002": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1366,
        1382
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2003": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1392,
        1417
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 9,
      "value": "0x7DB"
    },
    "2006": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1410,
        1416
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2007": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1392,
        1409
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6B"
    },
    "2010": {
      "fn": "BadgerHunt.initialize",
      "jump": "i",
      "offset": [
        1392,
        1417
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2011": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1392,
        1417
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2012": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1428,
        1441
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x69"
    },
    "2014": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1428,
        1458
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2015": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1428,
        1458
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2016": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1428,
        1458
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2017": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1468,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x6A"
    },
    "2019": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1468,
        1518
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2020": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1468,
        1518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2021": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1468,
        1518
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2022": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1528,
        1539
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x67"
    },
    "2024": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1528,
        1554
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2025": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1528,
        1554
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2026": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1528,
        1554
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2027": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1564,
        1575
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x68"
    },
    "2029": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1564,
        1590
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2030": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1564,
        1590
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2031": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1564,
        1590
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2032": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1601,
        1614
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x6D"
    },
    "2034": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1601,
        1631
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2035": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1601,
        1631
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2042": {
      "op": "SHL"
    },
    "2043": {
      "op": "SUB"
    },
    "2044": {
      "op": "NOT"
    },
    "2045": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1601,
        1631
      ],
      "op": "AND",
      "path": "0"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2052": {
      "op": "SHL"
    },
    "2053": {
      "op": "SUB"
    },
    "2054": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1601,
        1631
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2055": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1601,
        1631
      ],
      "op": "AND",
      "path": "0"
    },
    "2056": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1601,
        1631
      ],
      "op": "OR",
      "path": "0"
    },
    "2057": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1601,
        1631
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2058": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1601,
        1631
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2059": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1662,
        1667
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x2710"
    },
    "2062": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1642,
        1659
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6B"
    },
    "2064": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1642,
        1667
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2065": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1642,
        1667
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2066": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1642,
        1667
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2069": {
      "op": "SWAP1"
    },
    "2070": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1468,
        1518
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2071": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1468,
        1518
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2072": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1468,
        1518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2073": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1692,
        1736
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x81E"
    },
    "2076": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1692,
        1736
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2077": {
      "dev": "Division by zero",
      "fn": "BadgerHunt.initialize",
      "offset": [
        1692,
        1736
      ],
      "op": "INVALID",
      "path": "0"
    },
    "2078": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1692,
        1736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2079": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1692,
        1736
      ],
      "op": "DIV",
      "path": "0"
    },
    "2080": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1691,
        1741
      ],
      "op": "SUB",
      "path": "0"
    },
    "2081": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1678,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6C"
    },
    "2083": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1678,
        1741
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2084": {
      "offset": [
        1704,
        1770
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2085": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1704,
        1770
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2086": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1704,
        1770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x835"
    },
    "2089": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1704,
        1770
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2090": {
      "offset": [
        1754,
        1759
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2092": {
      "offset": [
        1738,
        1759
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2093": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1738,
        1759
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2094": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "2097": {
      "op": "NOT"
    },
    "2098": {
      "offset": [
        1738,
        1759
      ],
      "op": "AND",
      "path": "6"
    },
    "2099": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1738,
        1759
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2100": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1738,
        1759
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2101": {
      "offset": [
        1704,
        1770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2102": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "POP",
      "path": "0"
    },
    "2103": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "POP",
      "path": "0"
    },
    "2104": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "POP",
      "path": "0"
    },
    "2105": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "POP",
      "path": "0"
    },
    "2106": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "POP",
      "path": "0"
    },
    "2107": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "POP",
      "path": "0"
    },
    "2108": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "POP",
      "path": "0"
    },
    "2109": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "POP",
      "path": "0"
    },
    "2110": {
      "fn": "BadgerHunt.initialize",
      "offset": [
        1012,
        1748
      ],
      "op": "POP",
      "path": "0"
    },
    "2111": {
      "fn": "BadgerHunt.initialize",
      "jump": "o",
      "offset": [
        1012,
        1748
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2112": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2113": {
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2115": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1426,
        1439
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2116": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2119": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1426,
        1439
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2120": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1426,
        1439
      ],
      "op": "DIV",
      "path": "6"
    },
    "2121": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2123": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1426,
        1439
      ],
      "op": "AND",
      "path": "6"
    },
    "2124": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1426,
        1439
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2125": {
      "offset": [
        1426,
        1459
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x859"
    },
    "2128": {
      "offset": [
        1426,
        1459
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2129": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1426,
        1459
      ],
      "op": "POP",
      "path": "6"
    },
    "2130": {
      "offset": [
        1443,
        1459
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x859"
    },
    "2133": {
      "offset": [
        1443,
        1457
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102F"
    },
    "2136": {
      "jump": "i",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2137": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2138": {
      "offset": [
        1426,
        1476
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2139": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1426,
        1476
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x867"
    },
    "2142": {
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2143": {
      "op": "POP"
    },
    "2144": {
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2146": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1464,
        1476
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2147": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2149": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1464,
        1476
      ],
      "op": "AND",
      "path": "6"
    },
    "2150": {
      "offset": [
        1463,
        1476
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2151": {
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2152": {
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8A2"
    },
    "2155": {
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2156": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2158": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2159": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2165": {
      "op": "SHL"
    },
    "2166": {
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2167": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2168": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2170": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "2171": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2172": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2173": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2175": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "2176": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2177": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2178": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "SUB",
      "path": "6"
    },
    "2179": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2180": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2181": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2E"
    },
    "2183": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2184": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2185": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2187": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "2188": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2189": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x149D"
    },
    "2192": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2E"
    },
    "2194": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2195": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "2196": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2198": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "2199": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2200": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "POP",
      "path": "6"
    },
    "2201": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "POP",
      "path": "6"
    },
    "2202": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2204": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2205": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2206": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2207": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "SUB",
      "path": "6"
    },
    "2208": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2209": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2210": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2211": {
      "offset": [
        1538,
        1557
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2213": {
      "offset": [
        1561,
        1574
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2214": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2217": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1561,
        1574
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2218": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1561,
        1574
      ],
      "op": "DIV",
      "path": "6"
    },
    "2219": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2221": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1561,
        1574
      ],
      "op": "AND",
      "path": "6"
    },
    "2222": {
      "offset": [
        1560,
        1574
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2223": {
      "offset": [
        1584,
        1682
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2224": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1584,
        1682
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2225": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1584,
        1682
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8CD"
    },
    "2228": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1584,
        1682
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2229": {
      "offset": [
        1618,
        1631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2231": {
      "offset": [
        1618,
        1638
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2232": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1618,
        1638
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2235": {
      "op": "NOT"
    },
    "2236": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "2239": {
      "op": "NOT"
    },
    "2240": {
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2241": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2242": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1618,
        1638
      ],
      "op": "AND",
      "path": "6"
    },
    "2243": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1618,
        1638
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2246": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1618,
        1638
      ],
      "op": "OR",
      "path": "6"
    },
    "2247": {
      "offset": [
        1652,
        1671
      ],
      "op": "AND",
      "path": "6"
    },
    "2248": {
      "offset": [
        1634,
        1638
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2250": {
      "offset": [
        1652,
        1671
      ],
      "op": "OR",
      "path": "6"
    },
    "2251": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1652,
        1671
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2252": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1652,
        1671
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2253": {
      "offset": [
        1584,
        1682
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2254": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        706,
        711
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x0"
    },
    "2256": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        706,
        720
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2257": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        706,
        720
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2258": {
      "op": "PUSH3",
      "value": "0x10000"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2266": {
      "op": "SHL"
    },
    "2267": {
      "op": "SUB"
    },
    "2268": {
      "op": "NOT"
    },
    "2269": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        706,
        720
      ],
      "op": "AND",
      "path": "1"
    },
    "2270": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        706,
        720
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x10000"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2280": {
      "op": "SHL"
    },
    "2281": {
      "op": "SUB"
    },
    "2282": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        706,
        720
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2283": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        706,
        720
      ],
      "op": "AND",
      "path": "1"
    },
    "2284": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        706,
        720
      ],
      "op": "MUL",
      "path": "1"
    },
    "2285": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        706,
        720
      ],
      "op": "OR",
      "path": "1"
    },
    "2286": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        706,
        720
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2287": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        706,
        720
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2290": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        730,
        754
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 18
    },
    "2291": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        730,
        754
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2292": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        730,
        754
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2293": {
      "offset": [
        1704,
        1770
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2294": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1704,
        1770
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2295": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1704,
        1770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x906"
    },
    "2298": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1704,
        1770
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2299": {
      "offset": [
        1754,
        1759
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2301": {
      "offset": [
        1738,
        1759
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2302": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1738,
        1759
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2303": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "2306": {
      "op": "NOT"
    },
    "2307": {
      "offset": [
        1738,
        1759
      ],
      "op": "AND",
      "path": "6"
    },
    "2308": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1738,
        1759
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2309": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        1738,
        1759
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2310": {
      "offset": [
        1704,
        1770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2311": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "POP",
      "path": "1"
    },
    "2312": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "POP",
      "path": "1"
    },
    "2313": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "offset": [
        606,
        761
      ],
      "op": "POP",
      "path": "1"
    },
    "2314": {
      "fn": "MerkleDistributor.__MerkleDistributor_init",
      "jump": "o",
      "offset": [
        606,
        761
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2315": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2131,
        2485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2316": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2181,
        2188
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2318": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2200,
        2222
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2319": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2225,
        2253
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x925"
    },
    "2322": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2241,
        2252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x68"
    },
    "2324": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2241,
        2252
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2325": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2225,
        2236
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x67"
    },
    "2327": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2225,
        2236
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2328": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2225,
        2240
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E7"
    },
    "2331": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2225,
        2240
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2332": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2225,
        2253
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2333": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2225,
        2253
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2334": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2225,
        2253
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2339": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2225,
        2253
      ],
      "op": "AND",
      "path": "0"
    },
    "2340": {
      "fn": "BadgerHunt.getNextEpochStart",
      "jump": "i",
      "offset": [
        2225,
        2253
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2341": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2225,
        2253
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2342": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2200,
        2253
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2343": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2200,
        2253
      ],
      "op": "POP",
      "path": "0"
    },
    "2344": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2263,
        2276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2346": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2279,
        2296
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x931"
    },
    "2349": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2279,
        2294
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD9"
    },
    "2352": {
      "fn": "BadgerHunt.getNextEpochStart",
      "jump": "i",
      "offset": [
        2279,
        2296
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2353": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2279,
        2296
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2354": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2263,
        2296
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2355": {
      "op": "POP"
    },
    "2356": {
      "branch": 62,
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2311,
        2321
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2357": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2307,
        2479
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x950"
    },
    "2360": {
      "branch": 62,
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2307,
        2479
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2361": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2360,
        2371
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x68"
    },
    "2363": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2360,
        2371
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2364": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2344,
        2355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x67"
    },
    "2366": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2344,
        2355
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2367": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2344,
        2372
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x947"
    },
    "2370": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2344,
        2372
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2371": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2344,
        2359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E7"
    },
    "2374": {
      "fn": "BadgerHunt.getNextEpochStart",
      "jump": "i",
      "offset": [
        2344,
        2372
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2375": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2344,
        2372
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2376": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2337,
        2372
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2377": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2337,
        2372
      ],
      "op": "POP",
      "path": "0"
    },
    "2378": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2337,
        2372
      ],
      "op": "POP",
      "path": "0"
    },
    "2379": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2337,
        2372
      ],
      "op": "POP",
      "path": "0"
    },
    "2380": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2337,
        2372
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x976"
    },
    "2383": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2337,
        2372
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2384": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2307,
        2479
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2385": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2443,
        2456
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x69"
    },
    "2387": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2443,
        2456
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2388": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2410,
        2468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x947"
    },
    "2391": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2410,
        2468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2392": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2443,
        2467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x961"
    },
    "2395": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2443,
        2467
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2396": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2461,
        2466
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2397": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2443,
        2460
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF49"
    },
    "2400": {
      "fn": "BadgerHunt.getNextEpochStart",
      "jump": "i",
      "offset": [
        2443,
        2467
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2401": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2443,
        2467
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2402": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2426,
        2437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x68"
    },
    "2404": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2426,
        2437
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2405": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2410,
        2421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x67"
    },
    "2407": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2410,
        2421
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2408": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2410,
        2438
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x970"
    },
    "2411": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2410,
        2438
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2412": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2410,
        2425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E7"
    },
    "2415": {
      "fn": "BadgerHunt.getNextEpochStart",
      "jump": "i",
      "offset": [
        2410,
        2438
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2416": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2410,
        2438
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2417": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2410,
        2442
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2418": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2410,
        2442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E7"
    },
    "2421": {
      "fn": "BadgerHunt.getNextEpochStart",
      "jump": "i",
      "offset": [
        2410,
        2468
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2422": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2131,
        2485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2423": {
      "fn": "BadgerHunt.getNextEpochStart",
      "offset": [
        2131,
        2485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2424": {
      "fn": "BadgerHunt.getNextEpochStart",
      "jump": "o",
      "offset": [
        2131,
        2485
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2425": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1939,
        2084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2426": {
      "offset": [
        1530,
        1542
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x981"
    },
    "2429": {
      "offset": [
        1530,
        1540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1141"
    },
    "2432": {
      "jump": "i",
      "offset": [
        1530,
        1542
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2433": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1530,
        1542
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2434": {
      "offset": [
        1520,
        1526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x35"
    },
    "2436": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1520,
        1526
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2443": {
      "op": "SHL"
    },
    "2444": {
      "op": "SUB"
    },
    "2445": {
      "offset": [
        1520,
        1526
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2446": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1520,
        1526
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2447": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1520,
        1526
      ],
      "op": "AND",
      "path": "3"
    },
    "2448": {
      "offset": [
        1520,
        1542
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2449": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1520,
        1542
      ],
      "op": "AND",
      "path": "3"
    },
    "2450": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1520,
        1542
      ],
      "op": "EQ",
      "path": "3"
    },
    "2451": {
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E3"
    },
    "2454": {
      "offset": [
        1512,
        1579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2455": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2457": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2458": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2465": {
      "op": "SHL"
    },
    "2466": {
      "offset": [
        1512,
        1579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2467": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2468": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2470": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2472": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2473": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2474": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2475": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2476": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2477": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2479": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2480": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2481": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2482": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2515": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "2517": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2518": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2519": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2520": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2521": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2522": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2523": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2524": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2525": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "SUB",
      "path": "3"
    },
    "2526": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2528": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2529": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2530": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2531": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2532": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2029,
        2035
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 21,
      "value": "0x35"
    },
    "2534": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2029,
        2035
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2535": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2008,
        2048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2537": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2008,
        2048
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2538": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2045,
        2046
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2540": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2045,
        2046
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2547": {
      "op": "SHL"
    },
    "2548": {
      "op": "SUB"
    },
    "2549": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2029,
        2035
      ],
      "op": "AND",
      "path": "3"
    },
    "2550": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2029,
        2035
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2551": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2008,
        2048
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2584": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2008,
        2048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2585": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2045,
        2046
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2586": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2045,
        2046
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2587": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2008,
        2048
      ],
      "op": "LOG3",
      "path": "3"
    },
    "2588": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2058,
        2064
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 22,
      "value": "0x35"
    },
    "2590": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2058,
        2077
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2591": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2058,
        2077
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2598": {
      "op": "SHL"
    },
    "2599": {
      "op": "SUB"
    },
    "2600": {
      "op": "NOT"
    },
    "2601": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2058,
        2077
      ],
      "op": "AND",
      "path": "3"
    },
    "2602": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2058,
        2077
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2603": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2058,
        2077
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2604": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "o",
      "offset": [
        1939,
        2084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2605": {
      "offset": [
        644,
        670
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2606": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        644,
        670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x67"
    },
    "2608": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        644,
        670
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2609": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        644,
        670
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2610": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "o",
      "offset": [
        644,
        670
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2611": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3233,
        3506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2612": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3289,
        3296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2614": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3308,
        3321
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2615": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3324,
        3348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA43"
    },
    "2618": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3346,
        3347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2620": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3324,
        3341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x970"
    },
    "2623": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3324,
        3339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD9"
    },
    "2626": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "jump": "i",
      "offset": [
        3324,
        3341
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2627": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3324,
        3348
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2628": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3308,
        3348
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2629": {
      "op": "POP"
    },
    "2630": {
      "branch": 63,
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3362,
        3372
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2631": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3358,
        3388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA55"
    },
    "2634": {
      "branch": 63,
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3358,
        3388
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2635": {
      "offset": [
        632,
        637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "2638": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3374,
        3388
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 23
    },
    "2639": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3374,
        3388
      ],
      "op": "POP",
      "path": "0"
    },
    "2640": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3374,
        3388
      ],
      "op": "POP",
      "path": "0"
    },
    "2641": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3374,
        3388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x976"
    },
    "2644": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3374,
        3388
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2645": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3358,
        3388
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2646": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3410,
        3420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6C"
    },
    "2648": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3410,
        3420
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2649": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3402,
        3407
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2650": {
      "branch": 64,
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3402,
        3420
      ],
      "op": "GT",
      "path": "0"
    },
    "2651": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3398,
        3499
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2652": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3398,
        3499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA69"
    },
    "2655": {
      "branch": 64,
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3398,
        3499
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2656": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3429,
        3430
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x0"
    },
    "2658": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3422,
        3430
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2659": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3422,
        3430
      ],
      "op": "POP",
      "path": "0"
    },
    "2660": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3422,
        3430
      ],
      "op": "POP",
      "path": "0"
    },
    "2661": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3422,
        3430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x976"
    },
    "2664": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3422,
        3430
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2665": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3398,
        3499
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2666": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3452,
        3499
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 25,
      "value": "0xA8A"
    },
    "2669": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3464,
        3498
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA81"
    },
    "2672": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3474,
        3497
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6A"
    },
    "2674": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3474,
        3497
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2675": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3464,
        3469
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2676": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3464,
        3473
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF49"
    },
    "2679": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3464,
        3473
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2680": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3464,
        3498
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2681": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3464,
        3498
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2682": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3464,
        3498
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2687": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3464,
        3498
      ],
      "op": "AND",
      "path": "0"
    },
    "2688": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "jump": "i",
      "offset": [
        3464,
        3498
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2689": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3464,
        3498
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2690": {
      "offset": [
        632,
        637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "2693": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        632,
        637
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2694": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3452,
        3463
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFED"
    },
    "2697": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "jump": "i",
      "offset": [
        3452,
        3499
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2698": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3452,
        3499
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2699": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3445,
        3499
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2700": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3445,
        3499
      ],
      "op": "POP",
      "path": "0"
    },
    "2701": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3445,
        3499
      ],
      "op": "POP",
      "path": "0"
    },
    "2702": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3445,
        3499
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x976"
    },
    "2705": {
      "fn": "BadgerHunt.getNextEpochRewardsRate",
      "offset": [
        3445,
        3499
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2706": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2707": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1380,
        1386
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 26,
      "value": "0x35"
    },
    "2709": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1380,
        1386
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2716": {
      "op": "SHL"
    },
    "2717": {
      "op": "SUB"
    },
    "2718": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1380,
        1386
      ],
      "op": "AND",
      "path": "3"
    },
    "2719": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1316,
        1393
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2720": {
      "fn": "OwnableUpgradeable.owner",
      "jump": "o",
      "offset": [
        1316,
        1393
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2721": {
      "fn": "BadgerHunt.getClaimsStartTime",
      "offset": [
        1992,
        2087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2722": {
      "fn": "BadgerHunt.getClaimsStartTime",
      "offset": [
        2069,
        2080
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x67"
    },
    "2724": {
      "fn": "BadgerHunt.getClaimsStartTime",
      "offset": [
        2069,
        2080
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2725": {
      "fn": "BadgerHunt.getClaimsStartTime",
      "offset": [
        1992,
        2087
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2726": {
      "fn": "BadgerHunt.getClaimsStartTime",
      "jump": "o",
      "offset": [
        1992,
        2087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2727": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        767,
        1092
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2728": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        882,
        885
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2731": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        874,
        885
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2732": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        874,
        885
      ],
      "op": "DIV",
      "path": "1"
    },
    "2733": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        831,
        835
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2735": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        964,
        995
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2736": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        964,
        995
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2737": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        964,
        995
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2738": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        964,
        977
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2740": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        964,
        995
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2742": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        964,
        995
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2743": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        964,
        995
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2745": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        964,
        995
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2746": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        964,
        995
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2747": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        964,
        995
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2748": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        1021,
        1022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2750": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        921,
        932
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2752": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        921,
        932
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2753": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        921,
        932
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2754": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        921,
        932
      ],
      "op": "AND",
      "path": "1"
    },
    "2755": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        1021,
        1041
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2756": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        1021,
        1041
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2757": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        1021,
        1041
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2758": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        1021,
        1041
      ],
      "op": "SHL",
      "path": "1"
    },
    "2759": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        1059,
        1077
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 28
    },
    "2760": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        1059,
        1077
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2761": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        1059,
        1077
      ],
      "op": "AND",
      "path": "1"
    },
    "2762": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        1059,
        1085
      ],
      "op": "EQ",
      "path": "1"
    },
    "2763": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        1059,
        1085
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2764": {
      "fn": "MerkleDistributor.isClaimed",
      "jump": "o",
      "offset": [
        767,
        1092
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2765": {
      "offset": [
        743,
        781
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2766": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        743,
        781
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6A"
    },
    "2768": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        743,
        781
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2769": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        743,
        781
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2770": {
      "fn": "MerkleDistributor.isClaimed",
      "jump": "o",
      "offset": [
        743,
        781
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2771": {
      "offset": [
        676,
        702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2772": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        676,
        702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x68"
    },
    "2774": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        676,
        702
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2775": {
      "fn": "MerkleDistributor.isClaimed",
      "offset": [
        676,
        702
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2776": {
      "fn": "MerkleDistributor.isClaimed",
      "jump": "o",
      "offset": [
        676,
        702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2777": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2533,
        2859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2778": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2581,
        2588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2780": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2600,
        2622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2781": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2625,
        2653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF3"
    },
    "2784": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2641,
        2652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x68"
    },
    "2786": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2641,
        2652
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2787": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2625,
        2636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x67"
    },
    "2789": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2625,
        2636
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2790": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2625,
        2640
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E7"
    },
    "2793": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2625,
        2640
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2794": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2625,
        2653
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2795": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2625,
        2653
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2796": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2625,
        2653
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2801": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2625,
        2653
      ],
      "op": "AND",
      "path": "0"
    },
    "2802": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "jump": "i",
      "offset": [
        2625,
        2653
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2803": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2625,
        2653
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2804": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2600,
        2653
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2805": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2600,
        2653
      ],
      "op": "POP",
      "path": "0"
    },
    "2806": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2674,
        2688
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2807": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2668,
        2671
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2808": {
      "branch": 65,
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2668,
        2688
      ],
      "op": "LT",
      "path": "0"
    },
    "2809": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2664,
        2723
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2810": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2664,
        2723
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB07"
    },
    "2813": {
      "branch": 65,
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2664,
        2723
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2814": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2711,
        2712
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x0"
    },
    "2816": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2704,
        2712
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2817": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2704,
        2712
      ],
      "op": "POP",
      "path": "0"
    },
    "2818": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2704,
        2712
      ],
      "op": "POP",
      "path": "0"
    },
    "2819": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2704,
        2712
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x976"
    },
    "2822": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2704,
        2712
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2823": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2664,
        2723
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2824": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2732,
        2762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2826": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2765,
        2788
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB13"
    },
    "2829": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2765,
        2768
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2830": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2773,
        2787
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2831": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2765,
        2772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFED"
    },
    "2834": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "jump": "i",
      "offset": [
        2765,
        2788
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2835": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2765,
        2788
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2836": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2732,
        2788
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2837": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2732,
        2788
      ],
      "op": "POP",
      "path": "0"
    },
    "2838": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2805,
        2852
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0xB2C"
    },
    "2841": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2850,
        2851
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2843": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2831,
        2844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x69"
    },
    "2845": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2831,
        2844
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2846": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2806,
        2828
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2847": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2806,
        2844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2848": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2806,
        2844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB25"
    },
    "2851": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2806,
        2844
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2852": {
      "dev": "Division by zero",
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2806,
        2844
      ],
      "op": "INVALID",
      "path": "0"
    },
    "2853": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2806,
        2844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2854": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2806,
        2844
      ],
      "op": "DIV",
      "path": "0"
    },
    "2855": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2806,
        2844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2856": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2805,
        2849
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E7"
    },
    "2859": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "jump": "i",
      "offset": [
        2805,
        2852
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2860": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2805,
        2852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2861": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2798,
        2852
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2862": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2798,
        2852
      ],
      "op": "POP",
      "path": "0"
    },
    "2863": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2798,
        2852
      ],
      "op": "POP",
      "path": "0"
    },
    "2864": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2798,
        2852
      ],
      "op": "POP",
      "path": "0"
    },
    "2865": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "offset": [
        2533,
        2859
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2866": {
      "fn": "BadgerHunt.getCurrentEpoch",
      "jump": "o",
      "offset": [
        2533,
        2859
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2867": {
      "fn": "BadgerHunt.getCurrentRewardsRate",
      "offset": [
        2913,
        3177
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2868": {
      "fn": "BadgerHunt.getCurrentRewardsRate",
      "offset": [
        2967,
        2974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2870": {
      "fn": "BadgerHunt.getCurrentRewardsRate",
      "offset": [
        2986,
        2999
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2871": {
      "fn": "BadgerHunt.getCurrentRewardsRate",
      "offset": [
        3002,
        3019
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA43"
    },
    "2874": {
      "fn": "BadgerHunt.getCurrentRewardsRate",
      "offset": [
        3002,
        3017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD9"
    },
    "2877": {
      "fn": "BadgerHunt.getCurrentRewardsRate",
      "jump": "i",
      "offset": [
        3002,
        3019
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2878": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1833,
        1944
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2879": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1883,
        1890
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2881": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1909,
        1937
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 31,
      "value": "0xB57"
    },
    "2884": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1925,
        1936
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x68"
    },
    "2886": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1925,
        1936
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2887": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1909,
        1920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x67"
    },
    "2889": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1909,
        1920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2890": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1909,
        1924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E7"
    },
    "2893": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1909,
        1924
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2894": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1909,
        1937
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2895": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1909,
        1937
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2896": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1909,
        1937
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2901": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1909,
        1937
      ],
      "op": "AND",
      "path": "0"
    },
    "2902": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "jump": "i",
      "offset": [
        1909,
        1937
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2903": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1909,
        1937
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2904": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1902,
        1937
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2905": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1902,
        1937
      ],
      "op": "POP",
      "path": "0"
    },
    "2906": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        1833,
        1944
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2907": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "jump": "o",
      "offset": [
        1833,
        1944
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2908": {
      "offset": [
        857,
        885
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2909": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        857,
        885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6D"
    },
    "2911": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        857,
        885
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2918": {
      "op": "SHL"
    },
    "2919": {
      "op": "SUB"
    },
    "2920": {
      "offset": [
        857,
        885
      ],
      "op": "AND",
      "path": "0"
    },
    "2921": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "offset": [
        857,
        885
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2922": {
      "fn": "BadgerHunt.getGracePeriodEnd",
      "jump": "o",
      "offset": [
        857,
        885
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2923": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2233,
        2473
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2924": {
      "offset": [
        1530,
        1542
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB73"
    },
    "2927": {
      "offset": [
        1530,
        1540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1141"
    },
    "2930": {
      "jump": "i",
      "offset": [
        1530,
        1542
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2931": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1530,
        1542
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2932": {
      "offset": [
        1520,
        1526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x35"
    },
    "2934": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1520,
        1526
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2941": {
      "op": "SHL"
    },
    "2942": {
      "op": "SUB"
    },
    "2943": {
      "offset": [
        1520,
        1526
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2944": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1520,
        1526
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2945": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1520,
        1526
      ],
      "op": "AND",
      "path": "3"
    },
    "2946": {
      "offset": [
        1520,
        1542
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2947": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1520,
        1542
      ],
      "op": "AND",
      "path": "3"
    },
    "2948": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1520,
        1542
      ],
      "op": "EQ",
      "path": "3"
    },
    "2949": {
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD5"
    },
    "2952": {
      "offset": [
        1512,
        1579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2953": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2955": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2956": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2957": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2963": {
      "op": "SHL"
    },
    "2964": {
      "offset": [
        1512,
        1579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2965": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2966": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2968": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2970": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2971": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2972": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2973": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2974": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2975": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2977": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2978": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2979": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2980": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3013": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "3015": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3016": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "ADD",
      "path": "3"
    },
    "3017": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3018": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3019": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3020": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3021": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3022": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3023": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "SUB",
      "path": "3"
    },
    "3024": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "3026": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "ADD",
      "path": "3"
    },
    "3027": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3028": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3029": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1512,
        1579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3036": {
      "op": "SHL"
    },
    "3037": {
      "op": "SUB"
    },
    "3038": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2321,
        2343
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 32
    },
    "3039": {
      "branch": 72,
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2321,
        2343
      ],
      "op": "AND",
      "path": "3"
    },
    "3040": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC1A"
    },
    "3043": {
      "branch": 72,
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3044": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3046": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3047": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3053": {
      "op": "SHL"
    },
    "3054": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3055": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3056": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3058": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "ADD",
      "path": "3"
    },
    "3059": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3060": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3061": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3063": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "ADD",
      "path": "3"
    },
    "3064": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3065": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3066": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "SUB",
      "path": "3"
    },
    "3067": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3068": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3069": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "3071": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3072": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3073": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3075": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "ADD",
      "path": "3"
    },
    "3076": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3077": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x142E"
    },
    "3080": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "3082": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3083": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "3084": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3086": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "ADD",
      "path": "3"
    },
    "3087": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3088": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "POP",
      "path": "3"
    },
    "3089": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "POP",
      "path": "3"
    },
    "3090": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3092": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3093": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3094": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3095": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "SUB",
      "path": "3"
    },
    "3096": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3097": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3098": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2313,
        2386
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3099": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2422,
        2428
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 33,
      "value": "0x35"
    },
    "3101": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2422,
        2428
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3102": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2439
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3104": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2439
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3111": {
      "op": "SHL"
    },
    "3112": {
      "op": "SUB"
    },
    "3113": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2439
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3114": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2439
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3115": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2439
      ],
      "op": "AND",
      "path": "3"
    },
    "3116": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2439
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3117": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2422,
        2428
      ],
      "op": "AND",
      "path": "3"
    },
    "3118": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2422,
        2428
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3119": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2439
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3152": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2439
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3153": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2422,
        2428
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3155": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2422,
        2428
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3156": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2401,
        2439
      ],
      "op": "LOG3",
      "path": "3"
    },
    "3157": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2449,
        2455
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 34,
      "value": "0x35"
    },
    "3159": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2449,
        2466
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3160": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2449,
        2466
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3167": {
      "op": "SHL"
    },
    "3168": {
      "op": "SUB"
    },
    "3169": {
      "op": "NOT"
    },
    "3170": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2449,
        2466
      ],
      "op": "AND",
      "path": "3"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3177": {
      "op": "SHL"
    },
    "3178": {
      "op": "SUB"
    },
    "3179": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2449,
        2466
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3180": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2449,
        2466
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3181": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2449,
        2466
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3182": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2449,
        2466
      ],
      "op": "AND",
      "path": "3"
    },
    "3183": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2449,
        2466
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3184": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2449,
        2466
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3185": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2449,
        2466
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3186": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2449,
        2466
      ],
      "op": "OR",
      "path": "3"
    },
    "3187": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2449,
        2466
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3188": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2449,
        2466
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3189": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "o",
      "offset": [
        2233,
        2473
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3190": {
      "offset": [
        787,
        819
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3191": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        787,
        819
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6B"
    },
    "3193": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        787,
        819
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3194": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        787,
        819
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3195": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "o",
      "offset": [
        787,
        819
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3196": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4796,
        5118
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3197": {
      "offset": [
        1530,
        1542
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC84"
    },
    "3200": {
      "offset": [
        1530,
        1540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1141"
    },
    "3203": {
      "jump": "i",
      "offset": [
        1530,
        1542
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3204": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1530,
        1542
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3205": {
      "offset": [
        1520,
        1526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x35"
    },
    "3207": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1520,
        1526
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3214": {
      "op": "SHL"
    },
    "3215": {
      "op": "SUB"
    },
    "3216": {
      "offset": [
        1520,
        1526
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3217": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1520,
        1526
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3218": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1520,
        1526
      ],
      "op": "AND",
      "path": "3"
    },
    "3219": {
      "offset": [
        1520,
        1542
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3220": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1520,
        1542
      ],
      "op": "AND",
      "path": "3"
    },
    "3221": {
      "branch": 73,
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1520,
        1542
      ],
      "op": "EQ",
      "path": "3"
    },
    "3222": {
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCE6"
    },
    "3225": {
      "branch": 73,
      "offset": [
        1512,
        1579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3226": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3228": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3229": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3230": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3236": {
      "op": "SHL"
    },
    "3237": {
      "offset": [
        1512,
        1579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3238": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3239": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3241": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3243": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3244": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "ADD",
      "path": "3"
    },
    "3245": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3246": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3247": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3248": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "3250": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3251": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "ADD",
      "path": "3"
    },
    "3252": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3253": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3286": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "3288": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3289": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "ADD",
      "path": "3"
    },
    "3290": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3291": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3292": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3293": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3294": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3295": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3296": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "SUB",
      "path": "3"
    },
    "3297": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "3299": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "ADD",
      "path": "3"
    },
    "3300": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3301": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3302": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        1512,
        1579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3303": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4858,
        4881
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 35,
      "value": "0xCEE"
    },
    "3306": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4858,
        4879
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB33"
    },
    "3309": {
      "fn": "BadgerHunt.recycleExcess",
      "jump": "i",
      "offset": [
        4858,
        4881
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3310": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4858,
        4881
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3311": {
      "branch": 66,
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4858,
        4886
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3312": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4858,
        4920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3313": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4858,
        4920
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3314": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4858,
        4920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD03"
    },
    "3317": {
      "branch": 66,
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4858,
        4920
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3318": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4858,
        4920
      ],
      "op": "POP",
      "path": "0"
    },
    "3319": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4910,
        4920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6C"
    },
    "3321": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4910,
        4920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3322": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4890,
        4907
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD01"
    },
    "3325": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4890,
        4905
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD9"
    },
    "3328": {
      "fn": "BadgerHunt.recycleExcess",
      "jump": "i",
      "offset": [
        4890,
        4907
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3329": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4890,
        4907
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3330": {
      "branch": 67,
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4890,
        4920
      ],
      "op": "GT",
      "path": "0"
    },
    "3331": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4858,
        4920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3332": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD54"
    },
    "3335": {
      "branch": 67,
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3336": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3338": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3339": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3340": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3346": {
      "op": "SHL"
    },
    "3347": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3348": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3349": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3351": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3353": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3354": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "ADD",
      "path": "0"
    },
    "3355": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3356": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x18"
    },
    "3358": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3360": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3361": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "ADD",
      "path": "0"
    },
    "3362": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3363": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x48756E7420706572696F64206E6F742066696E69736865640000000000000000"
    },
    "3396": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3398": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3399": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "ADD",
      "path": "0"
    },
    "3400": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3401": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3402": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3403": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3404": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3405": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3406": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "SUB",
      "path": "0"
    },
    "3407": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3409": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "ADD",
      "path": "0"
    },
    "3410": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3411": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3412": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4850,
        4949
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3413": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4959,
        4983
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3415": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5004,
        5009
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3416": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5004,
        5009
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3417": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3419": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3420": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3421": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3428": {
      "op": "SHL"
    },
    "3429": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3430": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3431": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5029,
        5033
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3432": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3434": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3435": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "ADD",
      "path": "0"
    },
    "3436": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3437": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3438": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3439": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5004,
        5009
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "3443": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5004,
        5009
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3444": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5004,
        5009
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3445": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5004,
        5009
      ],
      "op": "DIV",
      "path": "0"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3452": {
      "op": "SHL"
    },
    "3453": {
      "op": "SUB"
    },
    "3454": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5004,
        5009
      ],
      "op": "AND",
      "path": "0"
    },
    "3455": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5004,
        5009
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3456": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5020
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "3461": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5020
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3462": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3464": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3465": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3466": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "ADD",
      "path": "0"
    },
    "3467": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3468": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3470": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3471": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3472": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3473": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3474": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3475": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3476": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "SUB",
      "path": "0"
    },
    "3477": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "ADD",
      "path": "0"
    },
    "3478": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3479": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5004,
        5009
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3480": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3481": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "3482": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3483": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3484": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3485": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA5"
    },
    "3488": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3489": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3491": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3492": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3493": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3494": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "POP",
      "path": "0"
    },
    "3495": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "GAS",
      "path": "0"
    },
    "3496": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "3497": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3498": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3499": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3500": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB9"
    },
    "3503": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3504": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3505": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3507": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3508": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3509": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3510": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3512": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3513": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3514": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "POP",
      "path": "0"
    },
    "3515": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "POP",
      "path": "0"
    },
    "3516": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "POP",
      "path": "0"
    },
    "3517": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "POP",
      "path": "0"
    },
    "3518": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3520": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3521": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3522": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3524": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3525": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "LT",
      "path": "0"
    },
    "3526": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3527": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDCF"
    },
    "3530": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3531": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3533": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3534": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3535": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3536": {
      "op": "POP"
    },
    "3537": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3538": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5063,
        5068
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 36,
      "value": "0x0"
    },
    "3540": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5063,
        5068
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3541": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5063,
        5068
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3542": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5079,
        5092
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6D"
    },
    "3544": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5079,
        5092
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3545": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3547": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3548": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3549": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3556": {
      "op": "SHL"
    },
    "3557": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3558": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3565": {
      "op": "SHL"
    },
    "3566": {
      "op": "SUB"
    },
    "3567": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5079,
        5092
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3568": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5079,
        5092
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3569": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5079,
        5092
      ],
      "op": "AND",
      "path": "0"
    },
    "3570": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3572": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3573": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "ADD",
      "path": "0"
    },
    "3574": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3575": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3577": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3578": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "ADD",
      "path": "0"
    },
    "3579": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3580": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3581": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3582": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3583": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3584": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3585": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "3586": {
      "op": "POP"
    },
    "3587": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5063,
        5068
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10000"
    },
    "3591": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5063,
        5068
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3592": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5063,
        5068
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3593": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5063,
        5068
      ],
      "op": "DIV",
      "path": "0"
    },
    "3594": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5063,
        5068
      ],
      "op": "AND",
      "path": "0"
    },
    "3595": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5063,
        5068
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3596": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5078
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "3601": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5078
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3602": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3604": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3605": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3606": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "ADD",
      "path": "0"
    },
    "3607": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3608": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3610": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        4986,
        5035
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3611": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3612": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3613": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3614": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3615": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "SUB",
      "path": "0"
    },
    "3616": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3617": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3618": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "ADD",
      "path": "0"
    },
    "3619": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3620": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3621": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3622": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5063,
        5068
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3623": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3624": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "3625": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3626": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3627": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3628": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE34"
    },
    "3631": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3632": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3634": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3635": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3636": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3637": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "POP",
      "path": "0"
    },
    "3638": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "GAS",
      "path": "0"
    },
    "3639": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "CALL",
      "path": "0"
    },
    "3640": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3641": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3642": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3643": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE48"
    },
    "3646": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3647": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3648": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3650": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3651": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3652": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3653": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3655": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3656": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3657": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "POP",
      "path": "0"
    },
    "3658": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "POP",
      "path": "0"
    },
    "3659": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "POP",
      "path": "0"
    },
    "3660": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "POP",
      "path": "0"
    },
    "3661": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3663": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3664": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3665": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3667": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3668": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "LT",
      "path": "0"
    },
    "3669": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3670": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x906"
    },
    "3673": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3674": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3676": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3677": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        5045,
        5111
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3678": {
      "offset": [
        448,
        468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3679": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        448,
        468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3681": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        448,
        468
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3682": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        448,
        468
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x10000"
    },
    "3686": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        448,
        468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3687": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        448,
        468
      ],
      "op": "DIV",
      "path": "1"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3694": {
      "op": "SHL"
    },
    "3695": {
      "op": "SUB"
    },
    "3696": {
      "offset": [
        448,
        468
      ],
      "op": "AND",
      "path": "1"
    },
    "3697": {
      "fn": "BadgerHunt.recycleExcess",
      "offset": [
        448,
        468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3698": {
      "fn": "BadgerHunt.recycleExcess",
      "jump": "o",
      "offset": [
        448,
        468
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3699": {
      "offset": [
        598,
        637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3700": {
      "offset": [
        632,
        637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "3703": {
      "offset": [
        598,
        637
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3704": {
      "fn": "BadgerHunt.recycleExcess",
      "jump": "o",
      "offset": [
        598,
        637
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3705": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        508,
        1287
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3706": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        599,
        603
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3708": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        638,
        642
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3709": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        599,
        603
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3710": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        653,
        1168
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3711": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        677,
        682
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3712": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        677,
        689
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3713": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        673,
        674
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3714": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        673,
        689
      ],
      "op": "LT",
      "path": "4"
    },
    "3715": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        653,
        1168
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3716": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        653,
        1168
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF17"
    },
    "3719": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        653,
        1168
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3720": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        710,
        730
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3722": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        733,
        738
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3723": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        739,
        740
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3724": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        733,
        741
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3725": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        733,
        741
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3726": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        733,
        741
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3727": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        733,
        741
      ],
      "op": "LT",
      "path": "4"
    },
    "3728": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        733,
        741
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE95"
    },
    "3731": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        733,
        741
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3732": {
      "dev": "Index out of range",
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        733,
        741
      ],
      "op": "INVALID",
      "path": "4"
    },
    "3733": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        733,
        741
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3734": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        733,
        741
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3736": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        733,
        741
      ],
      "op": "MUL",
      "path": "4"
    },
    "3737": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        733,
        741
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3739": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        733,
        741
      ],
      "op": "ADD",
      "path": "4"
    },
    "3740": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        733,
        741
      ],
      "op": "ADD",
      "path": "4"
    },
    "3741": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        733,
        741
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3742": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        710,
        741
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3743": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        710,
        741
      ],
      "op": "POP",
      "path": "4"
    },
    "3744": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        776,
        788
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3745": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        760,
        772
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3746": {
      "branch": 71,
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        760,
        788
      ],
      "op": "GT",
      "path": "4"
    },
    "3747": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        756,
        1158
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEDC"
    },
    "3750": {
      "branch": 71,
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        756,
        1158
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3751": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        928,
        940
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 37
    },
    "3752": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        942,
        954
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3753": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3755": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3756": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3758": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "ADD",
      "path": "4"
    },
    "3759": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3760": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3761": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3762": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3763": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3765": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "ADD",
      "path": "4"
    },
    "3766": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3767": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3768": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3769": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3771": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "ADD",
      "path": "4"
    },
    "3772": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3773": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "POP",
      "path": "4"
    },
    "3774": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "POP",
      "path": "4"
    },
    "3775": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "POP",
      "path": "4"
    },
    "3776": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3778": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3779": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3781": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3782": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3783": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "SUB",
      "path": "4"
    },
    "3784": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "SUB",
      "path": "4"
    },
    "3785": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3786": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3787": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3788": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3790": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        911,
        955
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3791": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        901,
        956
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3792": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        901,
        956
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3793": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        901,
        956
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3794": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        901,
        956
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3796": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        901,
        956
      ],
      "op": "ADD",
      "path": "4"
    },
    "3797": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        901,
        956
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3798": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        886,
        956
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3799": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        886,
        956
      ],
      "op": "POP",
      "path": "4"
    },
    "3800": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        756,
        1158
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF0E"
    },
    "3803": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        756,
        1158
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3804": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        756,
        1158
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3805": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1115,
        1127
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 38
    },
    "3806": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1129,
        1141
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3807": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3809": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3810": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3812": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "ADD",
      "path": "4"
    },
    "3813": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3814": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3815": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3816": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3817": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3819": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "ADD",
      "path": "4"
    },
    "3820": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3821": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3822": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3823": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3825": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "ADD",
      "path": "4"
    },
    "3826": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3827": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "POP",
      "path": "4"
    },
    "3828": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "POP",
      "path": "4"
    },
    "3829": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "POP",
      "path": "4"
    },
    "3830": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3832": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3833": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3835": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3836": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3837": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "SUB",
      "path": "4"
    },
    "3838": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "SUB",
      "path": "4"
    },
    "3839": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3840": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3841": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3842": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3844": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1098,
        1142
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3845": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1088,
        1143
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3846": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1088,
        1143
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3847": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1088,
        1143
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3848": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1088,
        1143
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3850": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1088,
        1143
      ],
      "op": "ADD",
      "path": "4"
    },
    "3851": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1088,
        1143
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3852": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1073,
        1143
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3853": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1073,
        1143
      ],
      "op": "POP",
      "path": "4"
    },
    "3854": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        756,
        1158
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3855": {
      "op": "POP"
    },
    "3856": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        691,
        694
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 39,
      "value": "0x1"
    },
    "3858": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        691,
        694
      ],
      "op": "ADD",
      "path": "4"
    },
    "3859": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        653,
        1168
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE7E"
    },
    "3862": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        653,
        1168
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3863": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        653,
        1168
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3864": {
      "op": "POP"
    },
    "3865": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1260,
        1280
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 40
    },
    "3866": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1260,
        1280
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3867": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1260,
        1280
      ],
      "op": "EQ",
      "path": "4"
    },
    "3868": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        1260,
        1280
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3869": {
      "fn": "MerkleProofUpgradeable.verify",
      "offset": [
        508,
        1287
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3870": {
      "op": "POP"
    },
    "3871": {
      "op": "POP"
    },
    "3872": {
      "op": "POP"
    },
    "3873": {
      "fn": "MerkleProofUpgradeable.verify",
      "jump": "o",
      "offset": [
        508,
        1287
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3874": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1098,
        1345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3875": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1188,
        1191
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "3878": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1180,
        1191
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3879": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1180,
        1191
      ],
      "op": "DIV",
      "path": "1"
    },
    "3880": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1153,
        1177
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3882": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1282,
        1313
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 41
    },
    "3883": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1282,
        1313
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3884": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1282,
        1313
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3885": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1282,
        1295
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3887": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1282,
        1313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3889": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1282,
        1313
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3890": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1282,
        1313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3892": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1282,
        1313
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3893": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1282,
        1313
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3894": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1282,
        1313
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3895": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1282,
        1313
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3896": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1317,
        1318
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3898": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1227,
        1238
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3900": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1227,
        1238
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3901": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1227,
        1238
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3902": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1227,
        1238
      ],
      "op": "AND",
      "path": "1"
    },
    "3903": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1317,
        1337
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3904": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1317,
        1337
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3905": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1317,
        1337
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3906": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1317,
        1337
      ],
      "op": "SHL",
      "path": "1"
    },
    "3907": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1282,
        1338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3908": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1282,
        1338
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3909": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1282,
        1338
      ],
      "op": "OR",
      "path": "1"
    },
    "3910": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1248,
        1338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3911": {
      "fn": "MerkleDistributor._setClaimed",
      "offset": [
        1248,
        1338
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3912": {
      "fn": "MerkleDistributor._setClaimed",
      "jump": "o",
      "offset": [
        1098,
        1345
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3913": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2191,
        2650
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3914": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2249,
        2256
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3916": {
      "branch": 74,
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2490,
        2496
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3917": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2486,
        2531
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF58"
    },
    "3920": {
      "branch": 74,
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2486,
        2531
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3921": {
      "op": "POP"
    },
    "3922": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2519,
        2520
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 42,
      "value": "0x0"
    },
    "3924": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2512,
        2520
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFA5"
    },
    "3927": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2512,
        2520
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3928": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2486,
        2531
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3929": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2553,
        2558
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3930": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2553,
        2558
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3931": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2553,
        2558
      ],
      "op": "MUL",
      "path": "5"
    },
    "3932": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2557,
        2558
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3933": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2553,
        2554
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3934": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2553,
        2558
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3935": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2553,
        2554
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3936": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2576,
        2581
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 43,
      "value": "0xF65"
    },
    "3939": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2576,
        2581
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3940": {
      "dev": "Division by zero",
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2576,
        2581
      ],
      "op": "INVALID",
      "path": "5"
    },
    "3941": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2576,
        2581
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3942": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2576,
        2581
      ],
      "op": "DIV",
      "path": "5"
    },
    "3943": {
      "branch": 75,
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2576,
        2586
      ],
      "op": "EQ",
      "path": "5"
    },
    "3944": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFA2"
    },
    "3947": {
      "branch": 75,
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3948": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3950": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3951": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3957": {
      "op": "SHL"
    },
    "3958": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3959": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3960": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3962": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "ADD",
      "path": "5"
    },
    "3963": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3964": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3965": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3967": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "ADD",
      "path": "5"
    },
    "3968": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3969": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3970": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "SUB",
      "path": "5"
    },
    "3971": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3972": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3973": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x21"
    },
    "3975": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3976": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3977": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3979": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "ADD",
      "path": "5"
    },
    "3980": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3981": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14CB"
    },
    "3984": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x21"
    },
    "3986": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3987": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "3988": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3990": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "ADD",
      "path": "5"
    },
    "3991": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3992": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "POP",
      "path": "5"
    },
    "3993": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "POP",
      "path": "5"
    },
    "3994": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3996": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3997": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3998": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3999": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "SUB",
      "path": "5"
    },
    "4000": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4001": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4002": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2568,
        2624
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4003": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2642,
        2643
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 44
    },
    "4004": {
      "op": "POP"
    },
    "4005": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2191,
        2650
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4006": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2191,
        2650
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4007": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2191,
        2650
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4008": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2191,
        2650
      ],
      "op": "POP",
      "path": "5"
    },
    "4009": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        2191,
        2650
      ],
      "op": "POP",
      "path": "5"
    },
    "4010": {
      "fn": "SafeMathUpgradeable.mul",
      "jump": "o",
      "offset": [
        2191,
        2650
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4011": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3112,
        3242
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4012": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3170,
        3177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4014": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 45,
      "value": "0xFA2"
    },
    "4017": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3200,
        3201
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4018": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3203,
        3204
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4019": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4021": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4022": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4023": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4025": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "ADD",
      "path": "5"
    },
    "4026": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4028": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4029": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4030": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1A"
    },
    "4032": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4033": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4034": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4036": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "ADD",
      "path": "5"
    },
    "4037": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "4070": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4071": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4072": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3235
      ],
      "op": "POP",
      "path": "5"
    },
    "4073": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3196,
        3199
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1145"
    },
    "4076": {
      "fn": "SafeMathUpgradeable.div",
      "jump": "i",
      "offset": [
        3196,
        3235
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4077": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1332,
        1466
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4078": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1390,
        1397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4080": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 46,
      "value": "0xFA2"
    },
    "4083": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1420,
        1421
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4084": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1423,
        1424
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4085": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4087": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4088": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4089": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4091": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "ADD",
      "path": "5"
    },
    "4092": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4094": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4095": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4096": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1E"
    },
    "4098": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4099": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4100": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4102": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "ADD",
      "path": "5"
    },
    "4103": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "4136": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4137": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4138": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "POP",
      "path": "5"
    },
    "4139": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1419
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11E7"
    },
    "4142": {
      "fn": "SafeMathUpgradeable.sub",
      "jump": "i",
      "offset": [
        1416,
        1459
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4143": {
      "fn": "Initializable._isConstructor",
      "offset": [
        1866,
        2459
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4144": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2302,
        2306
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "4145": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2410,
        2427
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "4146": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2445,
        2452
      ],
      "op": "ISZERO",
      "path": "6",
      "statement": 47
    },
    "4147": {
      "fn": "Initializable._isConstructor",
      "offset": [
        1866,
        2459
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4148": {
      "fn": "Initializable._isConstructor",
      "jump": "o",
      "offset": [
        1866,
        2459
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4149": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        916,
        1042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4150": {
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4152": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1426,
        1439
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4153": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "4156": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1426,
        1439
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4157": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1426,
        1439
      ],
      "op": "DIV",
      "path": "6"
    },
    "4158": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "4160": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1426,
        1439
      ],
      "op": "AND",
      "path": "6"
    },
    "4161": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1426,
        1439
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4162": {
      "offset": [
        1426,
        1459
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x104E"
    },
    "4165": {
      "offset": [
        1426,
        1459
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4166": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1426,
        1459
      ],
      "op": "POP",
      "path": "6"
    },
    "4167": {
      "offset": [
        1443,
        1459
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x104E"
    },
    "4170": {
      "offset": [
        1443,
        1457
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102F"
    },
    "4173": {
      "jump": "i",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4174": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4175": {
      "offset": [
        1426,
        1476
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4176": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1426,
        1476
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x105C"
    },
    "4179": {
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4180": {
      "op": "POP"
    },
    "4181": {
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4183": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1464,
        1476
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4184": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "4186": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1464,
        1476
      ],
      "op": "AND",
      "path": "6"
    },
    "4187": {
      "offset": [
        1463,
        1476
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4188": {
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4189": {
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1097"
    },
    "4192": {
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4193": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4195": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4196": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4202": {
      "op": "SHL"
    },
    "4203": {
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4204": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4205": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4207": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "4208": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4209": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4210": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4212": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "4213": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4214": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4215": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "SUB",
      "path": "6"
    },
    "4216": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4217": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4218": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2E"
    },
    "4220": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4221": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4222": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4224": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "4225": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4226": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x149D"
    },
    "4229": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2E"
    },
    "4231": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4232": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "4233": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4235": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "4236": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4237": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "POP",
      "path": "6"
    },
    "4238": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "POP",
      "path": "6"
    },
    "4239": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4241": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4242": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4243": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4244": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "SUB",
      "path": "6"
    },
    "4245": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4246": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4247": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4248": {
      "offset": [
        1538,
        1557
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4250": {
      "offset": [
        1561,
        1574
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4251": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "4254": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1561,
        1574
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4255": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1561,
        1574
      ],
      "op": "DIV",
      "path": "6"
    },
    "4256": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "4258": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1561,
        1574
      ],
      "op": "AND",
      "path": "6"
    },
    "4259": {
      "offset": [
        1560,
        1574
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4260": {
      "offset": [
        1584,
        1682
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4261": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1584,
        1682
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4262": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1584,
        1682
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10C2"
    },
    "4265": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1584,
        1682
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4266": {
      "offset": [
        1618,
        1631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4268": {
      "offset": [
        1618,
        1638
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4269": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1618,
        1638
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4272": {
      "op": "NOT"
    },
    "4273": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4276": {
      "op": "NOT"
    },
    "4277": {
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4278": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4279": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1618,
        1638
      ],
      "op": "AND",
      "path": "6"
    },
    "4280": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1618,
        1638
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "4283": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1618,
        1638
      ],
      "op": "OR",
      "path": "6"
    },
    "4284": {
      "offset": [
        1652,
        1671
      ],
      "op": "AND",
      "path": "6"
    },
    "4285": {
      "offset": [
        1634,
        1638
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4287": {
      "offset": [
        1652,
        1671
      ],
      "op": "OR",
      "path": "6"
    },
    "4288": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1652,
        1671
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4289": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1652,
        1671
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4290": {
      "offset": [
        1584,
        1682
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4291": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        973,
        999
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 48,
      "value": "0x10CA"
    },
    "4294": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        973,
        997
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1241"
    },
    "4297": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "jump": "i",
      "offset": [
        973,
        999
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4298": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        973,
        999
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4299": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1009,
        1035
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 49,
      "value": "0x10D2"
    },
    "4302": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1009,
        1033
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12E1"
    },
    "4305": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "jump": "i",
      "offset": [
        1009,
        1035
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4306": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1009,
        1035
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4307": {
      "offset": [
        1708,
        1722
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4308": {
      "offset": [
        1704,
        1770
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4309": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1704,
        1770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10E4"
    },
    "4312": {
      "offset": [
        1704,
        1770
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4313": {
      "offset": [
        1754,
        1759
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4315": {
      "offset": [
        1738,
        1759
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4316": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1738,
        1759
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4317": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4320": {
      "op": "NOT"
    },
    "4321": {
      "offset": [
        1738,
        1759
      ],
      "op": "AND",
      "path": "6"
    },
    "4322": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1738,
        1759
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4323": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1738,
        1759
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4324": {
      "offset": [
        1704,
        1770
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4325": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        916,
        1042
      ],
      "op": "POP",
      "path": "3"
    },
    "4326": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "jump": "o",
      "offset": [
        916,
        1042
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4327": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        885,
        1061
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4328": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        943,
        950
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4330": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        974,
        979
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4331": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        974,
        979
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4332": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        974,
        979
      ],
      "op": "ADD",
      "path": "5"
    },
    "4333": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        997,
        1003
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 50
    },
    "4334": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        997,
        1003
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4335": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        997,
        1003
      ],
      "op": "LT",
      "path": "5"
    },
    "4336": {
      "branch": 76,
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        997,
        1003
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4337": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFA2"
    },
    "4340": {
      "branch": 76,
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4341": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4343": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4344": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4345": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4351": {
      "op": "SHL"
    },
    "4352": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4353": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4354": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4356": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4358": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4359": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "ADD",
      "path": "5"
    },
    "4360": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4361": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1B"
    },
    "4363": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "4365": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4366": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "ADD",
      "path": "5"
    },
    "4367": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4368": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "4401": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "4403": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4404": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "ADD",
      "path": "5"
    },
    "4405": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4406": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4407": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4408": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4409": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4410": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4411": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "SUB",
      "path": "5"
    },
    "4412": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "4414": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "ADD",
      "path": "5"
    },
    "4415": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4416": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4417": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        820,
        924
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4418": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        907,
        917
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 51
    },
    "4419": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        820,
        924
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4420": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "o",
      "offset": [
        820,
        924
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4421": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3724,
        3996
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4422": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3810,
        3817
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4424": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3844,
        3856
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 52
    },
    "4425": {
      "branch": 77,
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3837,
        3842
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4426": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11D1"
    },
    "4429": {
      "branch": 77,
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4430": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4432": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4433": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4439": {
      "op": "SHL"
    },
    "4440": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4441": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4442": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4444": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "ADD",
      "path": "5"
    },
    "4445": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4446": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4447": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4449": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "ADD",
      "path": "5"
    },
    "4450": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4451": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4452": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "SUB",
      "path": "5"
    },
    "4453": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4454": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4455": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4456": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4457": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4458": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4459": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4460": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4461": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4463": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "ADD",
      "path": "5"
    },
    "4464": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4465": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "POP",
      "path": "5"
    },
    "4466": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4467": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4468": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4469": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4471": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "ADD",
      "path": "5"
    },
    "4472": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4473": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4474": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4475": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4476": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4478": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4479": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4480": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4481": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "LT",
      "path": "5"
    },
    "4482": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4483": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1196"
    },
    "4486": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4487": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4488": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4489": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "ADD",
      "path": "5"
    },
    "4490": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4491": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4492": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4493": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "ADD",
      "path": "5"
    },
    "4494": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4495": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4497": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "ADD",
      "path": "5"
    },
    "4498": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x117E"
    },
    "4501": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4502": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4503": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "POP",
      "path": "5"
    },
    "4504": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "POP",
      "path": "5"
    },
    "4505": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "POP",
      "path": "5"
    },
    "4506": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "POP",
      "path": "5"
    },
    "4507": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4508": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "POP",
      "path": "5"
    },
    "4509": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4510": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4511": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "ADD",
      "path": "5"
    },
    "4512": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4513": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "4515": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "AND",
      "path": "5"
    },
    "4516": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4517": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4518": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11C3"
    },
    "4521": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4522": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4523": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4524": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "SUB",
      "path": "5"
    },
    "4525": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4526": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4527": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4529": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4530": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4532": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "SUB",
      "path": "5"
    },
    "4533": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "4536": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "EXP",
      "path": "5"
    },
    "4537": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "SUB",
      "path": "5"
    },
    "4538": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "NOT",
      "path": "5"
    },
    "4539": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "AND",
      "path": "5"
    },
    "4540": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4541": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4542": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4544": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "ADD",
      "path": "5"
    },
    "4545": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4546": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "POP",
      "path": "5"
    },
    "4547": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4548": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "POP",
      "path": "5"
    },
    "4549": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4550": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "POP",
      "path": "5"
    },
    "4551": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "POP",
      "path": "5"
    },
    "4552": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "POP",
      "path": "5"
    },
    "4553": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4555": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4556": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4557": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4558": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "SUB",
      "path": "5"
    },
    "4559": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4560": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4561": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4562": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3829,
        3857
      ],
      "op": "POP",
      "path": "5"
    },
    "4563": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3867,
        3876
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4565": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3883,
        3884
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4566": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3879,
        3880
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4567": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3879,
        3884
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4568": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3879,
        3884
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11DD"
    },
    "4571": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3879,
        3884
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4572": {
      "dev": "Division by zero",
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3879,
        3884
      ],
      "op": "INVALID",
      "path": "5"
    },
    "4573": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3879,
        3884
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4574": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3879,
        3884
      ],
      "op": "DIV",
      "path": "5"
    },
    "4575": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3879,
        3884
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "4576": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        3724,
        3996
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "op": "POP"
    },
    "4579": {
      "op": "POP"
    },
    "4580": {
      "op": "POP"
    },
    "4581": {
      "op": "POP"
    },
    "4582": {
      "fn": "SafeMathUpgradeable.div",
      "jump": "o",
      "offset": [
        3724,
        3996
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4583": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1757,
        1944
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4584": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1843,
        1850
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4586": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1878,
        1890
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 53
    },
    "4587": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1870,
        1876
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4588": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1870,
        1876
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4589": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1870,
        1876
      ],
      "op": "GT",
      "path": "5"
    },
    "4590": {
      "branch": 78,
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1870,
        1876
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4591": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1239"
    },
    "4594": {
      "branch": 78,
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4595": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4597": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4598": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4604": {
      "op": "SHL"
    },
    "4605": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4606": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4607": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4609": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4611": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4612": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "ADD",
      "path": "5"
    },
    "4613": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4614": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4615": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4616": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4617": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4618": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "4620": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4621": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "ADD",
      "path": "5"
    },
    "4622": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4623": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4624": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4625": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4626": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4627": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4628": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4629": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "4631": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4632": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4633": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "ADD",
      "path": "5"
    },
    "4634": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4635": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4636": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4637": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "ADD",
      "path": "5"
    },
    "4638": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4639": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4640": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4641": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4642": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4644": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4645": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4646": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1196"
    },
    "4649": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4650": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4651": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4652": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "ADD",
      "path": "5"
    },
    "4653": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4654": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4655": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4656": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "ADD",
      "path": "5"
    },
    "4657": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4658": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4660": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "ADD",
      "path": "5"
    },
    "4661": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x117E"
    },
    "4664": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4665": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4666": {
      "op": "POP"
    },
    "4667": {
      "op": "POP"
    },
    "4668": {
      "op": "POP"
    },
    "4669": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1913,
        1918
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4670": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1913,
        1918
      ],
      "op": "SUB",
      "path": "5"
    },
    "4671": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1913,
        1918
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4672": {
      "fn": "SafeMathUpgradeable.sub",
      "jump": "o",
      "offset": [
        1757,
        1944
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4673": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        751,
        815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4674": {
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4676": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4677": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "4680": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4681": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "DIV",
      "path": "6"
    },
    "4682": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "4684": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "AND",
      "path": "6"
    },
    "4685": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4686": {
      "offset": [
        1426,
        1459
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x125A"
    },
    "4689": {
      "offset": [
        1426,
        1459
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4690": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1459
      ],
      "op": "POP",
      "path": "6"
    },
    "4691": {
      "offset": [
        1443,
        1459
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x125A"
    },
    "4694": {
      "offset": [
        1443,
        1457
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102F"
    },
    "4697": {
      "jump": "i",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4698": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4699": {
      "offset": [
        1426,
        1476
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4700": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1476
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1268"
    },
    "4703": {
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4704": {
      "op": "POP"
    },
    "4705": {
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4707": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1464,
        1476
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4708": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "4710": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1464,
        1476
      ],
      "op": "AND",
      "path": "6"
    },
    "4711": {
      "offset": [
        1463,
        1476
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4712": {
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4713": {
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12A3"
    },
    "4716": {
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4717": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4719": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4720": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4726": {
      "op": "SHL"
    },
    "4727": {
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4728": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4729": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4731": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "4732": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4733": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4734": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4736": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "4737": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4738": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4739": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "SUB",
      "path": "6"
    },
    "4740": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4741": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4742": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2E"
    },
    "4744": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4745": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4746": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4748": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "4749": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4750": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x149D"
    },
    "4753": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2E"
    },
    "4755": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4756": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "4757": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4759": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "4760": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4761": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "POP",
      "path": "6"
    },
    "4762": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "POP",
      "path": "6"
    },
    "4763": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4765": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4766": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4767": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4768": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "SUB",
      "path": "6"
    },
    "4769": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4770": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4771": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4772": {
      "offset": [
        1538,
        1557
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4774": {
      "offset": [
        1561,
        1574
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4775": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "4778": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1561,
        1574
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4779": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1561,
        1574
      ],
      "op": "DIV",
      "path": "6"
    },
    "4780": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "4782": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1561,
        1574
      ],
      "op": "AND",
      "path": "6"
    },
    "4783": {
      "offset": [
        1560,
        1574
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4784": {
      "offset": [
        1584,
        1682
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4785": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1584,
        1682
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4786": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1584,
        1682
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10D2"
    },
    "4789": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1584,
        1682
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4790": {
      "offset": [
        1618,
        1631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4792": {
      "offset": [
        1618,
        1638
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4793": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1618,
        1638
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4796": {
      "op": "NOT"
    },
    "4797": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4800": {
      "op": "NOT"
    },
    "4801": {
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4802": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4803": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1618,
        1638
      ],
      "op": "AND",
      "path": "6"
    },
    "4804": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1618,
        1638
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "4807": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1618,
        1638
      ],
      "op": "OR",
      "path": "6"
    },
    "4808": {
      "offset": [
        1652,
        1671
      ],
      "op": "AND",
      "path": "6"
    },
    "4809": {
      "offset": [
        1634,
        1638
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4811": {
      "offset": [
        1652,
        1671
      ],
      "op": "OR",
      "path": "6"
    },
    "4812": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1652,
        1671
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4813": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1652,
        1671
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4814": {
      "offset": [
        1708,
        1722
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4815": {
      "offset": [
        1704,
        1770
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4816": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1704,
        1770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10E4"
    },
    "4819": {
      "offset": [
        1704,
        1770
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4820": {
      "offset": [
        1754,
        1759
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4822": {
      "offset": [
        1738,
        1759
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4823": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1738,
        1759
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4824": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4827": {
      "op": "NOT"
    },
    "4828": {
      "offset": [
        1738,
        1759
      ],
      "op": "AND",
      "path": "6"
    },
    "4829": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1738,
        1759
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4830": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1738,
        1759
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4831": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        751,
        815
      ],
      "op": "POP",
      "path": "2"
    },
    "4832": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "jump": "o",
      "offset": [
        751,
        815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4833": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1048,
        1240
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4834": {
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4836": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4837": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "4840": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4841": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "DIV",
      "path": "6"
    },
    "4842": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "4844": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "AND",
      "path": "6"
    },
    "4845": {
      "branch": 68,
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4846": {
      "offset": [
        1426,
        1459
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12FA"
    },
    "4849": {
      "branch": 68,
      "offset": [
        1426,
        1459
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4850": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1426,
        1459
      ],
      "op": "POP",
      "path": "6"
    },
    "4851": {
      "offset": [
        1443,
        1459
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12FA"
    },
    "4854": {
      "offset": [
        1443,
        1457
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x102F"
    },
    "4857": {
      "jump": "i",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4858": {
      "branch": 69,
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4859": {
      "offset": [
        1426,
        1476
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4860": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1426,
        1476
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1308"
    },
    "4863": {
      "branch": 69,
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4864": {
      "op": "POP"
    },
    "4865": {
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4867": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1464,
        1476
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4868": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "4870": {
      "branch": 70,
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1464,
        1476
      ],
      "op": "AND",
      "path": "6"
    },
    "4871": {
      "offset": [
        1463,
        1476
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4872": {
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4873": {
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1343"
    },
    "4876": {
      "branch": 70,
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4877": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4879": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4880": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4884": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4886": {
      "op": "SHL"
    },
    "4887": {
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4888": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4889": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4891": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "4892": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4893": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4894": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4896": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "4897": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4898": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4899": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "SUB",
      "path": "6"
    },
    "4900": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4901": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4902": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2E"
    },
    "4904": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4905": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4906": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4908": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "4909": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4910": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x149D"
    },
    "4913": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2E"
    },
    "4915": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4916": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "4917": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4919": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "6"
    },
    "4920": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4921": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "POP",
      "path": "6"
    },
    "4922": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "POP",
      "path": "6"
    },
    "4923": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4925": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4926": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4927": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4928": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "SUB",
      "path": "6"
    },
    "4929": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4930": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "REVERT",
      "path": "6"
    },
    "4931": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4932": {
      "offset": [
        1538,
        1557
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4934": {
      "offset": [
        1561,
        1574
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4935": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "4938": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1561,
        1574
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4939": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1561,
        1574
      ],
      "op": "DIV",
      "path": "6"
    },
    "4940": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "4942": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1561,
        1574
      ],
      "op": "AND",
      "path": "6"
    },
    "4943": {
      "offset": [
        1560,
        1574
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4944": {
      "offset": [
        1584,
        1682
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4945": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1584,
        1682
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4946": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1584,
        1682
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x136E"
    },
    "4949": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1584,
        1682
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4950": {
      "offset": [
        1618,
        1631
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4952": {
      "offset": [
        1618,
        1638
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4953": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1618,
        1638
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4956": {
      "op": "NOT"
    },
    "4957": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4960": {
      "op": "NOT"
    },
    "4961": {
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4962": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4963": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1618,
        1638
      ],
      "op": "AND",
      "path": "6"
    },
    "4964": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1618,
        1638
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "4967": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1618,
        1638
      ],
      "op": "OR",
      "path": "6"
    },
    "4968": {
      "offset": [
        1652,
        1671
      ],
      "op": "AND",
      "path": "6"
    },
    "4969": {
      "offset": [
        1634,
        1638
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4971": {
      "offset": [
        1652,
        1671
      ],
      "op": "OR",
      "path": "6"
    },
    "4972": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1652,
        1671
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4973": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1652,
        1671
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4974": {
      "offset": [
        1584,
        1682
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4975": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1115,
        1132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4977": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1135,
        1147
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1378"
    },
    "4980": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1135,
        1145
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1141"
    },
    "4983": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "jump": "i",
      "offset": [
        1135,
        1147
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4984": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1135,
        1147
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4985": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1157,
        1163
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 54,
      "value": "0x35"
    },
    "4987": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1157,
        1175
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4988": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1157,
        1175
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4995": {
      "op": "SHL"
    },
    "4996": {
      "op": "SUB"
    },
    "4997": {
      "op": "NOT"
    },
    "4998": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1157,
        1175
      ],
      "op": "AND",
      "path": "3"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5005": {
      "op": "SHL"
    },
    "5006": {
      "op": "SUB"
    },
    "5007": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1157,
        1175
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5008": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1157,
        1175
      ],
      "op": "AND",
      "path": "3"
    },
    "5009": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1157,
        1175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5010": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1157,
        1175
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5011": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1157,
        1175
      ],
      "op": "OR",
      "path": "3"
    },
    "5012": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1157,
        1175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5013": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1157,
        1175
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5014": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1157,
        1175
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5015": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1190,
        1233
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 55,
      "value": "0x40"
    },
    "5017": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1190,
        1233
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5018": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1157,
        1175
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5019": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1157,
        1175
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5020": {
      "op": "POP"
    },
    "5021": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1157,
        1175
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5024": {
      "op": "SWAP1"
    },
    "5025": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1190,
        1233
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "5058": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1190,
        1233
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5059": {
      "op": "DUP3"
    },
    "5060": {
      "op": "SWAP1"
    },
    "5061": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1190,
        1233
      ],
      "op": "LOG3",
      "path": "3"
    },
    "5062": {
      "offset": [
        1692,
        1693
      ],
      "op": "POP",
      "path": "6"
    },
    "5063": {
      "offset": [
        1708,
        1722
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5064": {
      "offset": [
        1704,
        1770
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "5065": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1704,
        1770
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10E4"
    },
    "5068": {
      "offset": [
        1704,
        1770
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5069": {
      "offset": [
        1754,
        1759
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5071": {
      "offset": [
        1738,
        1759
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5072": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1738,
        1759
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5073": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "5076": {
      "op": "NOT"
    },
    "5077": {
      "offset": [
        1738,
        1759
      ],
      "op": "AND",
      "path": "6"
    },
    "5078": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1738,
        1759
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5079": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1738,
        1759
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5080": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1048,
        1240
      ],
      "op": "POP",
      "path": "3"
    },
    "5081": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "jump": "o",
      "offset": [
        1048,
        1240
      ],
      "op": "JUMP",
      "path": "3"
    }
  },
  "sha1": "7b8b987c03986ac5b6d0d5d4da18c018fa5f47b1",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.6.11;\n\nimport \"deps/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"deps/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"deps/@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol\";\nimport \"deps/@openzeppelin/contracts-upgradeable/cryptography/MerkleProofUpgradeable.sol\";\nimport \"interfaces/badger/IMerkleDistributor.sol\";\nimport \"./MerkleDistributor.sol\";\n\ncontract BadgerHunt is MerkleDistributor, OwnableUpgradeable {\n    using SafeMathUpgradeable for uint256;\n    uint256 public constant MAX_BPS = 10000;\n\n    uint256 public claimsStart;\n    uint256 public gracePeriod;\n\n    uint256 public epochDuration;\n    uint256 public rewardReductionPerEpoch;\n    uint256 public currentRewardRate;\n    uint256 public finalEpoch;\n\n    address public rewardsEscrow;\n\n    event Hunt(uint256 index, address indexed account, uint256 amount, uint256 userClaim, uint256 rewardsEscrowClaim);\n\n    function initialize(\n        address token_,\n        bytes32 merkleRoot_,\n        uint256 epochDuration_,\n        uint256 rewardReductionPerEpoch_,\n        uint256 claimsStart_,\n        uint256 gracePeriod_,\n        address rewardsEscrow_,\n        address owner_\n    ) public initializer {\n        __MerkleDistributor_init(token_, merkleRoot_);\n\n        __Ownable_init();\n        transferOwnership(owner_);\n\n        epochDuration = epochDuration_;\n        rewardReductionPerEpoch = rewardReductionPerEpoch_;\n        claimsStart = claimsStart_;\n        gracePeriod = gracePeriod_;\n\n        rewardsEscrow = rewardsEscrow_;\n\n        currentRewardRate = 10000;\n\n        finalEpoch = (currentRewardRate / rewardReductionPerEpoch_) - 1;\n    }\n\n    /// ===== View Functions =====\n    /// @dev Get grace period end timestamp\n    function getGracePeriodEnd() public view returns (uint256) {\n        return claimsStart.add(gracePeriod);\n    }  \n\n    /// @dev Get claims start timestamp\n    function getClaimsStartTime() public view returns (uint256) {\n        return claimsStart;\n    }\n\n    /// @dev Get the next epoch start\n    function getNextEpochStart() public view returns (uint256) {\n        uint256 gracePeriodEnd = claimsStart.add(gracePeriod);\n        uint256 epoch = getCurrentEpoch();\n\n        if (epoch == 0) {\n            return claimsStart.add(gracePeriod);\n        } else {\n            return claimsStart.add(gracePeriod).add(epochDuration.mul(epoch));\n        }\n    }\n\n    /// @dev Get the current epoch number\n    function getCurrentEpoch() public view returns (uint256) {\n        uint256 gracePeriodEnd = claimsStart.add(gracePeriod);\n\n        if (now < gracePeriodEnd) {\n            return 0;\n        }\n        uint256 secondsPastGracePeriod = now.sub(gracePeriodEnd);\n        return (secondsPastGracePeriod / epochDuration).add(1);\n    }\n\n    /// @dev Get the rewards % of current epoch\n    function getCurrentRewardsRate() public view returns (uint256) {\n        uint256 epoch = getCurrentEpoch();\n        if (epoch == 0) return MAX_BPS;\n        if (epoch > finalEpoch) return 0;\n        else return MAX_BPS.sub(epoch.mul(rewardReductionPerEpoch));\n    }\n\n    /// @dev Get the rewards % of following epoch\n    function getNextEpochRewardsRate() public view returns (uint256) {\n        uint256 epoch = getCurrentEpoch().add(1);\n        if (epoch == 0) return MAX_BPS;\n        if (epoch > finalEpoch) return 0;\n        else return MAX_BPS.sub(epoch.mul(rewardReductionPerEpoch));\n    }\n\n    /// ===== Public Actions =====\n\n    function claim(\n        uint256 index,\n        address account,\n        uint256 amount,\n        bytes32[] calldata merkleProof\n    ) external virtual override {\n        require(account == msg.sender, \"BadgerDistributor: Can only claim for own account.\");\n        require(!isClaimed(index), \"BadgerDistributor: Drop already claimed.\");\n\n        // Verify the merkle proof.\n        bytes32 node = keccak256(abi.encodePacked(index, account, amount));\n        require(MerkleProofUpgradeable.verify(merkleProof, merkleRoot, node), \"BadgerDistributor: Invalid proof.\");\n\n        // Mark it claimed and send the token.\n        _setClaimed(index);\n\n        uint256 claimable = amount.mul(getCurrentRewardsRate()).div(MAX_BPS);\n\n        require(IERC20Upgradeable(token).transfer(account, claimable), \"Transfer to user failed.\");\n\n        // Transfer any remainder to rewards escrow\n        if (claimable != amount) {\n            require(IERC20Upgradeable(token).transfer(rewardsEscrow, claimable), \"Transfer to rewardsEscrow failed.\");\n        }\n\n        emit Hunt(index, account, amount, claimable, amount.sub(claimable));\n    }\n\n    /// ===== Gated Actions: Owner =====\n\n    /// @notice After hunt is complete, transfer excess funds to rewardsEscrow \n    function recycleExcess() external onlyOwner {\n        require(getCurrentRewardsRate() == 0 && getCurrentEpoch() > finalEpoch, \"Hunt period not finished\");\n        uint256 remainingBalance = IERC20Upgradeable(token).balanceOf(address(this));\n        IERC20Upgradeable(token).transfer(rewardsEscrow, remainingBalance);\n    }\n}\n",
  "sourceMap": "488:4632:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/badger-hunt/BadgerHunt.sol",
  "type": "contract"
}