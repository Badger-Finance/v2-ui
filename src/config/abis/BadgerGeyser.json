{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "durationSec",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "TokensLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialLocked",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "durationSec",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "UnlockScheduleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOKEN_LOCKER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "addDistributionToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDistributionTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumDistributionTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakingToken",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getUnlockSchedulesFor",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "initialLocked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endAtSec",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "durationSec",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct BadgerGeyser.UnlockSchedule[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "globalStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "stakingToken_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialDistributionToken_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "globalStartTime_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialAdmin_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialTokenLocker_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "durationSec",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        }
      ],
      "name": "signalTokenLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "stakeFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supportsHistory",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "totalStakedFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "unlockScheduleCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "unlockSchedules",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "initialLocked",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endAtSec",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "durationSec",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/badger-geyser/BadgerGeyser.sol",
    "30": "deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol",
    "31": "deps/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
    "35": "deps/@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
    "36": "deps/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
    "39": "deps/@openzeppelin/contracts-upgradeable/token/ERC20/SafeERC20Upgradeable.sol",
    "41": "deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
    "42": "deps/@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol"
  },
  "ast": {
    "absolutePath": "contracts/badger-geyser/BadgerGeyser.sol",
    "exportedSymbols": {
      "BadgerGeyser": [
        614
      ]
    },
    "id": 615,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:0"
      },
      {
        "absolutePath": "deps/@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
        "file": "deps/@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 615,
        "sourceUnit": 10314,
        "src": "92:79:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "deps/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "file": "deps/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 615,
        "sourceUnit": 10392,
        "src": "172:84:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "deps/@openzeppelin/contracts-upgradeable/token/ERC20/SafeERC20Upgradeable.sol",
        "file": "deps/@openzeppelin/contracts-upgradeable/token/ERC20/SafeERC20Upgradeable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 615,
        "sourceUnit": 10605,
        "src": "257:87:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "deps/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "file": "deps/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 615,
        "sourceUnit": 10118,
        "src": "345:86:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "deps/@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol",
        "file": "deps/@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 615,
        "sourceUnit": 11000,
        "src": "432:85:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11610,
              "src": "758:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$11610",
                "typeString": "contract Initializable"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "758:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11,
              "name": "AccessControlUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10117,
              "src": "773:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControlUpgradeable_$10117",
                "typeString": "contract AccessControlUpgradeable"
              }
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "773:24:0"
          }
        ],
        "contractDependencies": [
          10117,
          11610,
          13741
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8,
          "nodeType": "StructuredDocumentation",
          "src": "519:212:0",
          "text": " @title Badger Geyser\n@dev Tracks stakes and pledged tokens to be distributed, for use with \n@dev BadgerTree merkle distribution system. An arbitrary number of tokens to \ndistribute can be specified."
        },
        "fullyImplemented": true,
        "id": 614,
        "linearizedBaseContracts": [
          614,
          10117,
          13741,
          11610
        ],
        "name": "BadgerGeyser",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 15,
            "libraryName": {
              "contractScope": null,
              "id": 13,
              "name": "SafeERC20Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10604,
              "src": "810:20:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20Upgradeable_$10604",
                "typeString": "library SafeERC20Upgradeable"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "804:49:0",
            "typeName": {
              "contractScope": null,
              "id": 14,
              "name": "IERC20Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10391,
              "src": "835:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$10391",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "id": 18,
            "libraryName": {
              "contractScope": null,
              "id": 16,
              "name": "SafeMathUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10313,
              "src": "864:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathUpgradeable_$10313",
                "typeString": "library SafeMathUpgradeable"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "858:38:0",
            "typeName": {
              "id": 17,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "888:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 21,
            "libraryName": {
              "contractScope": null,
              "id": 19,
              "name": "EnumerableSetUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10999,
              "src": "907:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSetUpgradeable_$10999",
                "typeString": "library EnumerableSetUpgradeable"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "901:71:0",
            "typeName": {
              "contractScope": null,
              "id": 20,
              "name": "EnumerableSetUpgradeable.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10795,
              "src": "936:35:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$10795_storage_ptr",
                "typeString": "struct EnumerableSetUpgradeable.AddressSet"
              }
            }
          },
          {
            "canonicalName": "BadgerGeyser.UnlockSchedule",
            "id": 30,
            "members": [
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "initialLocked",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 30,
                "src": "1010:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1010:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "endAtSec",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 30,
                "src": "1041:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1041:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "durationSec",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 30,
                "src": "1067:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 26,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1067:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "startTime",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 30,
                "src": "1096:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1096:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UnlockSchedule",
            "nodeType": "StructDefinition",
            "scope": 614,
            "src": "978:142:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d81ff15",
            "id": 32,
            "mutability": "mutable",
            "name": "globalStartTime",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 614,
            "src": "1126:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1126:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "4c255c97",
            "id": 35,
            "mutability": "constant",
            "name": "MAX_PERCENTAGE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 614,
            "src": "1163:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1163:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313030",
              "id": 34,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1204:3:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "cd616ea3",
            "id": 40,
            "mutability": "constant",
            "name": "TOKEN_LOCKER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 614,
            "src": "1213:74:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 36,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1213:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "544f4b454e5f4c4f434b45525f524f4c45",
                  "id": 38,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1267:19:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_4bf6f2cdcc8ad6c087a7a4fbecf46150b3686b71387234cac2b3e2e6dc70e345",
                    "typeString": "literal_string \"TOKEN_LOCKER_ROLE\""
                  },
                  "value": "TOKEN_LOCKER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_4bf6f2cdcc8ad6c087a7a4fbecf46150b3686b71387234cac2b3e2e6dc70e345",
                    "typeString": "literal_string \"TOKEN_LOCKER_ROLE\""
                  }
                ],
                "id": 37,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1257:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 39,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1257:30:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "817b1cd2",
            "id": 42,
            "mutability": "mutable",
            "name": "totalStaked",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 614,
            "src": "1294:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 41,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1294:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "_stakingToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 614,
            "src": "1327:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Upgradeable_$10391",
              "typeString": "contract IERC20Upgradeable"
            },
            "typeName": {
              "contractScope": null,
              "id": 43,
              "name": "IERC20Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10391,
              "src": "1327:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$10391",
                "typeString": "contract IERC20Upgradeable"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 46,
            "mutability": "mutable",
            "name": "distributionTokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 614,
            "src": "1373:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$10795_storage",
              "typeString": "struct EnumerableSetUpgradeable.AddressSet"
            },
            "typeName": {
              "contractScope": null,
              "id": 45,
              "name": "EnumerableSetUpgradeable.AddressSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10795,
              "src": "1373:35:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$10795_storage_ptr",
                "typeString": "struct EnumerableSetUpgradeable.AddressSet"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "_userTotals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 614,
            "src": "1434:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 49,
              "keyType": {
                "id": 47,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1442:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1434:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 48,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1453:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "51f6cf2f",
            "id": 55,
            "mutability": "mutable",
            "name": "unlockSchedules",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 614,
            "src": "1488:59:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UnlockSchedule_$30_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct BadgerGeyser.UnlockSchedule[])"
            },
            "typeName": {
              "id": 54,
              "keyType": {
                "id": 51,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1496:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1488:36:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UnlockSchedule_$30_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct BadgerGeyser.UnlockSchedule[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 52,
                  "name": "UnlockSchedule",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 30,
                  "src": "1507:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UnlockSchedule_$30_storage_ptr",
                    "typeString": "struct BadgerGeyser.UnlockSchedule"
                  }
                },
                "id": 53,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1507:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_UnlockSchedule_$30_storage_$dyn_storage_ptr",
                  "typeString": "struct BadgerGeyser.UnlockSchedule[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 69,
            "name": "Staked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 69,
                  "src": "1567:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1567:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 69,
                  "src": "1589:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1589:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "total",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 69,
                  "src": "1605:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1605:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 69,
                  "src": "1620:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1620:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 69,
                  "src": "1647:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 69,
                  "src": "1676:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1566:121:0"
            },
            "src": "1554:134:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 83,
            "name": "Unstaked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 83,
                  "src": "1708:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1708:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 83,
                  "src": "1730:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "total",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 83,
                  "src": "1746:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1746:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 83,
                  "src": "1761:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1761:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 83,
                  "src": "1788:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 83,
                  "src": "1817:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1817:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1707:121:0"
            },
            "src": "1693:136:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 95,
            "name": "UnlockScheduleSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 95,
                  "src": "1858:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1858:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initialLocked",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 95,
                  "src": "1873:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1873:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "durationSec",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 95,
                  "src": "1896:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1896:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 95,
                  "src": "1917:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1917:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 95,
                  "src": "1936:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1936:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1857:95:0"
            },
            "src": "1834:119:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 111,
            "name": "TokensLocked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "1986:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "2017:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2017:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "durationSec",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "2041:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2041:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "2070:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "2097:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2097:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "2122:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2122:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 111,
                  "src": "2157:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2157:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1976:197:0"
            },
            "src": "1958:216:0"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "2663:299:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 127,
                      "name": "__AccessControl_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9832,
                      "src": "2673:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2673:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "2673:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9856,
                        "src": "2717:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "initialAdmin_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "2737:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 130,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10039,
                      "src": "2706:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2706:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "2706:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "TOKEN_LOCKER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "2772:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 137,
                        "name": "initialTokenLocker_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "2791:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 135,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10039,
                      "src": "2761:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2761:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "2761:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 140,
                      "name": "_stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "2822:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$10391",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 141,
                      "name": "stakingToken_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "2838:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$10391",
                        "typeString": "contract IERC20Upgradeable"
                      }
                    },
                    "src": "2822:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$10391",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2822:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "initialDistributionToken_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "2884:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "distributionTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "2861:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$10795_storage",
                          "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10818,
                      "src": "2861:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$10795_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$10795_storage_ptr_$",
                        "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2861:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "2861:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 150,
                      "name": "globalStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2921:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 151,
                      "name": "globalStartTime_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "2939:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2921:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2921:34:0"
                }
              ]
            },
            "documentation": {
              "id": 112,
              "nodeType": "StructuredDocumentation",
              "src": "2180:247:0",
              "text": " @param stakingToken_ The token users deposit as stake.\n @param initialDistributionToken_ The token users receive as they unstake.\n @param globalStartTime_ Timestamp after which unlock schedules and staking can begin."
            },
            "functionSelector": "33e1a223",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 125,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 124,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11587,
                  "src": "2651:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2651:11:0"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "stakingToken_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 155,
                  "src": "2461:31:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$10391",
                    "typeString": "contract IERC20Upgradeable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 113,
                    "name": "IERC20Upgradeable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10391,
                    "src": "2461:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$10391",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "initialDistributionToken_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 155,
                  "src": "2502:33:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2502:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "globalStartTime_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 155,
                  "src": "2545:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2545:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "initialAdmin_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 155,
                  "src": "2579:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2579:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "initialTokenLocker_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 155,
                  "src": "2610:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2610:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2451:192:0"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2663:0:0"
            },
            "scope": 614,
            "src": "2432:530:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "3035:90:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 160,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "3053:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 161,
                          "name": "globalStartTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "3060:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3053:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4261646765724765797365723a20446973747269627574696f6e206e6f742073746172746564",
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3077:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c917717beab81668fcbca42f807e181b10259606a0083b64024ba81525d81737",
                          "typeString": "literal_string \"BadgerGeyser: Distribution not started\""
                        },
                        "value": "BadgerGeyser: Distribution not started"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c917717beab81668fcbca42f807e181b10259606a0083b64024ba81525d81737",
                          "typeString": "literal_string \"BadgerGeyser: Distribution not started\""
                        }
                      ],
                      "id": 159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3045:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3045:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "3045:73:0"
                }
              ]
            },
            "documentation": {
              "id": 156,
              "nodeType": "StructuredDocumentation",
              "src": "2968:26:0",
              "text": "===== Modifiers ====="
            },
            "id": 167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onlyAfterStart",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3023:2:0"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3035:0:0"
            },
            "scope": 614,
            "src": "2999:126:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "3162:78:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 172,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9856,
                            "src": "3188:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 173,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3208:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3208:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 171,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9902,
                          "src": "3180:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3180:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7941646d696e",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3221:11:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_039db013133dbf66b5d1e321f15c20328d8e71e9ffa5eb545dd2d96b4bf96c5f",
                          "typeString": "literal_string \"onlyAdmin\""
                        },
                        "value": "onlyAdmin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_039db013133dbf66b5d1e321f15c20328d8e71e9ffa5eb545dd2d96b4bf96c5f",
                          "typeString": "literal_string \"onlyAdmin\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3172:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3172:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "3172:61:0"
                }
              ]
            },
            "documentation": null,
            "id": 180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onlyAdmin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3150:2:0"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3162:0:0"
            },
            "scope": 614,
            "src": "3131:109:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "3283:83:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 185,
                            "name": "TOKEN_LOCKER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "3309:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 186,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3328:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3328:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 184,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9902,
                          "src": "3301:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3301:38:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c79546f6b656e4c6f636b6572",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3341:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a64c32fc53291eb87b75666770b2186391c9b16f87dd00f0b562bba8f8d1e2f",
                          "typeString": "literal_string \"onlyTokenLocker\""
                        },
                        "value": "onlyTokenLocker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a64c32fc53291eb87b75666770b2186391c9b16f87dd00f0b562bba8f8d1e2f",
                          "typeString": "literal_string \"onlyTokenLocker\""
                        }
                      ],
                      "id": 183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3293:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3293:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "3293:66:0"
                }
              ]
            },
            "documentation": null,
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onlyTokenLocker",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3271:2:0"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3283:0:0"
            },
            "scope": 614,
            "src": "3246:120:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "3553:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3570:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 198,
                  "id": 200,
                  "nodeType": "Return",
                  "src": "3563:12:0"
                }
              ]
            },
            "documentation": {
              "id": 194,
              "nodeType": "StructuredDocumentation",
              "src": "3408:84:0",
              "text": " @return False. This application does not support staking history."
            },
            "functionSelector": "7033e4a6",
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsHistory",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3521:2:0"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 202,
                  "src": "3547:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3547:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3546:6:0"
            },
            "scope": 614,
            "src": "3497:85:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "3720:37:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 208,
                    "name": "_stakingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44,
                    "src": "3737:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$10391",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "functionReturnParameters": 207,
                  "id": 209,
                  "nodeType": "Return",
                  "src": "3730:20:0"
                }
              ]
            },
            "documentation": {
              "id": 203,
              "nodeType": "StructuredDocumentation",
              "src": "3588:60:0",
              "text": " @return The token users deposit as stake."
            },
            "functionSelector": "9f9106d1",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3677:2:0"
            },
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 211,
                  "src": "3701:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Upgradeable_$10391",
                    "typeString": "contract IERC20Upgradeable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 205,
                    "name": "IERC20Upgradeable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10391,
                    "src": "3701:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$10391",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3700:19:0"
            },
            "scope": 614,
            "src": "3653:104:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "3907:259:0",
              "statements": [
                {
                  "assignments": [
                    219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 219,
                      "mutability": "mutable",
                      "name": "numTokens",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 258,
                      "src": "3917:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 218,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3917:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 223,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 220,
                        "name": "distributionTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "3937:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$10795_storage",
                          "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10878,
                      "src": "3937:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$10795_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$10795_storage_ptr_$",
                        "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3937:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3917:47:0"
                },
                {
                  "assignments": [
                    228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 228,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 258,
                      "src": "3974:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3974:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 227,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3974:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 234,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 232,
                        "name": "numTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "4014:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4000:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 229,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4004:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 230,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "4004:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4000:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3974:50:0"
                },
                {
                  "body": {
                    "id": 254,
                    "nodeType": "Block",
                    "src": "4075:61:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 245,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 228,
                              "src": "4089:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 247,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 246,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 236,
                              "src": "4096:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4089:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 250,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 236,
                                "src": "4123:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 248,
                                "name": "distributionTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "4101:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AddressSet_$10795_storage",
                                  "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                                }
                              },
                              "id": 249,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "at",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10901,
                              "src": "4101:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$10795_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$10795_storage_ptr_$",
                                "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"
                              }
                            },
                            "id": 251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4101:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4089:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 253,
                        "nodeType": "ExpressionStatement",
                        "src": "4089:36:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 239,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 236,
                      "src": "4055:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 240,
                      "name": "numTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "4059:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4055:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 255,
                  "initializationExpression": {
                    "assignments": [
                      236
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 255,
                        "src": "4040:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4040:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 238,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4052:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4040:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4070:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 242,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "4070:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 244,
                    "nodeType": "ExpressionStatement",
                    "src": "4070:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4035:101:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 256,
                    "name": "tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 228,
                    "src": "4153:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 217,
                  "id": 257,
                  "nodeType": "Return",
                  "src": "4146:13:0"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "3763:67:0",
              "text": " @return The token users receive as they unstake."
            },
            "functionSelector": "5099a9dc",
            "id": 259,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDistributionTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3865:2:0"
            },
            "returnParameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 259,
                  "src": "3889:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 214,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3889:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 215,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3889:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3888:18:0"
            },
            "scope": 614,
            "src": "3835:331:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 268,
              "nodeType": "Block",
              "src": "4238:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "distributionTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "4255:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$10795_storage",
                          "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                        }
                      },
                      "id": 265,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10878,
                      "src": "4255:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$10795_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$10795_storage_ptr_$",
                        "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4255:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 263,
                  "id": 267,
                  "nodeType": "Return",
                  "src": "4248:34:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9292ab5f",
            "id": 269,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumDistributionTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4205:2:0"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 269,
                  "src": "4229:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4229:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4228:9:0"
            },
            "scope": 614,
            "src": "4172:117:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 281,
              "nodeType": "Block",
              "src": "4507:41:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 277,
                      "name": "_userTotals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "4524:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 279,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 278,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "4536:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4524:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 276,
                  "id": 280,
                  "nodeType": "Return",
                  "src": "4517:24:0"
                }
              ]
            },
            "documentation": {
              "id": 270,
              "nodeType": "StructuredDocumentation",
              "src": "4295:139:0",
              "text": " @param addr The user to look up staking information for.\n @return The number of staking tokens deposited for addr."
            },
            "functionSelector": "4b341aed",
            "id": 282,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalStakedFor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 282,
                  "src": "4463:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4463:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4462:14:0"
            },
            "returnParameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 282,
                  "src": "4498:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4498:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4497:9:0"
            },
            "scope": 614,
            "src": "4439:109:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 295,
              "nodeType": "Block",
              "src": "4687:53:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 290,
                        "name": "unlockSchedules",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "4704:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UnlockSchedule_$30_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct BadgerGeyser.UnlockSchedule storage ref[] storage ref)"
                        }
                      },
                      "id": 292,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 291,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "4720:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4704:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_UnlockSchedule_$30_storage_$dyn_storage",
                        "typeString": "struct BadgerGeyser.UnlockSchedule storage ref[] storage ref"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4704:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 289,
                  "id": 294,
                  "nodeType": "Return",
                  "src": "4697:36:0"
                }
              ]
            },
            "documentation": {
              "id": 283,
              "nodeType": "StructuredDocumentation",
              "src": "4554:54:0",
              "text": " @return Number of unlock schedules."
            },
            "functionSelector": "256fdcd6",
            "id": 296,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlockScheduleCount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 296,
                  "src": "4642:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4642:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4641:15:0"
            },
            "returnParameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 296,
                  "src": "4678:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4678:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4677:9:0"
            },
            "scope": 614,
            "src": "4613:127:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "4838:46:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 304,
                      "name": "unlockSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4855:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UnlockSchedule_$30_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct BadgerGeyser.UnlockSchedule storage ref[] storage ref)"
                      }
                    },
                    "id": 306,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 305,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "4871:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4855:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_UnlockSchedule_$30_storage_$dyn_storage",
                      "typeString": "struct BadgerGeyser.UnlockSchedule storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 303,
                  "id": 307,
                  "nodeType": "Return",
                  "src": "4848:29:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "328b10d8",
            "id": 309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUnlockSchedulesFor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 298,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 309,
                  "src": "4777:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4777:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4776:15:0"
            },
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 309,
                  "src": "4813:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_UnlockSchedule_$30_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BadgerGeyser.UnlockSchedule[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 300,
                      "name": "UnlockSchedule",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 30,
                      "src": "4813:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UnlockSchedule_$30_storage_ptr",
                        "typeString": "struct BadgerGeyser.UnlockSchedule"
                      }
                    },
                    "id": 301,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4813:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_UnlockSchedule_$30_storage_$dyn_storage_ptr",
                      "typeString": "struct BadgerGeyser.UnlockSchedule[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4812:25:0"
            },
            "scope": 614,
            "src": "4746:138:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 328,
              "nodeType": "Block",
              "src": "5121:85:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 317,
                      "name": "_onlyAfterStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "5131:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5131:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "5131:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 321,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5168:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5168:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 323,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5180:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5180:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 325,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "5192:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 320,
                      "name": "_stakeFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "5158:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5158:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "5158:41:0"
                }
              ]
            },
            "documentation": {
              "id": 310,
              "nodeType": "StructuredDocumentation",
              "src": "4926:129:0",
              "text": " @dev Transfers amount of deposit tokens from the user.\n @param amount Number of deposit tokens to stake."
            },
            "functionSelector": "0e89439b",
            "id": 329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 312,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 329,
                  "src": "5075:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5075:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 329,
                  "src": "5091:19:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5091:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5074:37:0"
            },
            "returnParameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5121:0:0"
            },
            "scope": 614,
            "src": "5060:146:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 349,
              "nodeType": "Block",
              "src": "5578:79:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 339,
                      "name": "_onlyAfterStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "5588:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5588:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "5588:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 343,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5625:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5625:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 345,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "5637:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 346,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "5643:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 342,
                      "name": "_stakeFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "5615:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5615:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "5615:35:0"
                }
              ]
            },
            "documentation": {
              "id": 330,
              "nodeType": "StructuredDocumentation",
              "src": "5212:253:0",
              "text": " @dev Transfers amount of deposit tokens from the caller on behalf of user.\n @param user User address who gains credit for this stake operation.\n @param amount Number of deposit tokens to stake.\n @param data Not used."
            },
            "functionSelector": "0ef96356",
            "id": 350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeFor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 350,
                  "src": "5497:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5497:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 334,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 350,
                  "src": "5519:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5519:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 336,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 350,
                  "src": "5543:19:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 335,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5543:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5487:81:0"
            },
            "returnParameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5578:0:0"
            },
            "scope": 614,
            "src": "5470:187:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 367,
              "nodeType": "Block",
              "src": "5981:75:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 358,
                      "name": "_onlyAfterStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "5991:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5991:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "5991:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 362,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6030:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6030:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 364,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "6042:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 361,
                      "name": "_unstakeFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "6018:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6018:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "6018:31:0"
                }
              ]
            },
            "documentation": {
              "id": 351,
              "nodeType": "StructuredDocumentation",
              "src": "5663:250:0",
              "text": " @dev Unstakes a certain amount of previously deposited tokens. User also receives their\n alotted number of distribution tokens.\n @param amount Number of deposit tokens to unstake / withdraw.\n @param data Not used."
            },
            "functionSelector": "c8fd6ed0",
            "id": 368,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 368,
                  "src": "5935:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5935:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 368,
                  "src": "5951:19:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5951:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5934:37:0"
            },
            "returnParameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5981:0:0"
            },
            "scope": 614,
            "src": "5918:138:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 383,
              "nodeType": "Block",
              "src": "6170:68:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 374,
                      "name": "_onlyAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "6180:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6180:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "6180:12:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 380,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "6225:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 377,
                        "name": "distributionTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "6202:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$10795_storage",
                          "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                        }
                      },
                      "id": 379,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10818,
                      "src": "6202:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$10795_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$10795_storage_ptr_$",
                        "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6202:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "6202:29:0"
                }
              ]
            },
            "documentation": {
              "id": 369,
              "nodeType": "StructuredDocumentation",
              "src": "6062:44:0",
              "text": "===== Permissioned Actions: Admins ====="
            },
            "functionSelector": "8dab7191",
            "id": 384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addDistributionToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 371,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 384,
                  "src": "6146:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6146:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6145:15:0"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6170:0:0"
            },
            "scope": 614,
            "src": "6116:122:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "6974:318:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 396,
                      "name": "_onlyTokenLocker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "6984:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6984:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "6984:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 400,
                          "name": "startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 393,
                          "src": "7023:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 401,
                          "name": "globalStartTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "7036:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7023:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4261646765724765797365723a205363686564756c652063616e6e6f74207374617274206265666f726520676c6f62616c2073746172742074696d65",
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7053:62:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e3ffab044cc6a2c77b6c10fd0630861e7d283b8cab488474df6d06236b496a1",
                          "typeString": "literal_string \"BadgerGeyser: Schedule cannot start before global start time\""
                        },
                        "value": "BadgerGeyser: Schedule cannot start before global start time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e3ffab044cc6a2c77b6c10fd0630861e7d283b8cab488474df6d06236b496a1",
                          "typeString": "literal_string \"BadgerGeyser: Schedule cannot start before global start time\""
                        }
                      ],
                      "id": 399,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7015:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7015:101:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "7015:101:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 409,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "7162:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 407,
                            "name": "distributionTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "7134:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSet_$10795_storage",
                              "typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
                            }
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "contains",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10864,
                          "src": "7134:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$10795_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$10795_storage_ptr_$",
                            "typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"
                          }
                        },
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7134:34:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4261646765724765797365723a20546f6b656e206e6f7420617070726f7665642062792061646d696e",
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7170:43:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ba06a1ee649a0a392e74f5670b44347c9e54d65dedf736a756097bde49cb07a",
                          "typeString": "literal_string \"BadgerGeyser: Token not approved by admin\""
                        },
                        "value": "BadgerGeyser: Token not approved by admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ba06a1ee649a0a392e74f5670b44347c9e54d65dedf736a756097bde49cb07a",
                          "typeString": "literal_string \"BadgerGeyser: Token not approved by admin\""
                        }
                      ],
                      "id": 406,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7126:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7126:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "7126:88:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 415,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "7247:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 416,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "7254:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 417,
                        "name": "durationSec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "7262:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 418,
                        "name": "startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "7275:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 414,
                      "name": "_signalTokenLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 613,
                      "src": "7230:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7230:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "7230:55:0"
                }
              ]
            },
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "6301:525:0",
              "text": " @dev This funcion allows the contract owner to pledge more distribution tokens, along\n      with the associated \"unlock schedule\". These locked tokens immediately begin unlocking\n      linearly over the duraction of durationSec timeframe.\n @param token Token to lock.\n @param amount Number of distribution tokens to lock. These are transferred from the caller.\n @param durationSec Length of time to linear unlock the tokens.\n @param startTime Time to start distribution."
            },
            "functionSelector": "0968c3d8",
            "id": 422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "signalTokenLock",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 422,
                  "src": "6865:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6865:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 422,
                  "src": "6888:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6888:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 391,
                  "mutability": "mutable",
                  "name": "durationSec",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 422,
                  "src": "6912:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6912:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 422,
                  "src": "6941:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6941:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6855:109:0"
            },
            "returnParameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6974:0:0"
            },
            "scope": 614,
            "src": "6831:461:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 490,
              "nodeType": "Block",
              "src": "7729:514:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 433,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "7747:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7756:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7747:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4261646765724765797365723a207374616b6520616d6f756e74206973207a65726f",
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7759:36:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b85737f9b11691c4613a910a9642d4e02ec339138ba58d8602411f1658c4c35",
                          "typeString": "literal_string \"BadgerGeyser: stake amount is zero\""
                        },
                        "value": "BadgerGeyser: stake amount is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b85737f9b11691c4613a910a9642d4e02ec339138ba58d8602411f1658c4c35",
                          "typeString": "literal_string \"BadgerGeyser: stake amount is zero\""
                        }
                      ],
                      "id": 432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7739:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7739:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "7739:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 440,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 427,
                          "src": "7814:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7837:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7829:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 441,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7829:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7829:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7814:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4261646765724765797365723a2062656e6566696369617279206973207a65726f2061646472657373",
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7841:43:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f373ab92074d7bc133f4aa557a06d5acaa0110dea647b0245c9421d49e4b9d5",
                          "typeString": "literal_string \"BadgerGeyser: beneficiary is zero address\""
                        },
                        "value": "BadgerGeyser: beneficiary is zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f373ab92074d7bc133f4aa557a06d5acaa0110dea647b0245c9421d49e4b9d5",
                          "typeString": "literal_string \"BadgerGeyser: beneficiary is zero address\""
                        }
                      ],
                      "id": 439,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7806:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7806:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "7806:79:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 449,
                        "name": "_userTotals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "7926:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 451,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 450,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "7938:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7926:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 456,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "7982:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 452,
                            "name": "_userTotals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "7953:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 454,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 453,
                            "name": "beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 427,
                            "src": "7965:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7953:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10146,
                        "src": "7953:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7953:36:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7926:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "7926:63:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 460,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "8032:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 463,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "8062:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 461,
                          "name": "totalStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "8046:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10146,
                        "src": "8046:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8046:23:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8032:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "8032:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 470,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "8111:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 473,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8127:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BadgerGeyser_$614",
                              "typeString": "contract BadgerGeyser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BadgerGeyser_$614",
                              "typeString": "contract BadgerGeyser"
                            }
                          ],
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8119:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 471,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8119:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8119:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 475,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "8134:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 467,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "8080:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$10391",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10450,
                      "src": "8080:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$10391_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$10391_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8080:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "8080:61:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 479,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "8164:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 480,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "8177:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 482,
                            "name": "beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 427,
                            "src": "8200:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 481,
                          "name": "totalStakedFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "8185:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8185:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 484,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "8214:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 485,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "8219:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8219:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8233:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 478,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "8157:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8157:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 489,
                  "nodeType": "EmitStatement",
                  "src": "8152:84:0"
                }
              ]
            },
            "documentation": {
              "id": 423,
              "nodeType": "StructuredDocumentation",
              "src": "7344:269:0",
              "text": " @dev Internal implementation of staking methods.\n @param staker User address who deposits tokens to stake.\n @param beneficiary User address who gains credit for this stake operation.\n @param amount Number of deposit tokens to stake."
            },
            "id": 491,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_stakeFor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 491,
                  "src": "7646:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7646:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 427,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 491,
                  "src": "7670:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7670:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 491,
                  "src": "7699:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7699:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7636:83:0"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7729:0:0"
            },
            "scope": 614,
            "src": "7618:625:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 552,
              "nodeType": "Block",
              "src": "8535:537:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 500,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 496,
                          "src": "8571:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8580:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8571:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4261646765724765797365723a20756e7374616b6520616d6f756e74206973207a65726f",
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8583:38:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50bae301fb39430f56f7478aaa6419fb189119476855dd812a8b226e2e76b066",
                          "typeString": "literal_string \"BadgerGeyser: unstake amount is zero\""
                        },
                        "value": "BadgerGeyser: unstake amount is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50bae301fb39430f56f7478aaa6419fb189119476855dd812a8b226e2e76b066",
                          "typeString": "literal_string \"BadgerGeyser: unstake amount is zero\""
                        }
                      ],
                      "id": 499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8563:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8563:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "8563:59:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 508,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 494,
                              "src": "8655:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 507,
                            "name": "totalStakedFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "8640:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8640:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 510,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 496,
                          "src": "8664:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8640:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4261646765724765797365723a20756e7374616b6520616d6f756e742069732067726561746572207468616e20746f74616c2075736572207374616b6573",
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8672:64:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f98ea2a61e824512636092316877d61688ebe2ef44708ba25dff541f78e79502",
                          "typeString": "literal_string \"BadgerGeyser: unstake amount is greater than total user stakes\""
                        },
                        "value": "BadgerGeyser: unstake amount is greater than total user stakes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f98ea2a61e824512636092316877d61688ebe2ef44708ba25dff541f78e79502",
                          "typeString": "literal_string \"BadgerGeyser: unstake amount is greater than total user stakes\""
                        }
                      ],
                      "id": 506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8632:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8632:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "8632:105:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 515,
                        "name": "_userTotals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "8778:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 517,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 516,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "8790:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8778:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 522,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 496,
                          "src": "8820:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 518,
                            "name": "_userTotals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "8798:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 520,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 519,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 494,
                            "src": "8810:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8798:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10163,
                        "src": "8798:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8798:29:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8778:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "8778:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 526,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "8870:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 529,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 496,
                          "src": "8900:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 527,
                          "name": "totalStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "8884:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10163,
                        "src": "8884:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8884:23:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8870:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "8870:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 536,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "8969:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 537,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 496,
                        "src": "8975:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 533,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "8942:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$10391",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10425,
                      "src": "8942:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$10391_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$10391_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8942:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "8942:40:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 541,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "9007:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 542,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 496,
                        "src": "9013:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 544,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 494,
                            "src": "9036:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 543,
                          "name": "totalStakedFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "9021:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9021:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 546,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "9043:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 547,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "9048:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9048:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9062:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 540,
                      "name": "Unstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "8998:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8998:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 551,
                  "nodeType": "EmitStatement",
                  "src": "8993:72:0"
                }
              ]
            },
            "documentation": {
              "id": 492,
              "nodeType": "StructuredDocumentation",
              "src": "8249:221:0",
              "text": " @dev Unstakes a certain amount of previously deposited tokens. User also receives their\n alotted number of distribution tokens.\n @param amount Number of deposit tokens to unstake / withdraw."
            },
            "id": 553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_unstakeFor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 494,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 553,
                  "src": "8496:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 493,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8496:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 496,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 553,
                  "src": "8510:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 495,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8510:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8495:30:0"
            },
            "returnParameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8535:0:0"
            },
            "scope": 614,
            "src": "8475:597:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 612,
              "nodeType": "Block",
              "src": "9222:371:0",
              "statements": [
                {
                  "assignments": [
                    565
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 565,
                      "mutability": "mutable",
                      "name": "schedule",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 612,
                      "src": "9233:30:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UnlockSchedule_$30_memory_ptr",
                        "typeString": "struct BadgerGeyser.UnlockSchedule"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 564,
                        "name": "UnlockSchedule",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 30,
                        "src": "9233:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnlockSchedule_$30_storage_ptr",
                          "typeString": "struct BadgerGeyser.UnlockSchedule"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 566,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9233:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 567,
                        "name": "schedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 565,
                        "src": "9273:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnlockSchedule_$30_memory_ptr",
                          "typeString": "struct BadgerGeyser.UnlockSchedule memory"
                        }
                      },
                      "id": 569,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initialLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "9273:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 570,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "9298:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9273:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "9273:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 573,
                        "name": "schedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 565,
                        "src": "9314:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnlockSchedule_$30_memory_ptr",
                          "typeString": "struct BadgerGeyser.UnlockSchedule memory"
                        }
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endAtSec",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "9314:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 578,
                          "name": "durationSec",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 559,
                          "src": "9348:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 576,
                          "name": "startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 561,
                          "src": "9334:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10146,
                        "src": "9334:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9334:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9314:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "9314:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 582,
                        "name": "schedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 565,
                        "src": "9370:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnlockSchedule_$30_memory_ptr",
                          "typeString": "struct BadgerGeyser.UnlockSchedule memory"
                        }
                      },
                      "id": 584,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "durationSec",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "9370:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 585,
                      "name": "durationSec",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "9393:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9370:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "9370:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 588,
                        "name": "schedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 565,
                        "src": "9414:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnlockSchedule_$30_memory_ptr",
                          "typeString": "struct BadgerGeyser.UnlockSchedule memory"
                        }
                      },
                      "id": 590,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "9414:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 591,
                      "name": "startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 561,
                      "src": "9435:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9414:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "9414:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 598,
                        "name": "schedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 565,
                        "src": "9482:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnlockSchedule_$30_memory_ptr",
                          "typeString": "struct BadgerGeyser.UnlockSchedule memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UnlockSchedule_$30_memory_ptr",
                          "typeString": "struct BadgerGeyser.UnlockSchedule memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 594,
                          "name": "unlockSchedules",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "9454:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UnlockSchedule_$30_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BadgerGeyser.UnlockSchedule storage ref[] storage ref)"
                          }
                        },
                        "id": 596,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 595,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 555,
                          "src": "9470:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9454:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_UnlockSchedule_$30_storage_$dyn_storage",
                          "typeString": "struct BadgerGeyser.UnlockSchedule storage ref[] storage ref"
                        }
                      },
                      "id": 597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9454:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_UnlockSchedule_$30_storage_$returns$__$",
                        "typeString": "function (struct BadgerGeyser.UnlockSchedule storage ref)"
                      }
                    },
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9454:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 600,
                  "nodeType": "ExpressionStatement",
                  "src": "9454:37:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 602,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 555,
                        "src": "9520:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 603,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "9527:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 604,
                        "name": "durationSec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "9535:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 605,
                        "name": "startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "9548:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 606,
                          "name": "schedule",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 565,
                          "src": "9559:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UnlockSchedule_$30_memory_ptr",
                            "typeString": "struct BadgerGeyser.UnlockSchedule memory"
                          }
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "endAtSec",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25,
                        "src": "9559:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 608,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "9578:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9583:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 601,
                      "name": "TokensLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "9507:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9507:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 611,
                  "nodeType": "EmitStatement",
                  "src": "9502:84:0"
                }
              ]
            },
            "documentation": null,
            "id": 613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_signalTokenLock",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 555,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 613,
                  "src": "9113:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9113:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 557,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 613,
                  "src": "9136:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9136:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 559,
                  "mutability": "mutable",
                  "name": "durationSec",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 613,
                  "src": "9160:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9160:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 613,
                  "src": "9189:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9189:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9103:109:0"
            },
            "returnParameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9222:0:0"
            },
            "scope": 614,
            "src": "9078:515:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 615,
        "src": "733:8862:0"
      }
    ],
    "src": "33:9563:0"
  },
  "bytecode": "",
  "bytecodeSha1": "0d2861843d847ca74a1ba1cc2a8d6ff5a571af37",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "BadgerGeyser",
  "coverageMap": {
    "branches": {
      "0": {
        "BadgerGeyser._onlyAdmin": {
          "98": [
            3180,
            3219,
            true
          ]
        },
        "BadgerGeyser._onlyAfterStart": {
          "95": [
            3053,
            3075,
            true
          ]
        },
        "BadgerGeyser._onlyTokenLocker": {
          "94": [
            3301,
            3339,
            true
          ]
        },
        "BadgerGeyser._stakeFor": {
          "96": [
            7747,
            7757,
            true
          ],
          "97": [
            7814,
            7839,
            true
          ]
        },
        "BadgerGeyser._unstakeFor": {
          "99": [
            8571,
            8581,
            true
          ],
          "100": [
            8640,
            8670,
            true
          ]
        },
        "BadgerGeyser.signalTokenLock": {
          "92": [
            7023,
            7051,
            true
          ],
          "93": [
            7134,
            7168,
            true
          ]
        }
      },
      "30": {},
      "31": {
        "AccessControlUpgradeable._grantRole": {
          "104": [
            7458,
            7491,
            false
          ]
        },
        "AccessControlUpgradeable._revokeRole": {
          "105": [
            7649,
            7685,
            false
          ]
        },
        "AccessControlUpgradeable.grantRole": {
          "101": [
            5087,
            5132,
            true
          ]
        },
        "AccessControlUpgradeable.renounceRole": {
          "102": [
            6264,
            6287,
            true
          ]
        },
        "AccessControlUpgradeable.revokeRole": {
          "103": [
            5545,
            5590,
            true
          ]
        }
      },
      "35": {
        "SafeMathUpgradeable.add": {
          "117": [
            997,
            1003,
            true
          ]
        },
        "SafeMathUpgradeable.sub": {
          "118": [
            1870,
            1876,
            true
          ]
        }
      },
      "36": {
        "ContextUpgradeable.__Context_init_unchained": {
          "112": [
            1426,
            1439,
            true
          ],
          "113": [
            1443,
            1459,
            true
          ],
          "114": [
            1464,
            1476,
            true
          ]
        }
      },
      "39": {
        "SafeERC20Upgradeable._callOptionalReturn": {
          "115": [
            3619,
            3640,
            false
          ],
          "116": [
            3748,
            3778,
            true
          ]
        }
      },
      "41": {
        "AddressUpgradeable._functionCallWithValue": {
          "106": [
            5093,
            5111,
            true
          ],
          "107": [
            5307,
            5314,
            false
          ],
          "108": [
            5448,
            5469,
            false
          ]
        }
      },
      "42": {
        "EnumerableSetUpgradeable._add": {
          "109": [
            1706,
            1727,
            false
          ]
        },
        "EnumerableSetUpgradeable._at": {
          "110": [
            4528,
            4554,
            true
          ]
        },
        "EnumerableSetUpgradeable._remove": {
          "111": [
            2431,
            2446,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "BadgerGeyser._onlyAdmin": {
          "59": [
            3172,
            3233
          ]
        },
        "BadgerGeyser._onlyAfterStart": {
          "43": [
            3045,
            3118
          ]
        },
        "BadgerGeyser._onlyTokenLocker": {
          "35": [
            3293,
            3359
          ]
        },
        "BadgerGeyser._signalTokenLock": {
          "37": [
            9273,
            9304
          ],
          "38": [
            9314,
            9360
          ],
          "39": [
            9370,
            9404
          ],
          "40": [
            9414,
            9444
          ],
          "41": [
            9454,
            9491
          ],
          "42": [
            9502,
            9586
          ]
        },
        "BadgerGeyser._stakeFor": {
          "44": [
            7739,
            7796
          ],
          "45": [
            7806,
            7885
          ],
          "46": [
            7926,
            7989
          ],
          "47": [
            8032,
            8069
          ],
          "48": [
            8080,
            8141
          ],
          "49": [
            8152,
            8236
          ]
        },
        "BadgerGeyser._unstakeFor": {
          "60": [
            8563,
            8622
          ],
          "61": [
            8632,
            8737
          ],
          "62": [
            8778,
            8827
          ],
          "63": [
            8870,
            8907
          ],
          "64": [
            8942,
            8982
          ],
          "65": [
            8993,
            9065
          ]
        },
        "BadgerGeyser.addDistributionToken": {
          "25": [
            6180,
            6192
          ],
          "26": [
            6202,
            6231
          ]
        },
        "BadgerGeyser.getDistributionTokens": {
          "22": [
            4089,
            4125
          ],
          "23": [
            4070,
            4073
          ],
          "24": [
            4146,
            4159
          ]
        },
        "BadgerGeyser.getNumDistributionTokens": {
          "29": [
            4248,
            4282
          ]
        },
        "BadgerGeyser.getStakingToken": {
          "30": [
            3730,
            3750
          ]
        },
        "BadgerGeyser.getUnlockSchedulesFor": {
          "12": [
            4848,
            4877
          ]
        },
        "BadgerGeyser.initialize": {
          "13": [
            2673,
            2695
          ],
          "14": [
            2706,
            2751
          ],
          "15": [
            2761,
            2811
          ],
          "16": [
            2822,
            2851
          ],
          "17": [
            2861,
            2910
          ],
          "18": [
            2921,
            2955
          ]
        },
        "BadgerGeyser.signalTokenLock": {
          "0": [
            6984,
            7002
          ],
          "1": [
            7015,
            7116
          ],
          "2": [
            7126,
            7214
          ],
          "3": [
            7230,
            7285
          ]
        },
        "BadgerGeyser.stake": {
          "4": [
            5131,
            5148
          ],
          "5": [
            5158,
            5199
          ]
        },
        "BadgerGeyser.stakeFor": {
          "6": [
            5588,
            5605
          ],
          "7": [
            5615,
            5650
          ]
        },
        "BadgerGeyser.totalStakedFor": {
          "21": [
            4517,
            4541
          ]
        },
        "BadgerGeyser.unlockScheduleCount": {
          "9": [
            4697,
            4733
          ]
        },
        "BadgerGeyser.unstake": {
          "31": [
            5991,
            6008
          ],
          "32": [
            6018,
            6049
          ]
        }
      },
      "30": {
        "ContextUpgradeable._msgSender": {
          "50": [
            900,
            917
          ]
        }
      },
      "31": {
        "AccessControlUpgradeable.__AccessControl_init": {
          "53": [
            1652,
            1678
          ],
          "54": [
            1688,
            1720
          ]
        },
        "AccessControlUpgradeable._grantRole": {
          "51": [
            7507,
            7552
          ]
        },
        "AccessControlUpgradeable._revokeRole": {
          "56": [
            7701,
            7746
          ]
        },
        "AccessControlUpgradeable.getRoleAdmin": {
          "8": [
            4718,
            4747
          ]
        },
        "AccessControlUpgradeable.getRoleMember": {
          "27": [
            4417,
            4454
          ]
        },
        "AccessControlUpgradeable.getRoleMemberCount": {
          "33": [
            3697,
            3733
          ]
        },
        "AccessControlUpgradeable.grantRole": {
          "10": [
            5079,
            5184
          ],
          "11": [
            5195,
            5220
          ]
        },
        "AccessControlUpgradeable.hasRole": {
          "28": [
            3395,
            3440
          ]
        },
        "AccessControlUpgradeable.renounceRole": {
          "19": [
            6256,
            6339
          ],
          "20": [
            6350,
            6376
          ]
        },
        "AccessControlUpgradeable.revokeRole": {
          "34": [
            5537,
            5643
          ]
        }
      },
      "35": {
        "SafeMathUpgradeable.add": {
          "67": [
            989,
            1035
          ]
        },
        "SafeMathUpgradeable.sub": {
          "77": [
            1409,
            1459
          ],
          "86": [
            1862,
            1891
          ]
        }
      },
      "36": {
        "Initializable._isConstructor": {
          "52": [
            2438,
            2452
          ]
        }
      },
      "39": {
        "SafeERC20Upgradeable._callOptionalReturn": {
          "79": [
            3740,
            3825
          ]
        },
        "SafeERC20Upgradeable.safeTransfer": {
          "78": [
            855,
            941
          ]
        },
        "SafeERC20Upgradeable.safeTransferFrom": {
          "68": [
            1065,
            1161
          ]
        }
      },
      "41": {
        "AddressUpgradeable._functionCallWithValue": {
          "88": [
            5085,
            5145
          ],
          "89": [
            5330,
            5347
          ],
          "90": [
            5838,
            5858
          ]
        },
        "AddressUpgradeable.functionCall": {
          "87": [
            3711,
            3771
          ]
        },
        "AddressUpgradeable.isContract": {
          "91": [
            1120,
            1135
          ]
        }
      },
      "42": {
        "EnumerableSetUpgradeable._add": {
          "69": [
            1743,
            1766
          ],
          "70": [
            1901,
            1941
          ],
          "71": [
            1955,
            1966
          ],
          "72": [
            1997,
            2009
          ]
        },
        "EnumerableSetUpgradeable._at": {
          "75": [
            4520,
            4593
          ],
          "76": [
            4603,
            4628
          ]
        },
        "EnumerableSetUpgradeable._contains": {
          "66": [
            3876,
            3907
          ]
        },
        "EnumerableSetUpgradeable._length": {
          "74": [
            4070,
            4095
          ]
        },
        "EnumerableSetUpgradeable._remove": {
          "80": [
            3256,
            3294
          ],
          "81": [
            3360,
            3403
          ],
          "82": [
            3509,
            3526
          ],
          "83": [
            3594,
            3620
          ],
          "84": [
            3635,
            3646
          ],
          "85": [
            3677,
            3689
          ]
        },
        "EnumerableSetUpgradeable.add": {
          "55": [
            4961,
            5009
          ]
        },
        "EnumerableSetUpgradeable.at": {
          "58": [
            6189,
            6236
          ]
        },
        "EnumerableSetUpgradeable.contains": {
          "36": [
            5508,
            5561
          ]
        },
        "EnumerableSetUpgradeable.length": {
          "57": [
            5731,
            5757
          ]
        },
        "EnumerableSetUpgradeable.remove": {
          "73": [
            5273,
            5324
          ]
        }
      }
    }
  },
  "dependencies": [
    "AccessControlUpgradeable",
    "AddressUpgradeable",
    "ContextUpgradeable",
    "EnumerableSetUpgradeable",
    "Initializable",
    "SafeERC20Upgradeable",
    "SafeMathUpgradeable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061018e5760003560e01c80637033e4a6116100de5780639d81ff1511610097578063c8fd6ed011610071578063c8fd6ed014610339578063ca15c8731461034c578063cd616ea31461035f578063d547741f146103675761018e565b80639d81ff15146103215780639f9106d114610329578063a217fddf146103315761018e565b80637033e4a6146102b6578063817b1cd2146102cb5780638dab7191146102d35780639010d07c146102e657806391d14854146103065780639292ab5f146103195761018e565b8063328b10d81161014b5780634b341aed116101255780634b341aed146102635780634c255c97146102765780635099a9dc1461027e57806351f6cf2f146102935761018e565b8063328b10d81461021d57806333e1a2231461023d57806336568abe146102505761018e565b80630968c3d8146101935780630e89439b146101a85780630ef96356146101bb578063248a9ca3146101ce578063256fdcd6146101f75780632f2ff15d1461020a575b600080fd5b6101a66101a13660046112e7565b61037a565b005b6101a66101b6366004611410565b6103e6565b6101a66101c936600461128d565b6103fe565b6101e16101dc366004611341565b610411565b6040516101ee9190611583565b60405180910390f35b6101e1610205366004611246565b610426565b6101a6610218366004611359565b610441565b61023061022b366004611246565b610489565b6040516101ee9190611514565b6101a661024b3660046113a9565b610526565b6101a661025e366004611359565b610617565b6101e1610271366004611246565b610659565b6101e1610674565b610286610679565b6040516101ee91906114c7565b6102a66102a1366004611262565b610718565b6040516101ee9493929190611a76565b6102be61075b565b6040516101ee9190611578565b6101e1610760565b6101a66102e1366004611246565b610766565b6102f96102f4366004611388565b610779565b6040516101ee9190611476565b6102be610314366004611359565b61079a565b6101e16107b2565b6101e16107c3565b6102f96107c9565b6101e16107d8565b6101a6610347366004611410565b6107dd565b6101e161035a366004611341565b6107ef565b6101e1610806565b6101a6610375366004611359565b61082a565b610382610864565b6065548110156103ad5760405162461bcd60e51b81526004016103a49061169c565b60405180910390fd5b6103b86068856108ac565b6103d45760405162461bcd60e51b81526004016103a49061189d565b6103e0848484846108c1565b50505050565b6103ee61097a565b6103f933338561099c565b505050565b61040661097a565b6103e033858561099c565b60009081526033602052604090206002015490565b6001600160a01b03166000908152606b602052604090205490565b60008281526033602052604090206002015461045f90610314610a98565b61047b5760405162461bcd60e51b81526004016103a49061164d565b6104858282610a9c565b5050565b6001600160a01b0381166000908152606b60209081526040808320805482518185028101850190935280835260609492939192909184015b8282101561051b5783829060005260206000209060040201604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050815260200190600101906104c1565b505050509050919050565b600054610100900460ff168061053f575061053f610b05565b8061054d575060005460ff16155b6105695760405162461bcd60e51b81526004016103a490611806565b600054610100900460ff16158015610594576000805460ff1961ff0019909116610100171660011790555b61059c610b0b565b6105a760008461047b565b6105d17f4bf6f2cdcc8ad6c087a7a4fbecf46150b3686b71387234cac2b3e2e6dc70e3458361047b565b606780546001600160a01b0319166001600160a01b0388161790556105f7606886610b9e565b506065849055801561060f576000805461ff00191690555b505050505050565b61061f610a98565b6001600160a01b0316816001600160a01b03161461064f5760405162461bcd60e51b81526004016103a490611a0a565b6104858282610bb3565b6001600160a01b03166000908152606a602052604090205490565b606481565b606060006106876068610c1c565b905060608167ffffffffffffffff811180156106a257600080fd5b506040519080825280602002602001820160405280156106cc578160200160208202803683370190505b50905060005b82811015610711576106e5606882610c27565b8282815181106106f157fe5b6001600160a01b03909216602092830291909101909101526001016106d2565b5091505090565b606b602052816000526040600020818154811061073157fe5b60009182526020909120600490910201805460018201546002830154600390930154919450925084565b600090565b60665481565b61076e610c33565b610485606882610b9e565b60008281526033602052604081206107919083610c27565b90505b92915050565b600082815260336020526040812061079190836108ac565b60006107be6068610c1c565b905090565b60655481565b6067546001600160a01b031690565b600081565b6107e561097a565b6103f93384610c5a565b600081815260336020526040812061079490610c1c565b7f4bf6f2cdcc8ad6c087a7a4fbecf46150b3686b71387234cac2b3e2e6dc70e34581565b60008281526033602052604090206002015461084890610314610a98565b61064f5760405162461bcd60e51b81526004016103a490611774565b61088e7f4bf6f2cdcc8ad6c087a7a4fbecf46150b3686b71387234cac2b3e2e6dc70e3453361079a565b6108aa5760405162461bcd60e51b81526004016103a490611624565b565b6000610791836001600160a01b038416610d56565b6108c96111d7565b8381526108d68284610d6e565b60208083019182526040808401868152606085018681526001600160a01b038a166000818152606b8652848120805460018181018355918352969091208851600490970201958655955195850186905591516002850155516003909301929092555142927f739472339d528d689eb4b6825d2d76852fd8870676f0b8a4bbb682d037f0fd6e9161096b91899189918991611a91565b60405180910390a35050505050565b6065544210156108aa5760405162461bcd60e51b81526004016103a4906118e6565b600081116109bc5760405162461bcd60e51b81526004016103a4906117c4565b6001600160a01b0382166109e25760405162461bcd60e51b81526004016103a490611854565b6001600160a01b0382166000908152606a6020526040902054610a059082610d6e565b6001600160a01b0383166000908152606a6020526040902055606654610a2b9082610d6e565b606655606754610a46906001600160a01b0316843084610d93565b4342836001600160a01b03167f070462f09e1fcdd39ee7dbe9165c6a369557b03057a6d820c84a600208b9b26d84610a7d87610659565b604051610a8b929190611a59565b60405180910390a4505050565b3390565b6000828152603360205260409020610ab49082610b9e565b1561048557610ac1610a98565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b303b1590565b600054610100900460ff1680610b245750610b24610b05565b80610b32575060005460ff16155b610b4e5760405162461bcd60e51b81526004016103a490611806565b600054610100900460ff16158015610b79576000805460ff1961ff0019909116610100171660011790555b610b81610deb565b610b89610deb565b8015610b9b576000805461ff00191690555b50565b6000610791836001600160a01b038416610e6c565b6000828152603360205260409020610bcb9082610eb6565b1561048557610bd8610a98565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600061079482610ecb565b60006107918383610ecf565b610c3e60003361079a565b6108aa5760405162461bcd60e51b81526004016103a4906115bf565b60008111610c7a5760405162461bcd60e51b81526004016103a490611730565b80610c8483610659565b1015610ca25760405162461bcd60e51b81526004016103a4906119ad565b6001600160a01b0382166000908152606a6020526040902054610cc59082610f14565b6001600160a01b0383166000908152606a6020526040902055606654610ceb9082610f14565b606655606754610d05906001600160a01b03168383610f56565b4342836001600160a01b03167fa4cc38f55b7506135366a0bc5006873ba1b4afe26f819b633e799754f80f223d84610d3c87610659565b604051610d4a929190611a59565b60405180910390a45050565b60009081526001919091016020526040902054151590565b6000828201838110156107915760405162461bcd60e51b81526004016103a4906116f9565b6103e0846323b872dd60e01b858585604051602401610db49392919061148a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f75565b600054610100900460ff1680610e045750610e04610b05565b80610e12575060005460ff16155b610e2e5760405162461bcd60e51b81526004016103a490611806565b600054610100900460ff16158015610b89576000805460ff1961ff0019909116610100171660011790558015610b9b576000805461ff001916905550565b6000610e788383610d56565b610eae57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610794565b506000610794565b6000610791836001600160a01b038416611004565b5490565b81546000908210610ef25760405162461bcd60e51b81526004016103a4906115e2565b826000018281548110610f0157fe5b9060005260206000200154905092915050565b600061079183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506110ca565b6103f98363a9059cbb60e01b8484604051602401610db49291906114ae565b6060610fca826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110f69092919063ffffffff16565b8051909150156103f95780806020019051810190610fe89190611321565b6103f95760405162461bcd60e51b81526004016103a490611963565b600081815260018301602052604081205480156110c0578354600019808301919081019060009087908390811061103757fe5b906000526020600020015490508087600001848154811061105457fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061108457fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610794565b6000915050610794565b600081848411156110ee5760405162461bcd60e51b81526004016103a4919061158c565b505050900390565b6060611105848460008561110d565b949350505050565b6060611118856111d1565b6111345760405162461bcd60e51b81526004016103a49061192c565b60006060866001600160a01b03168587604051611151919061145a565b60006040518083038185875af1925050503d806000811461118e576040519150601f19603f3d011682016040523d82523d6000602084013e611193565b606091505b509150915081156111a75791506111059050565b8051156111b75780518082602001fd5b8360405162461bcd60e51b81526004016103a4919061158c565b3b151590565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b60008083601f840112611210578182fd5b50813567ffffffffffffffff811115611227578182fd5b60208301915083602082850101111561123f57600080fd5b9250929050565b600060208284031215611257578081fd5b813561079181611ae7565b60008060408385031215611274578081fd5b823561127f81611ae7565b946020939093013593505050565b600080600080606085870312156112a2578182fd5b84356112ad81611ae7565b935060208501359250604085013567ffffffffffffffff8111156112cf578283fd5b6112db878288016111ff565b95989497509550505050565b600080600080608085870312156112fc578384fd5b843561130781611ae7565b966020860135965060408601359560600135945092505050565b600060208284031215611332578081fd5b81518015158114610791578182fd5b600060208284031215611352578081fd5b5035919050565b6000806040838503121561136b578182fd5b82359150602083013561137d81611ae7565b809150509250929050565b6000806040838503121561139a578182fd5b50508035926020909101359150565b600080600080600060a086880312156113c0578081fd5b85356113cb81611ae7565b945060208601356113db81611ae7565b93506040860135925060608601356113f281611ae7565b9150608086013561140281611ae7565b809150509295509295909350565b600080600060408486031215611424578283fd5b83359250602084013567ffffffffffffffff811115611441578283fd5b61144d868287016111ff565b9497909650939450505050565b6000825161146c818460208701611abb565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156115085783516001600160a01b0316835292840192918401916001016114e3565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561156b57815180518552868101518786015285810151868601526060908101519085015260809093019290850190600101611531565b5091979650505050505050565b901515815260200190565b90815260200190565b60006020825282518060208401526115ab816040850160208701611abb565b601f01601f19169190910160400192915050565b60208082526009908201526837b7363ca0b236b4b760b91b604082015260600190565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252600f908201526e37b7363caa37b5b2b72637b1b5b2b960891b604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b6020808252603c908201527f4261646765724765797365723a205363686564756c652063616e6e6f7420737460408201527f617274206265666f726520676c6f62616c2073746172742074696d6500000000606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526024908201527f4261646765724765797365723a20756e7374616b6520616d6f756e74206973206040820152637a65726f60e01b606082015260800190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b60208082526022908201527f4261646765724765797365723a207374616b6520616d6f756e74206973207a65604082015261726f60f01b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526029908201527f4261646765724765797365723a2062656e6566696369617279206973207a65726040820152686f206164647265737360b81b606082015260800190565b60208082526029908201527f4261646765724765797365723a20546f6b656e206e6f7420617070726f76656460408201526810313c9030b236b4b760b91b606082015260800190565b60208082526026908201527f4261646765724765797365723a20446973747269627574696f6e206e6f7420736040820152651d185c9d195960d21b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252603e908201527f4261646765724765797365723a20756e7374616b6520616d6f756e742069732060408201527f67726561746572207468616e20746f74616c2075736572207374616b65730000606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b918252602082015260606040820181905260009082015260800190565b93845260208401929092526040830152606082015260800190565b93845260208401929092526040830152606082015260a06080820181905260009082015260c00190565b60005b83811015611ad6578181015183820152602001611abe565b838111156103e05750506000910152565b6001600160a01b0381168114610b9b57600080fdfea2646970667358221220ad817f648c75fbb5372c1ed9a49713e9460c4abf6242811f08556628ee8bf92d64736f6c634300060c0033",
  "deployedSourceMap": "733:8862:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6831:461;;;;;;:::i;:::-;;:::i;:::-;;5060:146;;;;;;:::i;:::-;;:::i;5470:187::-;;;;;;:::i;:::-;;:::i;4642:112:31:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4613:127:0;;;;;;:::i;:::-;;:::i;5004:223:31:-;;;;;;:::i;:::-;;:::i;4746:138:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2432:530::-;;;;;;:::i;:::-;;:::i;6178:205:31:-;;;;;;:::i;:::-;;:::i;4439:109:0:-;;;;;;:::i;:::-;;:::i;1163:44::-;;;:::i;3835:331::-;;;:::i;:::-;;;;;;;:::i;1488:59::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;3497:85::-;;;:::i;:::-;;;;;;;:::i;1294:26::-;;;:::i;6116:122::-;;;;;;:::i;:::-;;:::i;4325:136:31:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3310:137::-;;;;;;:::i;:::-;;:::i;4172:117:0:-;;;:::i;1126:30::-;;;:::i;3653:104::-;;;:::i;2087:49:31:-;;;:::i;5918:138:0:-;;;;;;:::i;:::-;;:::i;3615:125:31:-;;;;;;:::i;:::-;;:::i;1213:74:0:-;;;:::i;5461:226:31:-;;;;;;:::i;:::-;;:::i;6831:461:0:-;6984:18;:16;:18::i;:::-;7036:15;;7023:9;:28;;7015:101;;;;-1:-1:-1;;;7015:101:0;;;;;;;:::i;:::-;;;;;;;;;7134:34;:18;7162:5;7134:27;:34::i;:::-;7126:88;;;;-1:-1:-1;;;7126:88:0;;;;;;;:::i;:::-;7230:55;7247:5;7254:6;7262:11;7275:9;7230:16;:55::i;:::-;6831:461;;;;:::o;5060:146::-;5131:17;:15;:17::i;:::-;5158:41;5168:10;5180;5192:6;5158:9;:41::i;:::-;5060:146;;;:::o;5470:187::-;5588:17;:15;:17::i;:::-;5615:35;5625:10;5637:4;5643:6;5615:9;:35::i;4642:112:31:-;4699:7;4725:12;;;:6;:12;;;;;:22;;;;4642:112::o;4613:127:0:-;-1:-1:-1;;;;;4704:22:0;4678:7;4704:22;;;:15;:22;;;;;:29;;4613:127::o;5004:223:31:-;5095:12;;;;:6;:12;;;;;:22;;;5087:45;;5119:12;:10;:12::i;5087:45::-;5079:105;;;;-1:-1:-1;;;5079:105:31;;;;;;;:::i;:::-;5195:25;5206:4;5212:7;5195:10;:25::i;:::-;5004:223;;:::o;4746:138:0:-;-1:-1:-1;;;;;4855:22:0;;;;;;:15;:22;;;;;;;;4848:29;;;;;;;;;;;;;;;;;4813:23;;4848:29;;4855:22;;4848:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4746:138;;;:::o;2432:530::-;1426:13:36;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:36;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:36;;;;;;;:::i;:::-;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:36;;;;;1652:19;1634:4;1652:19;;;1584:98;2673:22:0::1;:20;:22::i;:::-;2706:45;2132:4:31;2737:13:0::0;2706:10:::1;:45::i;:::-;2761:50;1257:30;2791:19;2761:10;:50::i;:::-;2822:13;:29:::0;;-1:-1:-1;;;;;;2822:29:0::1;-1:-1:-1::0;;;;;2822:29:0;::::1;;::::0;;2861:49:::1;:18;2884:25:::0;2861:22:::1;:49::i;:::-;-1:-1:-1::0;2921:15:0::1;:34:::0;;;1704:66:36;;;;1754:5;1738:21;;-1:-1:-1;;1738:21:36;;;1704:66;2432:530:0;;;;;;:::o;6178:205:31:-;6275:12;:10;:12::i;:::-;-1:-1:-1;;;;;6264:23:31;:7;-1:-1:-1;;;;;6264:23:31;;6256:83;;;;-1:-1:-1;;;6256:83:31;;;;;;;:::i;:::-;6350:26;6362:4;6368:7;6350:11;:26::i;4439:109:0:-;-1:-1:-1;;;;;4524:17:0;4498:7;4524:17;;;:11;:17;;;;;;;4439:109::o;1163:44::-;1204:3;1163:44;:::o;3835:331::-;3889:16;3917:17;3937:27;:18;:25;:27::i;:::-;3917:47;;3974:23;4014:9;4000:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4000:24:0;;3974:50;;4040:9;4035:101;4059:9;4055:1;:13;4035:101;;;4101:24;:18;4123:1;4101:21;:24::i;:::-;4089:6;4096:1;4089:9;;;;;;;;-1:-1:-1;;;;;4089:36:0;;;:9;;;;;;;;;;;:36;4070:3;;4035:101;;;-1:-1:-1;4153:6:0;-1:-1:-1;;3835:331:0;:::o;1488:59::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1488:59:0;-1:-1:-1;1488:59:0;:::o;3497:85::-;3547:4;3497:85;:::o;1294:26::-;;;;:::o;6116:122::-;6180:12;:10;:12::i;:::-;6202:29;:18;6225:5;6202:22;:29::i;4325:136:31:-;4398:7;4424:12;;;:6;:12;;;;;:30;;4448:5;4424:23;:30::i;:::-;4417:37;;4325:136;;;;;:::o;3310:137::-;3379:4;3402:12;;;:6;:12;;;;;:38;;3432:7;3402:29;:38::i;4172:117:0:-;4229:7;4255:27;:18;:25;:27::i;:::-;4248:34;;4172:117;:::o;1126:30::-;;;;:::o;3653:104::-;3737:13;;-1:-1:-1;;;;;3737:13:0;3653:104;:::o;2087:49:31:-;2132:4;2087:49;:::o;5918:138:0:-;5991:17;:15;:17::i;:::-;6018:31;6030:10;6042:6;6018:11;:31::i;3615:125:31:-;3678:7;3704:12;;;:6;:12;;;;;:29;;:27;:29::i;1213:74:0:-;1257:30;1213:74;:::o;5461:226:31:-;5553:12;;;;:6;:12;;;;;:22;;;5545:45;;5577:12;:10;:12::i;5545:45::-;5537:106;;;;-1:-1:-1;;;5537:106:31;;;;;;;:::i;3246:120:0:-;3301:38;1257:30;3328:10;3301:7;:38::i;:::-;3293:66;;;;-1:-1:-1;;;3293:66:0;;;;;;;:::i;:::-;3246:120::o;5412:156:42:-;5492:4;5515:46;5525:3;-1:-1:-1;;;;;5545:14:42;;5515:9;:46::i;9078:515:0:-;9233:30;;:::i;:::-;9273:31;;;9334:26;:9;9348:11;9334:13;:26::i;:::-;9314:17;;;;:46;;;9370:20;;;;:34;;;9414:18;;;:30;;;-1:-1:-1;;;;;9454:22:0;;-1:-1:-1;9454:22:0;;;:15;:22;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9507:79;9578:3;;9507:79;;;;9527:6;;9393:11;;9435:9;;9507:79;:::i;:::-;;;;;;;;9078:515;;;;;:::o;2999:126::-;3060:15;;3053:3;:22;;3045:73;;;;-1:-1:-1;;;3045:73:0;;;;;;;:::i;7618:625::-;7756:1;7747:6;:10;7739:57;;;;-1:-1:-1;;;7739:57:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7814:25:0;;7806:79;;;;-1:-1:-1;;;7806:79:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7953:24:0;;;;;;:11;:24;;;;;;:36;;7982:6;7953:28;:36::i;:::-;-1:-1:-1;;;;;7926:24:0;;;;;;:11;:24;;;;;:63;8046:11;;:23;;8062:6;8046:15;:23::i;:::-;8032:11;:37;8080:13;;:61;;-1:-1:-1;;;;;8080:13:0;8111:6;8127:4;8134:6;8080:30;:61::i;:::-;8219:12;8214:3;8164:11;-1:-1:-1;;;;;8157:79:0;;8177:6;8185:27;8200:11;8185:14;:27::i;:::-;8157:79;;;;;;;:::i;:::-;;;;;;;;7618:625;;;:::o;820:104:30:-;907:10;820:104;:::o;7385:184:31:-;7458:12;;;;:6;:12;;;;;:33;;7483:7;7458:24;:33::i;:::-;7454:109;;;7539:12;:10;:12::i;:::-;-1:-1:-1;;;;;7512:40:31;7530:7;-1:-1:-1;;;;;7512:40:31;7524:4;7512:40;;;;;;;;;;7385:184;;:::o;1866:593:36:-;2302:4;2410:17;2445:7;1866:593;:::o;1589:138:31:-;1426:13:36;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:36;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:36;;;;;;;:::i;:::-;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:36;;;;;1652:19;1634:4;1652:19;;;1584:98;1652:26:31::1;:24;:26::i;:::-;1688:32;:30;:32::i;:::-;1708:14:36::0;1704:66;;;1754:5;1738:21;;-1:-1:-1;;1738:21:36;;;1704:66;1589:138:31;:::o;4875:141:42:-;4945:4;4968:41;4973:3;-1:-1:-1;;;;;4993:14:42;;4968:4;:41::i;7575:188:31:-;7649:12;;;;:6;:12;;;;;:36;;7677:7;7649:27;:36::i;:::-;7645:112;;;7733:12;:10;:12::i;:::-;-1:-1:-1;;;;;7706:40:31;7724:7;-1:-1:-1;;;;;7706:40:31;7718:4;7706:40;;;;;;;;;;7575:188;;:::o;5649:115:42:-;5712:7;5738:19;5746:3;5738:7;:19::i;6096:147::-;6170:7;6212:22;6216:3;6228:5;6212:3;:22::i;3131:109:0:-;3180:39;2132:4:31;3208:10:0;3180:7;:39::i;:::-;3172:61;;;;-1:-1:-1;;;3172:61:0;;;;;;;:::i;8475:597::-;8580:1;8571:6;:10;8563:59;;;;-1:-1:-1;;;8563:59:0;;;;;;;:::i;:::-;8664:6;8640:20;8655:4;8640:14;:20::i;:::-;:30;;8632:105;;;;-1:-1:-1;;;8632:105:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;8798:17:0;;;;;;:11;:17;;;;;;:29;;8820:6;8798:21;:29::i;:::-;-1:-1:-1;;;;;8778:17:0;;;;;;:11;:17;;;;;:49;8884:11;;:23;;8900:6;8884:15;:23::i;:::-;8870:11;:37;8942:13;;:40;;-1:-1:-1;;;;;8942:13:0;8969:4;8975:6;8942:26;:40::i;:::-;9048:12;9043:3;9007:4;-1:-1:-1;;;;;8998:67:0;;9013:6;9021:20;9036:4;9021:14;:20::i;:::-;8998:67;;;;;;;:::i;:::-;;;;;;;;8475:597;;:::o;3787:127:42:-;3860:4;3883:19;;;:12;;;;;:19;;;;;;:24;;;3787:127::o;885:176:35:-;943:7;974:5;;;997:6;;;;989:46;;;;-1:-1:-1;;;989:46:35;;;;;;;:::i;954:214:39:-;1065:96;1085:5;1115:27;;;1144:4;1150:2;1154:5;1092:68;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1092:68:39;;;;;;;;;;;;;;-1:-1:-1;;;;;1092:68:39;-1:-1:-1;;;;;;1092:68:39;;;;;;;;;;1065:19;:96::i;751:64:30:-;1426:13:36;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:36;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:36;;;;;;;:::i;:::-;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:36;;;;;1652:19;1634:4;1652:19;;;1708:14;1704:66;;;1754:5;1738:21;;-1:-1:-1;;1738:21:36;;;751:64:30;:::o;1622:404:42:-;1685:4;1706:21;1716:3;1721:5;1706:9;:21::i;:::-;1701:319;;-1:-1:-1;1743:23:42;;;;;;;;:11;:23;;;;;;;;;;;;;1923:18;;1901:19;;;:12;;;:19;;;;;;:40;;;;1955:11;;1701:319;-1:-1:-1;2004:5:42;1997:12;;5184:147;5257:4;5280:44;5288:3;-1:-1:-1;;;;;5308:14:42;;5280:7;:44::i;3995:107::-;4077:18;;3995:107::o;4434:201::-;4528:18;;4501:7;;4528:26;-1:-1:-1;4520:73:42;;;;-1:-1:-1;;;4520:73:42;;;;;;;:::i;:::-;4610:3;:11;;4622:5;4610:18;;;;;;;;;;;;;;;;4603:25;;4434:201;;;;:::o;1332:134:35:-;1390:7;1416:43;1420:1;1423;1416:43;;;;;;;;;;;;;;;;;:3;:43::i;762:186:39:-;855:86;875:5;905:23;;;930:2;934:5;882:58;;;;;;;;;:::i;3080:762::-;3510:23;3536:69;3564:4;3536:69;;;;;;;;;;;;;;;;;3544:5;-1:-1:-1;;;;;3536:27:39;;;:69;;;;;:::i;:::-;3619:17;;3510:95;;-1:-1:-1;3619:21:39;3615:221;;3759:10;3748:30;;;;;;;;;;;;:::i;:::-;3740:85;;;;-1:-1:-1;;;3740:85:39;;;;;;;:::i;2194:1512:42:-;2260:4;2397:19;;;:12;;;:19;;;;;;2431:15;;2427:1273;;2860:18;;-1:-1:-1;;2812:14:42;;;;2860:22;;;;2788:21;;2860:3;;:22;;3142;;;;;;;;;;;;;;3122:42;;3285:9;3256:3;:11;;3268:13;3256:26;;;;;;;;;;;;;;;;;;;:38;;;;3360:23;;;3402:1;3360:12;;;:23;;;;;;3386:17;;;3360:43;;3509:17;;3360:3;;3509:17;;;;;;;;;;;;;;;;;;;;;;3601:3;:12;;:19;3614:5;3601:19;;;;;;;;;;;3594:26;;;3642:4;3635:11;;;;;;;;2427:1273;3684:5;3677:12;;;;;1757:187:35;1843:7;1878:12;1870:6;;;;1862:29;;;;-1:-1:-1;;;1862:29:35;;;;;;;;:::i;:::-;-1:-1:-1;;;1913:5:35;;;1757:187::o;3584:194:41:-;3687:12;3718:53;3741:6;3749:4;3755:1;3758:12;3718:22;:53::i;:::-;3711:60;3584:194;-1:-1:-1;;;;3584:194:41:o;4931:958::-;5061:12;5093:18;5104:6;5093:10;:18::i;:::-;5085:60;;;;-1:-1:-1;;;5085:60:41;;;;;;;:::i;:::-;5216:12;5230:23;5257:6;-1:-1:-1;;;;;5257:11:41;5277:8;5288:4;5257:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5215:78;;;;5307:7;5303:580;;;5337:10;-1:-1:-1;5330:17:41;;-1:-1:-1;5330:17:41;5303:580;5448:17;;:21;5444:429;;5706:10;5700:17;5766:15;5753:10;5749:2;5745:19;5738:44;5655:145;5845:12;5838:20;;-1:-1:-1;;;5838:20:41;;;;;;;;:::i;729:413::-;1089:20;1127:8;;;729:413::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;428:336::-;;;542:3;535:4;527:6;523:17;519:27;509:2;;-1:-1;;550:12;509:2;-1:-1;580:20;;620:18;609:30;;606:2;;;-1:-1;;642:12;606:2;686:4;678:6;674:17;662:29;;737:3;686:4;717:17;678:6;703:32;;700:41;697:2;;;754:1;;744:12;697:2;502:262;;;;;:::o;1100:241::-;;1204:2;1192:9;1183:7;1179:23;1175:32;1172:2;;;-1:-1;;1210:12;1172:2;85:6;72:20;97:33;124:5;97:33;:::i;1348:366::-;;;1469:2;1457:9;1448:7;1444:23;1440:32;1437:2;;;-1:-1;;1475:12;1437:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1527:63;1627:2;1666:22;;;;1030:20;;-1:-1;;;1431:283::o;1721:615::-;;;;;1878:2;1866:9;1857:7;1853:23;1849:32;1846:2;;;-1:-1;;1884:12;1846:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1936:63;-1:-1;2036:2;2075:22;;1030:20;;-1:-1;2172:2;2157:18;;2144:32;2196:18;2185:30;;2182:2;;;-1:-1;;2218:12;2182:2;2256:64;2312:7;2303:6;2292:9;2288:22;2256:64;:::i;:::-;1840:496;;;;-1:-1;2238:82;-1:-1;;;;1840:496::o;2343:617::-;;;;;2498:3;2486:9;2477:7;2473:23;2469:33;2466:2;;;-1:-1;;2505:12;2466:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;2557:63;2657:2;2696:22;;1030:20;;-1:-1;2765:2;2804:22;;1030:20;;2873:2;2912:22;1030:20;;-1:-1;2460:500;-1:-1;;;2460:500::o;2967:257::-;;3079:2;3067:9;3058:7;3054:23;3050:32;3047:2;;;-1:-1;;3085:12;3047:2;223:6;217:13;33214:5;31866:13;31859:21;33192:5;33189:32;33179:2;;-1:-1;;33225:12;3231:241;;3335:2;3323:9;3314:7;3310:23;3306:32;3303:2;;;-1:-1;;3341:12;3303:2;-1:-1;344:20;;3297:175;-1:-1;3297:175::o;3479:366::-;;;3600:2;3588:9;3579:7;3575:23;3571:32;3568:2;;;-1:-1;;3606:12;3568:2;357:6;344:20;3658:63;;3758:2;3801:9;3797:22;72:20;97:33;124:5;97:33;:::i;:::-;3766:63;;;;3562:283;;;;;:::o;3852:366::-;;;3973:2;3961:9;3952:7;3948:23;3944:32;3941:2;;;-1:-1;;3979:12;3941:2;-1:-1;;344:20;;;4131:2;4170:22;;;1030:20;;-1:-1;3935:283::o;4225:797::-;;;;;;4424:3;4412:9;4403:7;4399:23;4395:33;4392:2;;;-1:-1;;4431:12;4392:2;879:6;866:20;891:60;945:5;891:60;:::i;:::-;4483:90;-1:-1;4610:2;4649:22;;72:20;97:33;72:20;97:33;:::i;:::-;4618:63;-1:-1;4718:2;4757:22;;1030:20;;-1:-1;4826:2;4865:22;;72:20;97:33;72:20;97:33;:::i;:::-;4834:63;-1:-1;4934:3;4974:22;;72:20;97:33;72:20;97:33;:::i;:::-;4943:63;;;;4386:636;;;;;;;;:::o;5029:490::-;;;;5169:2;5157:9;5148:7;5144:23;5140:32;5137:2;;;-1:-1;;5175:12;5137:2;1043:6;1030:20;5227:63;;5355:2;5344:9;5340:18;5327:32;5379:18;5371:6;5368:30;5365:2;;;-1:-1;;5401:12;5365:2;5439:64;5495:7;5486:6;5475:9;5471:22;5439:64;:::i;:::-;5131:388;;5421:82;;-1:-1;5421:82;;-1:-1;;;;5131:388::o;16910:271::-;;8383:5;30070:12;8494:52;8539:6;8534:3;8527:4;8520:5;8516:16;8494:52;:::i;:::-;8558:16;;;;;17044:137;-1:-1;;17044:137::o;17188:222::-;-1:-1;;;;;32158:54;;;;6071:37;;17315:2;17300:18;;17286:124::o;17417:444::-;-1:-1;;;;;32158:54;;;6071:37;;32158:54;;;;17764:2;17749:18;;6071:37;17847:2;17832:18;;8174:37;;;;17600:2;17585:18;;17571:290::o;17868:333::-;-1:-1;;;;;32158:54;;;;6071:37;;18187:2;18172:18;;8174:37;18023:2;18008:18;;17994:207::o;18208:370::-;18385:2;18399:47;;;30070:12;;18370:18;;;30921:19;;;18208:370;;18385:2;29736:14;;;;30961;;;;18208:370;6679:260;6704:6;6701:1;6698:13;6679:260;;;6765:13;;-1:-1;;;;;32158:54;6071:37;;30631:14;;;;5680;;;;620:18;6719:9;6679:260;;;-1:-1;18452:116;;18356:222;-1:-1;;;;;;18356:222::o;18585:490::-;18822:2;18836:47;;;30070:12;;18807:18;;;30921:19;;;18585:490;;18822:2;30961:14;;;;;;29736;;;18585:490;7612:350;7637:6;7634:1;7631:13;7612:350;;;7698:13;;16082:23;;8174:37;;16246:16;;;16240:23;16317:14;;;8174:37;16407:16;;;16401:23;16478:14;;;8174:37;16577:4;16566:16;;;16560:23;16637:14;;;8174:37;5991:4;5982:14;;;;30631;;;;7659:1;7652:9;7612:350;;;-1:-1;18889:176;;18793:282;-1:-1;;;;;;;18793:282::o;19082:210::-;31866:13;;31859:21;8057:34;;19203:2;19188:18;;19174:118::o;19299:222::-;8174:37;;;19426:2;19411:18;;19397:124::o;19811:310::-;;19958:2;19979:17;19972:47;8918:5;30070:12;30933:6;19958:2;19947:9;19943:18;30921:19;9012:52;9057:6;30961:14;19947:9;30961:14;19958:2;9038:5;9034:16;9012:52;:::i;:::-;32988:7;32972:14;-1:-1;;32968:28;9076:39;;;;30961:14;9076:39;;19929:192;-1:-1;;19929:192::o;20128:416::-;20328:2;20342:47;;;9352:1;20313:18;;;30921:19;-1:-1;;;30961:14;;;9367:32;9418:12;;;20299:245::o;20551:416::-;20751:2;20765:47;;;9669:2;20736:18;;;30921:19;9705:34;30961:14;;;9685:55;-1:-1;;;9760:12;;;9753:26;9798:12;;;20722:245::o;20974:416::-;21174:2;21188:47;;;10049:2;21159:18;;;30921:19;-1:-1;;;30961:14;;;10065:38;10122:12;;;21145:245::o;21397:416::-;21597:2;21611:47;;;10373:2;21582:18;;;30921:19;10409:34;30961:14;;;10389:55;-1:-1;;;10464:12;;;10457:39;10515:12;;;21568:245::o;21820:416::-;22020:2;22034:47;;;10766:2;22005:18;;;30921:19;10802:34;30961:14;;;10782:55;10871:30;10857:12;;;10850:52;10921:12;;;21991:245::o;22243:416::-;22443:2;22457:47;;;11172:2;22428:18;;;30921:19;11208:29;30961:14;;;11188:50;11257:12;;;22414:245::o;22666:416::-;22866:2;22880:47;;;11508:2;22851:18;;;30921:19;11544:34;30961:14;;;11524:55;-1:-1;;;11599:12;;;11592:28;11639:12;;;22837:245::o;23089:416::-;23289:2;23303:47;;;11890:2;23274:18;;;30921:19;11926:34;30961:14;;;11906:55;-1:-1;;;11981:12;;;11974:40;12033:12;;;23260:245::o;23512:416::-;23712:2;23726:47;;;12284:2;23697:18;;;30921:19;12320:34;30961:14;;;12300:55;-1:-1;;;12375:12;;;12368:26;12413:12;;;23683:245::o;23935:416::-;24135:2;24149:47;;;12664:2;24120:18;;;30921:19;12700:34;30961:14;;;12680:55;-1:-1;;;12755:12;;;12748:38;12805:12;;;24106:245::o;24358:416::-;24558:2;24572:47;;;13056:2;24543:18;;;30921:19;13092:34;30961:14;;;13072:55;-1:-1;;;13147:12;;;13140:33;13192:12;;;24529:245::o;24781:416::-;24981:2;24995:47;;;13443:2;24966:18;;;30921:19;13479:34;30961:14;;;13459:55;-1:-1;;;13534:12;;;13527:33;13579:12;;;24952:245::o;25204:416::-;25404:2;25418:47;;;14099:2;25389:18;;;30921:19;14135:34;30961:14;;;14115:55;-1:-1;;;14190:12;;;14183:30;14232:12;;;25375:245::o;25627:416::-;25827:2;25841:47;;;14483:2;25812:18;;;30921:19;14519:31;30961:14;;;14499:52;14570:12;;;25798:245::o;26050:416::-;26250:2;26264:47;;;14821:2;26235:18;;;30921:19;14857:34;30961:14;;;14837:55;-1:-1;;;14912:12;;;14905:34;14958:12;;;26221:245::o;26473:416::-;26673:2;26687:47;;;15209:2;26658:18;;;30921:19;15245:34;30961:14;;;15225:55;15314:32;15300:12;;;15293:54;15366:12;;;26644:245::o;26896:416::-;27096:2;27110:47;;;15617:2;27081:18;;;30921:19;15653:34;30961:14;;;15633:55;-1:-1;;;15708:12;;;15701:39;15759:12;;;27067:245::o;27548:636::-;8174:37;;;27967:2;27952:18;;8174:37;27803:2;28004;27989:18;;27982:48;;;27548:636;27788:18;;;30921:19;30961:14;;;27774:410::o;28191:556::-;8174:37;;;28567:2;28552:18;;8174:37;;;;28650:2;28635:18;;8174:37;28733:2;28718:18;;8174:37;28402:3;28387:19;;28373:374::o;28754:860::-;8174:37;;;29230:2;29215:18;;8174:37;;;;29313:2;29298:18;;8174:37;29396:2;29381:18;;8174:37;29065:3;29433;29418:19;;29411:49;;;28754:860;29050:19;;;30921;30961:14;;;29036:578::o;32628:268::-;32693:1;32700:101;32714:6;32711:1;32708:13;32700:101;;;32781:11;;;32775:18;32762:11;;;32755:39;32736:2;32729:10;32700:101;;;32816:6;32813:1;32810:13;32807:2;;;-1:-1;;32693:1;32863:16;;32856:27;32677:219::o;33009:117::-;-1:-1;;;;;32158:54;;33068:35;;33058:2;;33117:1;;33107:12",
  "language": "Solidity",
  "natspec": {
    "details": "Tracks stakes and pledged tokens to be distributed, for use with BadgerTree merkle distribution system. An arbitrary number of tokens to  distribute can be specified.",
    "kind": "dev",
    "methods": {
      "addDistributionToken(address)": {
        "notice": "===== Permissioned Actions: Admins ====="
      },
      "getDistributionTokens()": {
        "returns": {
          "_0": "The token users receive as they unstake."
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "getStakingToken()": {
        "returns": {
          "_0": "The token users deposit as stake."
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "initialize(address,address,uint256,address,address)": {
        "params": {
          "globalStartTime_": "Timestamp after which unlock schedules and staking can begin.",
          "initialDistributionToken_": "The token users receive as they unstake.",
          "stakingToken_": "The token users deposit as stake."
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "signalTokenLock(address,uint256,uint256,uint256)": {
        "details": "This funcion allows the contract owner to pledge more distribution tokens, along      with the associated \"unlock schedule\". These locked tokens immediately begin unlocking      linearly over the duraction of durationSec timeframe.",
        "params": {
          "amount": "Number of distribution tokens to lock. These are transferred from the caller.",
          "durationSec": "Length of time to linear unlock the tokens.",
          "startTime": "Time to start distribution.",
          "token": "Token to lock."
        }
      },
      "stake(uint256,bytes)": {
        "details": "Transfers amount of deposit tokens from the user.",
        "params": {
          "amount": "Number of deposit tokens to stake."
        }
      },
      "stakeFor(address,uint256,bytes)": {
        "details": "Transfers amount of deposit tokens from the caller on behalf of user.",
        "params": {
          "amount": "Number of deposit tokens to stake.",
          "data": "Not used.",
          "user": "User address who gains credit for this stake operation."
        }
      },
      "supportsHistory()": {
        "returns": {
          "_0": "False. This application does not support staking history."
        }
      },
      "totalStakedFor(address)": {
        "params": {
          "addr": "The user to look up staking information for."
        },
        "returns": {
          "_0": "The number of staking tokens deposited for addr."
        }
      },
      "unlockScheduleCount(address)": {
        "returns": {
          "_0": "Number of unlock schedules."
        }
      },
      "unstake(uint256,bytes)": {
        "details": "Unstakes a certain amount of previously deposited tokens. User also receives their alotted number of distribution tokens.",
        "params": {
          "amount": "Number of deposit tokens to unstake / withdraw.",
          "data": "Not used."
        }
      }
    },
    "title": "Badger Geyser",
    "version": 1
  },
  "offset": [
    733,
    9595
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7033E4A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9D81FF15 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC8FD6ED0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC8FD6ED0 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xCD616EA3 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x367 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x9D81FF15 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x9F9106D1 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x331 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x7033E4A6 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x8DAB7191 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x9292AB5F EQ PUSH2 0x319 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x328B10D8 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x4B341AED GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x4B341AED EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x4C255C97 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x5099A9DC EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x51F6CF2F EQ PUSH2 0x293 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x328B10D8 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x33E1A223 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x250 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x968C3D8 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xE89439B EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xEF96356 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x256FDCD6 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x20A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x128D JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x441 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x13A9 JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x674 JUMP JUMPDEST PUSH2 0x286 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x14C7 JUMP JUMPDEST PUSH2 0x2A6 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1246 JUMP JUMPDEST PUSH2 0x766 JUMP JUMPDEST PUSH2 0x2F9 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1388 JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1476 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x2F9 PUSH2 0x7C9 JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x806 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x1359 JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST PUSH2 0x382 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x65 SLOAD DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B8 PUSH1 0x68 DUP6 PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x189D JUMP JUMPDEST PUSH2 0x3E0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x8C1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3EE PUSH2 0x97A JUMP JUMPDEST PUSH2 0x3F9 CALLER CALLER DUP6 PUSH2 0x99C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x406 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x3E0 CALLER DUP6 DUP6 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x45F SWAP1 PUSH2 0x314 PUSH2 0xA98 JUMP JUMPDEST PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0x485 DUP3 DUP3 PUSH2 0xA9C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x51B JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4C1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x53F JUMPI POP PUSH2 0x53F PUSH2 0xB05 JUMP JUMPDEST DUP1 PUSH2 0x54D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x59C PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x5A7 PUSH1 0x0 DUP5 PUSH2 0x47B JUMP JUMPDEST PUSH2 0x5D1 PUSH32 0x4BF6F2CDCC8AD6C087A7A4FBECF46150B3686B71387234CAC2B3E2E6DC70E345 DUP4 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE PUSH2 0x5F7 PUSH1 0x68 DUP7 PUSH2 0xB9E JUMP JUMPDEST POP PUSH1 0x65 DUP5 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x61F PUSH2 0xA98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x64F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x485 DUP3 DUP3 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x687 PUSH1 0x68 PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6CC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x711 JUMPI PUSH2 0x6E5 PUSH1 0x68 DUP3 PUSH2 0xC27 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6F1 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x6D2 JUMP JUMPDEST POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x6B PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x731 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP5 POP SWAP3 POP DUP5 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x66 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x76E PUSH2 0xC33 JUMP JUMPDEST PUSH2 0x485 PUSH1 0x68 DUP3 PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x791 SWAP1 DUP4 PUSH2 0xC27 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x791 SWAP1 DUP4 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BE PUSH1 0x68 PUSH2 0xC1C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x65 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x7E5 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x3F9 CALLER DUP5 PUSH2 0xC5A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x794 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH32 0x4BF6F2CDCC8AD6C087A7A4FBECF46150B3686B71387234CAC2B3E2E6DC70E345 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x848 SWAP1 PUSH2 0x314 PUSH2 0xA98 JUMP JUMPDEST PUSH2 0x64F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x1774 JUMP JUMPDEST PUSH2 0x88E PUSH32 0x4BF6F2CDCC8AD6C087A7A4FBECF46150B3686B71387234CAC2B3E2E6DC70E345 CALLER PUSH2 0x79A JUMP JUMPDEST PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x1624 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x8C9 PUSH2 0x11D7 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH2 0x8D6 DUP3 DUP5 PUSH2 0xD6E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP7 DUP2 MSTORE PUSH1 0x60 DUP6 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6B DUP7 MSTORE DUP5 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP4 MSTORE SWAP7 SWAP1 SWAP2 KECCAK256 DUP9 MLOAD PUSH1 0x4 SWAP1 SWAP8 MUL ADD SWAP6 DUP7 SSTORE SWAP6 MLOAD SWAP6 DUP6 ADD DUP7 SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE MLOAD TIMESTAMP SWAP3 PUSH32 0x739472339D528D689EB4B6825D2D76852FD8870676F0B8A4BBB682D037F0FD6E SWAP2 PUSH2 0x96B SWAP2 DUP10 SWAP2 DUP10 SWAP2 DUP10 SWAP2 PUSH2 0x1A91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD TIMESTAMP LT ISZERO PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x9BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA05 SWAP1 DUP3 PUSH2 0xD6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x66 SLOAD PUSH2 0xA2B SWAP1 DUP3 PUSH2 0xD6E JUMP JUMPDEST PUSH1 0x66 SSTORE PUSH1 0x67 SLOAD PUSH2 0xA46 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 ADDRESS DUP5 PUSH2 0xD93 JUMP JUMPDEST NUMBER TIMESTAMP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x70462F09E1FCDD39EE7DBE9165C6A369557B03057A6D820C84A600208B9B26D DUP5 PUSH2 0xA7D DUP8 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8B SWAP3 SWAP2 SWAP1 PUSH2 0x1A59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xAB4 SWAP1 DUP3 PUSH2 0xB9E JUMP JUMPDEST ISZERO PUSH2 0x485 JUMPI PUSH2 0xAC1 PUSH2 0xA98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xB24 JUMPI POP PUSH2 0xB24 PUSH2 0xB05 JUMP JUMPDEST DUP1 PUSH2 0xB32 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xB4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xB81 PUSH2 0xDEB JUMP JUMPDEST PUSH2 0xB89 PUSH2 0xDEB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB9B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xBCB SWAP1 DUP3 PUSH2 0xEB6 JUMP JUMPDEST ISZERO PUSH2 0x485 JUMPI PUSH2 0xBD8 PUSH2 0xA98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x794 DUP3 PUSH2 0xECB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 DUP4 DUP4 PUSH2 0xECF JUMP JUMPDEST PUSH2 0xC3E PUSH1 0x0 CALLER PUSH2 0x79A JUMP JUMPDEST PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xC7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x1730 JUMP JUMPDEST DUP1 PUSH2 0xC84 DUP4 PUSH2 0x659 JUMP JUMPDEST LT ISZERO PUSH2 0xCA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x19AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xCC5 SWAP1 DUP3 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x66 SLOAD PUSH2 0xCEB SWAP1 DUP3 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x66 SSTORE PUSH1 0x67 SLOAD PUSH2 0xD05 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH2 0xF56 JUMP JUMPDEST NUMBER TIMESTAMP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA4CC38F55B7506135366A0BC5006873BA1B4AFE26F819B633E799754F80F223D DUP5 PUSH2 0xD3C DUP8 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4A SWAP3 SWAP2 SWAP1 PUSH2 0x1A59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x3E0 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xDB4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xE04 JUMPI POP PUSH2 0xE04 PUSH2 0xB05 JUMP JUMPDEST DUP1 PUSH2 0xE12 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xE2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xB9B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE78 DUP4 DUP4 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0xEAE JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x794 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1004 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x15E2 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF01 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x3F9 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xDB4 SWAP3 SWAP2 SWAP1 PUSH2 0x14AE JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFCA DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10F6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x3F9 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xFE8 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH2 0x3F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x10C0 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1037 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1054 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x1084 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x794 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x10EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1105 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x110D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1118 DUP6 PUSH2 0x11D1 JUMP JUMPDEST PUSH2 0x1134 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP1 PUSH2 0x192C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1151 SWAP2 SWAP1 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x118E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1193 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x11A7 JUMPI SWAP2 POP PUSH2 0x1105 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x11B7 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1210 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1227 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x123F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1257 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x791 DUP2 PUSH2 0x1AE7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1274 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x127F DUP2 PUSH2 0x1AE7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12A2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x12AD DUP2 PUSH2 0x1AE7 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12CF JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x12DB DUP8 DUP3 DUP9 ADD PUSH2 0x11FF JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12FC JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1307 DUP2 PUSH2 0x1AE7 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1332 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x791 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1352 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x136B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x137D DUP2 PUSH2 0x1AE7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x139A JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13C0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x13CB DUP2 PUSH2 0x1AE7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x13DB DUP2 PUSH2 0x1AE7 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x13F2 DUP2 PUSH2 0x1AE7 JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x1402 DUP2 PUSH2 0x1AE7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1424 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1441 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x144D DUP7 DUP3 DUP8 ADD PUSH2 0x11FF JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x146C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1ABB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1508 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x14E3 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x156B JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1531 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x15AB DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1ABB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x37B7363CA0B236B4B7 PUSH1 0xB9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6473 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x37B7363CAA37B5B2B72637B1B5B2B9 PUSH1 0x89 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x818591B5A5B881D1BC819DC985B9D PUSH1 0x8A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3C SWAP1 DUP3 ADD MSTORE PUSH32 0x4261646765724765797365723A205363686564756C652063616E6E6F74207374 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x617274206265666F726520676C6F62616C2073746172742074696D6500000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4261646765724765797365723A20756E7374616B6520616D6F756E7420697320 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x7A65726F PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x2061646D696E20746F207265766F6B65 PUSH1 0x80 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x4261646765724765797365723A207374616B6520616D6F756E74206973207A65 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x726F PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4261646765724765797365723A2062656E6566696369617279206973207A6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x6F2061646472657373 PUSH1 0xB8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4261646765724765797365723A20546F6B656E206E6F7420617070726F766564 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x10313C9030B236B4B7 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4261646765724765797365723A20446973747269627574696F6E206E6F742073 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1D185C9D1959 PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3E SWAP1 DUP3 ADD MSTORE PUSH32 0x4261646765724765797365723A20756E7374616B6520616D6F756E7420697320 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x67726561746572207468616E20746F74616C2075736572207374616B65730000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AD6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1ABE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3E0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB9B JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD DUP2 PUSH32 0x648C75FBB5372C1ED9A49713E9460C4ABF6242811F08556628EE8BF92D64736F PUSH13 0x634300060C0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        733,
        9595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "25": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7033E4A6"
    },
    "38": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE"
    },
    "42": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9D81FF15"
    },
    "49": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC8FD6ED0"
    },
    "60": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "GT",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC8FD6ED0"
    },
    "71": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x339"
    },
    "75": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCA15C873"
    },
    "82": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34C"
    },
    "86": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCD616EA3"
    },
    "93": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35F"
    },
    "97": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD547741F"
    },
    "104": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x367"
    },
    "108": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "112": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMP",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9D81FF15"
    },
    "120": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x321"
    },
    "124": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9F9106D1"
    },
    "131": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x329"
    },
    "135": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA217FDDF"
    },
    "142": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x331"
    },
    "146": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "150": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMP",
      "path": "0"
    },
    "151": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7033E4A6"
    },
    "158": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B6"
    },
    "162": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x817B1CD2"
    },
    "169": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CB"
    },
    "173": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DAB7191"
    },
    "180": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D3"
    },
    "184": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9010D07C"
    },
    "191": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E6"
    },
    "195": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x91D14854"
    },
    "202": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x306"
    },
    "206": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9292AB5F"
    },
    "213": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x319"
    },
    "217": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "221": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMP",
      "path": "0"
    },
    "222": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "224": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x328B10D8"
    },
    "229": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "GT",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14B"
    },
    "233": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4B341AED"
    },
    "240": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "GT",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125"
    },
    "244": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "246": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4B341AED"
    },
    "251": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x263"
    },
    "255": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "256": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "257": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4C255C97"
    },
    "262": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "263": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276"
    },
    "266": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "267": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "268": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5099A9DC"
    },
    "273": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "274": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27E"
    },
    "277": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "278": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "279": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x51F6CF2F"
    },
    "284": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "285": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x293"
    },
    "288": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "289": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "292": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMP",
      "path": "0"
    },
    "293": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "294": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "295": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x328B10D8"
    },
    "300": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "301": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D"
    },
    "304": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "305": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "306": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x33E1A223"
    },
    "311": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "312": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23D"
    },
    "315": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "316": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "317": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x36568ABE"
    },
    "322": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "323": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x250"
    },
    "326": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "327": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "330": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMP",
      "path": "0"
    },
    "331": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "332": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "333": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x968C3D8"
    },
    "338": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "339": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x193"
    },
    "342": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "343": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "344": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE89439B"
    },
    "349": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "350": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A8"
    },
    "353": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "354": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "355": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xEF96356"
    },
    "360": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "361": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BB"
    },
    "364": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "365": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "366": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x248A9CA3"
    },
    "371": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "372": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE"
    },
    "375": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "376": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "377": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x256FDCD6"
    },
    "382": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "383": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F7"
    },
    "386": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "387": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "388": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2F2FF15D"
    },
    "393": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "EQ",
      "path": "0"
    },
    "394": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20A"
    },
    "397": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "398": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "399": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "401": {
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "DUP1",
      "path": "0"
    },
    "402": {
      "first_revert": true,
      "fn": null,
      "offset": [
        733,
        9595
      ],
      "op": "REVERT",
      "path": "0"
    },
    "403": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6831,
        7292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "404": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6831,
        7292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6"
    },
    "407": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6831,
        7292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "410": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6831,
        7292
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "411": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6831,
        7292
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "413": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6831,
        7292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E7"
    },
    "416": {
      "fn": "BadgerGeyser.signalTokenLock",
      "jump": "i",
      "offset": [
        6831,
        7292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "417": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6831,
        7292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "418": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6831,
        7292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37A"
    },
    "421": {
      "fn": "BadgerGeyser.signalTokenLock",
      "jump": "i",
      "offset": [
        6831,
        7292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "422": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6831,
        7292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "423": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6831,
        7292
      ],
      "op": "STOP",
      "path": "0"
    },
    "424": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5060,
        5206
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "425": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5060,
        5206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6"
    },
    "428": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5060,
        5206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B6"
    },
    "431": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5060,
        5206
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "432": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5060,
        5206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "434": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5060,
        5206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1410"
    },
    "437": {
      "fn": "BadgerGeyser.stake",
      "jump": "i",
      "offset": [
        5060,
        5206
      ],
      "op": "JUMP",
      "path": "0"
    },
    "438": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5060,
        5206
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "439": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5060,
        5206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E6"
    },
    "442": {
      "fn": "BadgerGeyser.stake",
      "jump": "i",
      "offset": [
        5060,
        5206
      ],
      "op": "JUMP",
      "path": "0"
    },
    "443": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5470,
        5657
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "444": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5470,
        5657
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6"
    },
    "447": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5470,
        5657
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C9"
    },
    "450": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5470,
        5657
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "451": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5470,
        5657
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "453": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5470,
        5657
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x128D"
    },
    "456": {
      "fn": "BadgerGeyser.stakeFor",
      "jump": "i",
      "offset": [
        5470,
        5657
      ],
      "op": "JUMP",
      "path": "0"
    },
    "457": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5470,
        5657
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "458": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5470,
        5657
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FE"
    },
    "461": {
      "fn": "BadgerGeyser.stakeFor",
      "jump": "i",
      "offset": [
        5470,
        5657
      ],
      "op": "JUMP",
      "path": "0"
    },
    "462": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "463": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1E1"
    },
    "466": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1DC"
    },
    "469": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "470": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "472": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1341"
    },
    "475": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "jump": "i",
      "offset": [
        4642,
        4754
      ],
      "op": "JUMP",
      "path": "31"
    },
    "476": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "477": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x411"
    },
    "480": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "jump": "i",
      "offset": [
        4642,
        4754
      ],
      "op": "JUMP",
      "path": "31"
    },
    "481": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "482": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "484": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "485": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1EE"
    },
    "488": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "489": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "490": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1583"
    },
    "493": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "jump": "i",
      "offset": [
        4642,
        4754
      ],
      "op": "JUMP",
      "path": "31"
    },
    "494": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "495": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "497": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "498": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "DUP1",
      "path": "31"
    },
    "499": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "500": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "SUB",
      "path": "31"
    },
    "501": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "502": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "RETURN",
      "path": "31"
    },
    "503": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4613,
        4740
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "504": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4613,
        4740
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1"
    },
    "507": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4613,
        4740
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x205"
    },
    "510": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4613,
        4740
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "511": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4613,
        4740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "513": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4613,
        4740
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1246"
    },
    "516": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "jump": "i",
      "offset": [
        4613,
        4740
      ],
      "op": "JUMP",
      "path": "0"
    },
    "517": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4613,
        4740
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "518": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4613,
        4740
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x426"
    },
    "521": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "jump": "i",
      "offset": [
        4613,
        4740
      ],
      "op": "JUMP",
      "path": "0"
    },
    "522": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5004,
        5227
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "523": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5004,
        5227
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1A6"
    },
    "526": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5004,
        5227
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x218"
    },
    "529": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5004,
        5227
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "530": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5004,
        5227
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "532": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5004,
        5227
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1359"
    },
    "535": {
      "fn": "AccessControlUpgradeable.grantRole",
      "jump": "i",
      "offset": [
        5004,
        5227
      ],
      "op": "JUMP",
      "path": "31"
    },
    "536": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5004,
        5227
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "537": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5004,
        5227
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x441"
    },
    "540": {
      "fn": "AccessControlUpgradeable.grantRole",
      "jump": "i",
      "offset": [
        5004,
        5227
      ],
      "op": "JUMP",
      "path": "31"
    },
    "541": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "542": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230"
    },
    "545": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22B"
    },
    "548": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "549": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "551": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1246"
    },
    "554": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "jump": "i",
      "offset": [
        4746,
        4884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "555": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "556": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x489"
    },
    "559": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "jump": "i",
      "offset": [
        4746,
        4884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "560": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "561": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "563": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "564": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EE"
    },
    "567": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "568": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "569": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1514"
    },
    "572": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "jump": "i",
      "offset": [
        4746,
        4884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "573": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2432,
        2962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "574": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2432,
        2962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6"
    },
    "577": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2432,
        2962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24B"
    },
    "580": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2432,
        2962
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "581": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2432,
        2962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "583": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2432,
        2962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A9"
    },
    "586": {
      "fn": "BadgerGeyser.initialize",
      "jump": "i",
      "offset": [
        2432,
        2962
      ],
      "op": "JUMP",
      "path": "0"
    },
    "587": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2432,
        2962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "588": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2432,
        2962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x526"
    },
    "591": {
      "fn": "BadgerGeyser.initialize",
      "jump": "i",
      "offset": [
        2432,
        2962
      ],
      "op": "JUMP",
      "path": "0"
    },
    "592": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6178,
        6383
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "593": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6178,
        6383
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1A6"
    },
    "596": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6178,
        6383
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x25E"
    },
    "599": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6178,
        6383
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "600": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6178,
        6383
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "602": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6178,
        6383
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1359"
    },
    "605": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "jump": "i",
      "offset": [
        6178,
        6383
      ],
      "op": "JUMP",
      "path": "31"
    },
    "606": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6178,
        6383
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "607": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6178,
        6383
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x617"
    },
    "610": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "jump": "i",
      "offset": [
        6178,
        6383
      ],
      "op": "JUMP",
      "path": "31"
    },
    "611": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4439,
        4548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "612": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4439,
        4548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1"
    },
    "615": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4439,
        4548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271"
    },
    "618": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4439,
        4548
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "619": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4439,
        4548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "621": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4439,
        4548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1246"
    },
    "624": {
      "fn": "BadgerGeyser.totalStakedFor",
      "jump": "i",
      "offset": [
        4439,
        4548
      ],
      "op": "JUMP",
      "path": "0"
    },
    "625": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4439,
        4548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "626": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4439,
        4548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x659"
    },
    "629": {
      "fn": "BadgerGeyser.totalStakedFor",
      "jump": "i",
      "offset": [
        4439,
        4548
      ],
      "op": "JUMP",
      "path": "0"
    },
    "630": {
      "offset": [
        1163,
        1207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "631": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        1163,
        1207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1"
    },
    "634": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        1163,
        1207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x674"
    },
    "637": {
      "fn": "BadgerGeyser.totalStakedFor",
      "jump": "i",
      "offset": [
        1163,
        1207
      ],
      "op": "JUMP",
      "path": "0"
    },
    "638": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3835,
        4166
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "639": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3835,
        4166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286"
    },
    "642": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3835,
        4166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x679"
    },
    "645": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "jump": "i",
      "offset": [
        3835,
        4166
      ],
      "op": "JUMP",
      "path": "0"
    },
    "646": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3835,
        4166
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "647": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3835,
        4166
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "649": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3835,
        4166
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "650": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3835,
        4166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EE"
    },
    "653": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3835,
        4166
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "654": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3835,
        4166
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "655": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3835,
        4166
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C7"
    },
    "658": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "jump": "i",
      "offset": [
        3835,
        4166
      ],
      "op": "JUMP",
      "path": "0"
    },
    "659": {
      "offset": [
        1488,
        1547
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "660": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A6"
    },
    "663": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A1"
    },
    "666": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "667": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "669": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1262"
    },
    "672": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "jump": "i",
      "offset": [
        1488,
        1547
      ],
      "op": "JUMP",
      "path": "0"
    },
    "673": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "674": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x718"
    },
    "677": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "jump": "i",
      "offset": [
        1488,
        1547
      ],
      "op": "JUMP",
      "path": "0"
    },
    "678": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "679": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "681": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "682": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EE"
    },
    "685": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "686": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "687": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "688": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "689": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "690": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A76"
    },
    "693": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "jump": "i",
      "offset": [
        1488,
        1547
      ],
      "op": "JUMP",
      "path": "0"
    },
    "694": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        3497,
        3582
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "695": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        3497,
        3582
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BE"
    },
    "698": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        3497,
        3582
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75B"
    },
    "701": {
      "fn": "BadgerGeyser.supportsHistory",
      "jump": "i",
      "offset": [
        3497,
        3582
      ],
      "op": "JUMP",
      "path": "0"
    },
    "702": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        3497,
        3582
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "703": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        3497,
        3582
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "705": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        3497,
        3582
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "706": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        3497,
        3582
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EE"
    },
    "709": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        3497,
        3582
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "710": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        3497,
        3582
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "711": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        3497,
        3582
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1578"
    },
    "714": {
      "fn": "BadgerGeyser.supportsHistory",
      "jump": "i",
      "offset": [
        3497,
        3582
      ],
      "op": "JUMP",
      "path": "0"
    },
    "715": {
      "offset": [
        1294,
        1320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "716": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        1294,
        1320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1"
    },
    "719": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        1294,
        1320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x760"
    },
    "722": {
      "fn": "BadgerGeyser.supportsHistory",
      "jump": "i",
      "offset": [
        1294,
        1320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "723": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6116,
        6238
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "724": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6116,
        6238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6"
    },
    "727": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6116,
        6238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E1"
    },
    "730": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6116,
        6238
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "731": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6116,
        6238
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "733": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6116,
        6238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1246"
    },
    "736": {
      "fn": "BadgerGeyser.addDistributionToken",
      "jump": "i",
      "offset": [
        6116,
        6238
      ],
      "op": "JUMP",
      "path": "0"
    },
    "737": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6116,
        6238
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "738": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6116,
        6238
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x766"
    },
    "741": {
      "fn": "BadgerGeyser.addDistributionToken",
      "jump": "i",
      "offset": [
        6116,
        6238
      ],
      "op": "JUMP",
      "path": "0"
    },
    "742": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "743": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x2F9"
    },
    "746": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x2F4"
    },
    "749": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "750": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "752": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1388"
    },
    "755": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "jump": "i",
      "offset": [
        4325,
        4461
      ],
      "op": "JUMP",
      "path": "31"
    },
    "756": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "757": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x779"
    },
    "760": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "jump": "i",
      "offset": [
        4325,
        4461
      ],
      "op": "JUMP",
      "path": "31"
    },
    "761": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "762": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "764": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "765": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1EE"
    },
    "768": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "769": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "770": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1476"
    },
    "773": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "jump": "i",
      "offset": [
        4325,
        4461
      ],
      "op": "JUMP",
      "path": "31"
    },
    "774": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3310,
        3447
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "775": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3310,
        3447
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x2BE"
    },
    "778": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3310,
        3447
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x314"
    },
    "781": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3310,
        3447
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "782": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3310,
        3447
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "784": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3310,
        3447
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1359"
    },
    "787": {
      "fn": "AccessControlUpgradeable.hasRole",
      "jump": "i",
      "offset": [
        3310,
        3447
      ],
      "op": "JUMP",
      "path": "31"
    },
    "788": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3310,
        3447
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "789": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3310,
        3447
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x79A"
    },
    "792": {
      "fn": "AccessControlUpgradeable.hasRole",
      "jump": "i",
      "offset": [
        3310,
        3447
      ],
      "op": "JUMP",
      "path": "31"
    },
    "793": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        4172,
        4289
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "794": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        4172,
        4289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1"
    },
    "797": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        4172,
        4289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B2"
    },
    "800": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "jump": "i",
      "offset": [
        4172,
        4289
      ],
      "op": "JUMP",
      "path": "0"
    },
    "801": {
      "offset": [
        1126,
        1156
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "802": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        1126,
        1156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1"
    },
    "805": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        1126,
        1156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C3"
    },
    "808": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "jump": "i",
      "offset": [
        1126,
        1156
      ],
      "op": "JUMP",
      "path": "0"
    },
    "809": {
      "fn": "BadgerGeyser.getStakingToken",
      "offset": [
        3653,
        3757
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "810": {
      "fn": "BadgerGeyser.getStakingToken",
      "offset": [
        3653,
        3757
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F9"
    },
    "813": {
      "fn": "BadgerGeyser.getStakingToken",
      "offset": [
        3653,
        3757
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C9"
    },
    "816": {
      "fn": "BadgerGeyser.getStakingToken",
      "jump": "i",
      "offset": [
        3653,
        3757
      ],
      "op": "JUMP",
      "path": "0"
    },
    "817": {
      "offset": [
        2087,
        2136
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "818": {
      "fn": "BadgerGeyser.getStakingToken",
      "offset": [
        2087,
        2136
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1E1"
    },
    "821": {
      "fn": "BadgerGeyser.getStakingToken",
      "offset": [
        2087,
        2136
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x7D8"
    },
    "824": {
      "fn": "BadgerGeyser.getStakingToken",
      "jump": "i",
      "offset": [
        2087,
        2136
      ],
      "op": "JUMP",
      "path": "31"
    },
    "825": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        5918,
        6056
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "826": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        5918,
        6056
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6"
    },
    "829": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        5918,
        6056
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x347"
    },
    "832": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        5918,
        6056
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "833": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        5918,
        6056
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "835": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        5918,
        6056
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1410"
    },
    "838": {
      "fn": "BadgerGeyser.unstake",
      "jump": "i",
      "offset": [
        5918,
        6056
      ],
      "op": "JUMP",
      "path": "0"
    },
    "839": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        5918,
        6056
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "840": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        5918,
        6056
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7DD"
    },
    "843": {
      "fn": "BadgerGeyser.unstake",
      "jump": "i",
      "offset": [
        5918,
        6056
      ],
      "op": "JUMP",
      "path": "0"
    },
    "844": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3615,
        3740
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "845": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3615,
        3740
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1E1"
    },
    "848": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3615,
        3740
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x35A"
    },
    "851": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3615,
        3740
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "852": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3615,
        3740
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "854": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3615,
        3740
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1341"
    },
    "857": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3615,
        3740
      ],
      "op": "JUMP",
      "path": "31"
    },
    "858": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3615,
        3740
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "859": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3615,
        3740
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x7EF"
    },
    "862": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3615,
        3740
      ],
      "op": "JUMP",
      "path": "31"
    },
    "863": {
      "offset": [
        1213,
        1287
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "864": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        1213,
        1287
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1"
    },
    "867": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        1213,
        1287
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x806"
    },
    "870": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "jump": "i",
      "offset": [
        1213,
        1287
      ],
      "op": "JUMP",
      "path": "0"
    },
    "871": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5461,
        5687
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "872": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5461,
        5687
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1A6"
    },
    "875": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5461,
        5687
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x375"
    },
    "878": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5461,
        5687
      ],
      "op": "CALLDATASIZE",
      "path": "31"
    },
    "879": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5461,
        5687
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "881": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5461,
        5687
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1359"
    },
    "884": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "jump": "i",
      "offset": [
        5461,
        5687
      ],
      "op": "JUMP",
      "path": "31"
    },
    "885": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5461,
        5687
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "886": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5461,
        5687
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x82A"
    },
    "889": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "jump": "i",
      "offset": [
        5461,
        5687
      ],
      "op": "JUMP",
      "path": "31"
    },
    "890": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6831,
        7292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "891": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6984,
        7002
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 0,
      "value": "0x382"
    },
    "894": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6984,
        7000
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x864"
    },
    "897": {
      "fn": "BadgerGeyser.signalTokenLock",
      "jump": "i",
      "offset": [
        6984,
        7002
      ],
      "op": "JUMP",
      "path": "0"
    },
    "898": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6984,
        7002
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "899": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7036,
        7051
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x65"
    },
    "901": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7036,
        7051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "902": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7023,
        7032
      ],
      "op": "DUP2",
      "path": "0"
    },
    "903": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7023,
        7051
      ],
      "op": "LT",
      "path": "0"
    },
    "904": {
      "branch": 92,
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7023,
        7051
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "905": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AD"
    },
    "908": {
      "branch": 92,
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "909": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "911": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "912": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "916": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "918": {
      "op": "SHL"
    },
    "919": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "DUP2",
      "path": "0"
    },
    "920": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "921": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "923": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "ADD",
      "path": "0"
    },
    "924": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A4"
    },
    "927": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "928": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x169C"
    },
    "931": {
      "fn": "BadgerGeyser.signalTokenLock",
      "jump": "i",
      "offset": [
        7015,
        7116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "932": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "933": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "935": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "936": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "937": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "938": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "SUB",
      "path": "0"
    },
    "939": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "940": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "941": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7015,
        7116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "942": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7134,
        7168
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 2,
      "value": "0x3B8"
    },
    "945": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7134,
        7152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x68"
    },
    "947": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7162,
        7167
      ],
      "op": "DUP6",
      "path": "0"
    },
    "948": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7134,
        7161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AC"
    },
    "951": {
      "fn": "BadgerGeyser.signalTokenLock",
      "jump": "i",
      "offset": [
        7134,
        7168
      ],
      "op": "JUMP",
      "path": "0"
    },
    "952": {
      "branch": 93,
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7134,
        7168
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "953": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7126,
        7214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D4"
    },
    "956": {
      "branch": 93,
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7126,
        7214
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "957": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7126,
        7214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "959": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7126,
        7214
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "960": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "964": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "966": {
      "op": "SHL"
    },
    "967": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7126,
        7214
      ],
      "op": "DUP2",
      "path": "0"
    },
    "968": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7126,
        7214
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "969": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7126,
        7214
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "971": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7126,
        7214
      ],
      "op": "ADD",
      "path": "0"
    },
    "972": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7126,
        7214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A4"
    },
    "975": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7126,
        7214
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "976": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7126,
        7214
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x189D"
    },
    "979": {
      "fn": "BadgerGeyser.signalTokenLock",
      "jump": "i",
      "offset": [
        7126,
        7214
      ],
      "op": "JUMP",
      "path": "0"
    },
    "980": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7126,
        7214
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "981": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7230,
        7285
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x3E0"
    },
    "984": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7247,
        7252
      ],
      "op": "DUP5",
      "path": "0"
    },
    "985": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7254,
        7260
      ],
      "op": "DUP5",
      "path": "0"
    },
    "986": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7262,
        7273
      ],
      "op": "DUP5",
      "path": "0"
    },
    "987": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7275,
        7284
      ],
      "op": "DUP5",
      "path": "0"
    },
    "988": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7230,
        7246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C1"
    },
    "991": {
      "fn": "BadgerGeyser.signalTokenLock",
      "jump": "i",
      "offset": [
        7230,
        7285
      ],
      "op": "JUMP",
      "path": "0"
    },
    "992": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        7230,
        7285
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "993": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6831,
        7292
      ],
      "op": "POP",
      "path": "0"
    },
    "994": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6831,
        7292
      ],
      "op": "POP",
      "path": "0"
    },
    "995": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6831,
        7292
      ],
      "op": "POP",
      "path": "0"
    },
    "996": {
      "fn": "BadgerGeyser.signalTokenLock",
      "offset": [
        6831,
        7292
      ],
      "op": "POP",
      "path": "0"
    },
    "997": {
      "fn": "BadgerGeyser.signalTokenLock",
      "jump": "o",
      "offset": [
        6831,
        7292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "998": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5060,
        5206
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "999": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5131,
        5148
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x3EE"
    },
    "1002": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5131,
        5146
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97A"
    },
    "1005": {
      "fn": "BadgerGeyser.stake",
      "jump": "i",
      "offset": [
        5131,
        5148
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1006": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5131,
        5148
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1007": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5158,
        5199
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x3F9"
    },
    "1010": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5168,
        5178
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1011": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5180,
        5190
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1012": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5192,
        5198
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1013": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5158,
        5167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99C"
    },
    "1016": {
      "fn": "BadgerGeyser.stake",
      "jump": "i",
      "offset": [
        5158,
        5199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1017": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5158,
        5199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1018": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5060,
        5206
      ],
      "op": "POP",
      "path": "0"
    },
    "1019": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5060,
        5206
      ],
      "op": "POP",
      "path": "0"
    },
    "1020": {
      "fn": "BadgerGeyser.stake",
      "offset": [
        5060,
        5206
      ],
      "op": "POP",
      "path": "0"
    },
    "1021": {
      "fn": "BadgerGeyser.stake",
      "jump": "o",
      "offset": [
        5060,
        5206
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1022": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5470,
        5657
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1023": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5588,
        5605
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x406"
    },
    "1026": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5588,
        5603
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97A"
    },
    "1029": {
      "fn": "BadgerGeyser.stakeFor",
      "jump": "i",
      "offset": [
        5588,
        5605
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1030": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5588,
        5605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1031": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5615,
        5650
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x3E0"
    },
    "1034": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5625,
        5635
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1035": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5637,
        5641
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1036": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5643,
        5649
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1037": {
      "fn": "BadgerGeyser.stakeFor",
      "offset": [
        5615,
        5624
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99C"
    },
    "1040": {
      "fn": "BadgerGeyser.stakeFor",
      "jump": "i",
      "offset": [
        5615,
        5650
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1041": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4642,
        4754
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1042": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4699,
        4706
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1044": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4725,
        4737
      ],
      "op": "SWAP1",
      "path": "31",
      "statement": 8
    },
    "1045": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4725,
        4737
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1046": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4725,
        4737
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1047": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4725,
        4731
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x33"
    },
    "1049": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4725,
        4737
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "1051": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4725,
        4737
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1052": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4725,
        4737
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1054": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4725,
        4737
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1055": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4725,
        4737
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1056": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4725,
        4747
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x2"
    },
    "1058": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4725,
        4747
      ],
      "op": "ADD",
      "path": "31"
    },
    "1059": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4725,
        4747
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1060": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "offset": [
        4725,
        4747
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1061": {
      "fn": "AccessControlUpgradeable.getRoleAdmin",
      "jump": "o",
      "offset": [
        4642,
        4754
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1062": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4613,
        4740
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1069": {
      "op": "SHL"
    },
    "1070": {
      "op": "SUB"
    },
    "1071": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4704,
        4726
      ],
      "op": "AND",
      "path": "0",
      "statement": 9
    },
    "1072": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4678,
        4685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1074": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4704,
        4726
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1075": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4704,
        4726
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1076": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4704,
        4726
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1077": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4704,
        4719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6B"
    },
    "1079": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4704,
        4726
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1081": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4704,
        4726
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1082": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4704,
        4726
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1084": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4704,
        4726
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1085": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4704,
        4726
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1086": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4704,
        4733
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1087": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "offset": [
        4704,
        4733
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1088": {
      "fn": "BadgerGeyser.unlockScheduleCount",
      "jump": "o",
      "offset": [
        4613,
        4740
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1089": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5004,
        5227
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1090": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5095,
        5107
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 10,
      "value": "0x0"
    },
    "1092": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5095,
        5107
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1093": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5095,
        5107
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1094": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5095,
        5107
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1095": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5095,
        5101
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x33"
    },
    "1097": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5095,
        5107
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "1099": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5095,
        5107
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1100": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5095,
        5107
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1102": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5095,
        5107
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1103": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5095,
        5107
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1104": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5095,
        5117
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x2"
    },
    "1106": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5095,
        5117
      ],
      "op": "ADD",
      "path": "31"
    },
    "1107": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5095,
        5117
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1108": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5087,
        5132
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x45F"
    },
    "1111": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5087,
        5132
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1112": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5119,
        5131
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x314"
    },
    "1115": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5119,
        5129
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA98"
    },
    "1118": {
      "fn": "AccessControlUpgradeable.grantRole",
      "jump": "i",
      "offset": [
        5119,
        5131
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1119": {
      "branch": 101,
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5087,
        5132
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1120": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5079,
        5184
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x47B"
    },
    "1123": {
      "branch": 101,
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5079,
        5184
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "1124": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5079,
        5184
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1126": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5079,
        5184
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1127": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1133": {
      "op": "SHL"
    },
    "1134": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5079,
        5184
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1135": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5079,
        5184
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1136": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5079,
        5184
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "1138": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5079,
        5184
      ],
      "op": "ADD",
      "path": "31"
    },
    "1139": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5079,
        5184
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x3A4"
    },
    "1142": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5079,
        5184
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1143": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5079,
        5184
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x164D"
    },
    "1146": {
      "fn": "AccessControlUpgradeable.grantRole",
      "jump": "i",
      "offset": [
        5079,
        5184
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1147": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5079,
        5184
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1148": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5195,
        5220
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 11,
      "value": "0x485"
    },
    "1151": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5206,
        5210
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1152": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5212,
        5219
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1153": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5195,
        5205
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA9C"
    },
    "1156": {
      "fn": "AccessControlUpgradeable.grantRole",
      "jump": "i",
      "offset": [
        5195,
        5220
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1157": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5195,
        5220
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1158": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5004,
        5227
      ],
      "op": "POP",
      "path": "31"
    },
    "1159": {
      "fn": "AccessControlUpgradeable.grantRole",
      "offset": [
        5004,
        5227
      ],
      "op": "POP",
      "path": "31"
    },
    "1160": {
      "fn": "AccessControlUpgradeable.grantRole",
      "jump": "o",
      "offset": [
        5004,
        5227
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1161": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1168": {
      "op": "SHL"
    },
    "1169": {
      "op": "SUB"
    },
    "1170": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 12
    },
    "1171": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "AND",
      "path": "0"
    },
    "1172": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1174": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1175": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1176": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1177": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6B"
    },
    "1179": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1181": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1182": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1183": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1184": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1186": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1187": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1188": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1189": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1190": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1191": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1192": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1193": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1194": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1195": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "MUL",
      "path": "0"
    },
    "1196": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1197": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "ADD",
      "path": "0"
    },
    "1198": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1199": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "ADD",
      "path": "0"
    },
    "1200": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1201": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1202": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1203": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1204": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1205": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1206": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4813,
        4836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1208": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4813,
        4836
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1209": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1210": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1211": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1212": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4855,
        4877
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1213": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1214": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1215": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1216": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "ADD",
      "path": "0"
    },
    "1217": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1218": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1219": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1220": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "LT",
      "path": "0"
    },
    "1221": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1222": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51B"
    },
    "1225": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1226": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1227": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1228": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1229": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1231": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1232": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1234": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1236": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1237": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1238": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1240": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "MUL",
      "path": "0"
    },
    "1241": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "ADD",
      "path": "0"
    },
    "1242": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1244": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1245": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1246": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1248": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "ADD",
      "path": "0"
    },
    "1249": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1251": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1252": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1253": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1254": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1256": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1257": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "ADD",
      "path": "0"
    },
    "1258": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1259": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1260": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1261": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1263": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "ADD",
      "path": "0"
    },
    "1264": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1266": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1267": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "ADD",
      "path": "0"
    },
    "1268": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1269": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1270": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1271": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1273": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "ADD",
      "path": "0"
    },
    "1274": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1276": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1277": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "ADD",
      "path": "0"
    },
    "1278": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1279": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1280": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1281": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1283": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "ADD",
      "path": "0"
    },
    "1284": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1286": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1287": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "ADD",
      "path": "0"
    },
    "1288": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1289": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1290": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1291": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "POP",
      "path": "0"
    },
    "1292": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "POP",
      "path": "0"
    },
    "1293": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1294": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1295": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1297": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "ADD",
      "path": "0"
    },
    "1298": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1299": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1301": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "ADD",
      "path": "0"
    },
    "1302": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1303": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C1"
    },
    "1306": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1307": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1308": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "POP",
      "path": "0"
    },
    "1309": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "POP",
      "path": "0"
    },
    "1310": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "POP",
      "path": "0"
    },
    "1311": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "POP",
      "path": "0"
    },
    "1312": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1313": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4848,
        4877
      ],
      "op": "POP",
      "path": "0"
    },
    "1314": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1315": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1316": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "offset": [
        4746,
        4884
      ],
      "op": "POP",
      "path": "0"
    },
    "1317": {
      "fn": "BadgerGeyser.getUnlockSchedulesFor",
      "jump": "o",
      "offset": [
        4746,
        4884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1318": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2432,
        2962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1319": {
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "1321": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1426,
        1439
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "1322": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x100"
    },
    "1325": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1426,
        1439
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "1326": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1426,
        1439
      ],
      "op": "DIV",
      "path": "36"
    },
    "1327": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xFF"
    },
    "1329": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1426,
        1439
      ],
      "op": "AND",
      "path": "36"
    },
    "1330": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1426,
        1439
      ],
      "op": "DUP1",
      "path": "36"
    },
    "1331": {
      "offset": [
        1426,
        1459
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x53F"
    },
    "1334": {
      "offset": [
        1426,
        1459
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "1335": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1426,
        1459
      ],
      "op": "POP",
      "path": "36"
    },
    "1336": {
      "offset": [
        1443,
        1459
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x53F"
    },
    "1339": {
      "offset": [
        1443,
        1457
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xB05"
    },
    "1342": {
      "jump": "i",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMP",
      "path": "36"
    },
    "1343": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "1344": {
      "offset": [
        1426,
        1476
      ],
      "op": "DUP1",
      "path": "36"
    },
    "1345": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1426,
        1476
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x54D"
    },
    "1348": {
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "1349": {
      "op": "POP"
    },
    "1350": {
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "1352": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1464,
        1476
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "1353": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xFF"
    },
    "1355": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1464,
        1476
      ],
      "op": "AND",
      "path": "36"
    },
    "1356": {
      "offset": [
        1463,
        1476
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "1357": {
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "1358": {
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x569"
    },
    "1361": {
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "1362": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "1364": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "1365": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1371": {
      "op": "SHL"
    },
    "1372": {
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "36"
    },
    "1373": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "1374": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "1376": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "36"
    },
    "1377": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x3A4"
    },
    "1380": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "1381": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1806"
    },
    "1384": {
      "fn": "BadgerGeyser.initialize",
      "jump": "i",
      "offset": [
        1418,
        1527
      ],
      "op": "JUMP",
      "path": "36"
    },
    "1385": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "1386": {
      "offset": [
        1538,
        1557
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "1388": {
      "offset": [
        1561,
        1574
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "1389": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x100"
    },
    "1392": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1561,
        1574
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "1393": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1561,
        1574
      ],
      "op": "DIV",
      "path": "36"
    },
    "1394": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xFF"
    },
    "1396": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1561,
        1574
      ],
      "op": "AND",
      "path": "36"
    },
    "1397": {
      "offset": [
        1560,
        1574
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "1398": {
      "offset": [
        1584,
        1682
      ],
      "op": "DUP1",
      "path": "36"
    },
    "1399": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1584,
        1682
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "1400": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1584,
        1682
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x594"
    },
    "1403": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1584,
        1682
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "1404": {
      "offset": [
        1618,
        1631
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "1406": {
      "offset": [
        1618,
        1638
      ],
      "op": "DUP1",
      "path": "36"
    },
    "1407": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1618,
        1638
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1410": {
      "op": "NOT"
    },
    "1411": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "1414": {
      "op": "NOT"
    },
    "1415": {
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "1416": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "1417": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1618,
        1638
      ],
      "op": "AND",
      "path": "36"
    },
    "1418": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1618,
        1638
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x100"
    },
    "1421": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1618,
        1638
      ],
      "op": "OR",
      "path": "36"
    },
    "1422": {
      "offset": [
        1652,
        1671
      ],
      "op": "AND",
      "path": "36"
    },
    "1423": {
      "offset": [
        1634,
        1638
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1"
    },
    "1425": {
      "offset": [
        1652,
        1671
      ],
      "op": "OR",
      "path": "36"
    },
    "1426": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1652,
        1671
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "1427": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1652,
        1671
      ],
      "op": "SSTORE",
      "path": "36"
    },
    "1428": {
      "offset": [
        1584,
        1682
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "1429": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2673,
        2695
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x59C"
    },
    "1432": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2673,
        2693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0B"
    },
    "1435": {
      "fn": "BadgerGeyser.initialize",
      "jump": "i",
      "offset": [
        2673,
        2695
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1436": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2673,
        2695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1437": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2706,
        2751
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 14,
      "value": "0x5A7"
    },
    "1440": {
      "offset": [
        2132,
        2136
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1442": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2737,
        2750
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1443": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2706,
        2716
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47B"
    },
    "1446": {
      "fn": "BadgerGeyser.initialize",
      "jump": "i",
      "offset": [
        2706,
        2751
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1447": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2706,
        2751
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1448": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2761,
        2811
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x5D1"
    },
    "1451": {
      "offset": [
        1257,
        1287
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4BF6F2CDCC8AD6C087A7A4FBECF46150B3686B71387234CAC2B3E2E6DC70E345"
    },
    "1484": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2791,
        2810
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1485": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2761,
        2771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47B"
    },
    "1488": {
      "fn": "BadgerGeyser.initialize",
      "jump": "i",
      "offset": [
        2761,
        2811
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1489": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2761,
        2811
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1490": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2822,
        2835
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x67"
    },
    "1492": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2822,
        2851
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1493": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2822,
        2851
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "op": "SUB"
    },
    "1502": {
      "op": "NOT"
    },
    "1503": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2822,
        2851
      ],
      "op": "AND",
      "path": "0"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1510": {
      "op": "SHL"
    },
    "1511": {
      "op": "SUB"
    },
    "1512": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2822,
        2851
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1513": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2822,
        2851
      ],
      "op": "AND",
      "path": "0"
    },
    "1514": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2822,
        2851
      ],
      "op": "OR",
      "path": "0"
    },
    "1515": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2822,
        2851
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1516": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2822,
        2851
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1517": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2861,
        2910
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x5F7"
    },
    "1520": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2861,
        2879
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x68"
    },
    "1522": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2884,
        2909
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1523": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2861,
        2883
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9E"
    },
    "1526": {
      "fn": "BadgerGeyser.initialize",
      "jump": "i",
      "offset": [
        2861,
        2910
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1527": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2861,
        2910
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1528": {
      "op": "POP"
    },
    "1529": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2921,
        2936
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x65"
    },
    "1531": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2921,
        2955
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1532": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2921,
        2955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1533": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2921,
        2955
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1534": {
      "offset": [
        1704,
        1770
      ],
      "op": "DUP1",
      "path": "36"
    },
    "1535": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1704,
        1770
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "1536": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1704,
        1770
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x60F"
    },
    "1539": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1704,
        1770
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "1540": {
      "offset": [
        1754,
        1759
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "1542": {
      "offset": [
        1738,
        1759
      ],
      "op": "DUP1",
      "path": "36"
    },
    "1543": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1738,
        1759
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "1544": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "1547": {
      "op": "NOT"
    },
    "1548": {
      "offset": [
        1738,
        1759
      ],
      "op": "AND",
      "path": "36"
    },
    "1549": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1738,
        1759
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "1550": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        1738,
        1759
      ],
      "op": "SSTORE",
      "path": "36"
    },
    "1551": {
      "offset": [
        1704,
        1770
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "1552": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2432,
        2962
      ],
      "op": "POP",
      "path": "0"
    },
    "1553": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2432,
        2962
      ],
      "op": "POP",
      "path": "0"
    },
    "1554": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2432,
        2962
      ],
      "op": "POP",
      "path": "0"
    },
    "1555": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2432,
        2962
      ],
      "op": "POP",
      "path": "0"
    },
    "1556": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2432,
        2962
      ],
      "op": "POP",
      "path": "0"
    },
    "1557": {
      "fn": "BadgerGeyser.initialize",
      "offset": [
        2432,
        2962
      ],
      "op": "POP",
      "path": "0"
    },
    "1558": {
      "fn": "BadgerGeyser.initialize",
      "jump": "o",
      "offset": [
        2432,
        2962
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1559": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6178,
        6383
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1560": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6275,
        6287
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 19,
      "value": "0x61F"
    },
    "1563": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6275,
        6285
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA98"
    },
    "1566": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "jump": "i",
      "offset": [
        6275,
        6287
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1567": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6275,
        6287
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1574": {
      "op": "SHL"
    },
    "1575": {
      "op": "SUB"
    },
    "1576": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6264,
        6287
      ],
      "op": "AND",
      "path": "31"
    },
    "1577": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6264,
        6271
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1584": {
      "op": "SHL"
    },
    "1585": {
      "op": "SUB"
    },
    "1586": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6264,
        6287
      ],
      "op": "AND",
      "path": "31"
    },
    "1587": {
      "branch": 102,
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6264,
        6287
      ],
      "op": "EQ",
      "path": "31"
    },
    "1588": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6256,
        6339
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x64F"
    },
    "1591": {
      "branch": 102,
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6256,
        6339
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "1592": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6256,
        6339
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1594": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6256,
        6339
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1595": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1601": {
      "op": "SHL"
    },
    "1602": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6256,
        6339
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1603": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6256,
        6339
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1604": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6256,
        6339
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "1606": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6256,
        6339
      ],
      "op": "ADD",
      "path": "31"
    },
    "1607": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6256,
        6339
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x3A4"
    },
    "1610": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6256,
        6339
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1611": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6256,
        6339
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1A0A"
    },
    "1614": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "jump": "i",
      "offset": [
        6256,
        6339
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1615": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6256,
        6339
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1616": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6350,
        6376
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 20,
      "value": "0x485"
    },
    "1619": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6362,
        6366
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1620": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6368,
        6375
      ],
      "op": "DUP3",
      "path": "31"
    },
    "1621": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "offset": [
        6350,
        6361
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xBB3"
    },
    "1624": {
      "fn": "AccessControlUpgradeable.renounceRole",
      "jump": "i",
      "offset": [
        6350,
        6376
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1625": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4439,
        4548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1632": {
      "op": "SHL"
    },
    "1633": {
      "op": "SUB"
    },
    "1634": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4524,
        4541
      ],
      "op": "AND",
      "path": "0",
      "statement": 21
    },
    "1635": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4498,
        4505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1637": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4524,
        4541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1638": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4524,
        4541
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1639": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4524,
        4541
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1640": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4524,
        4535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6A"
    },
    "1642": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4524,
        4541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1644": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4524,
        4541
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1645": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4524,
        4541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1647": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4524,
        4541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1648": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4524,
        4541
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1649": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4524,
        4541
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1650": {
      "fn": "BadgerGeyser.totalStakedFor",
      "offset": [
        4524,
        4541
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1651": {
      "fn": "BadgerGeyser.totalStakedFor",
      "jump": "o",
      "offset": [
        4439,
        4548
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1652": {
      "offset": [
        1163,
        1207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1653": {
      "offset": [
        1204,
        1207
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1655": {
      "offset": [
        1163,
        1207
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1656": {
      "fn": "BadgerGeyser.totalStakedFor",
      "jump": "o",
      "offset": [
        1163,
        1207
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1657": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3835,
        4166
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1658": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3889,
        3905
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1660": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3917,
        3934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1662": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3937,
        3964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x687"
    },
    "1665": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3937,
        3955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x68"
    },
    "1667": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3937,
        3962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1C"
    },
    "1670": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "jump": "i",
      "offset": [
        3937,
        3964
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1671": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3937,
        3964
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1672": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3917,
        3964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1673": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3917,
        3964
      ],
      "op": "POP",
      "path": "0"
    },
    "1674": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3974,
        3997
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1676": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4014,
        4023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1677": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1686": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1687": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "GT",
      "path": "0"
    },
    "1688": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1689": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1690": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A2"
    },
    "1693": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1694": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1696": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1697": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1698": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1699": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "POP",
      "path": "0"
    },
    "1700": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1702": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1703": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1704": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1705": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1706": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1707": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1708": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1710": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "MUL",
      "path": "0"
    },
    "1711": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1713": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "ADD",
      "path": "0"
    },
    "1714": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1715": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "ADD",
      "path": "0"
    },
    "1716": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1718": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1719": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1720": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1721": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CC"
    },
    "1724": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1725": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1726": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1728": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "ADD",
      "path": "0"
    },
    "1729": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1731": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1732": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "MUL",
      "path": "0"
    },
    "1733": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1734": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1735": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1736": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "1737": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "ADD",
      "path": "0"
    },
    "1738": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1739": {
      "op": "POP"
    },
    "1740": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1741": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4000,
        4024
      ],
      "op": "POP",
      "path": "0"
    },
    "1742": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3974,
        4024
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1743": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3974,
        4024
      ],
      "op": "POP",
      "path": "0"
    },
    "1744": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4040,
        4049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1746": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4035,
        4136
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1747": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4059,
        4068
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1748": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4055,
        4056
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1749": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4055,
        4068
      ],
      "op": "LT",
      "path": "0"
    },
    "1750": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4035,
        4136
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1751": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4035,
        4136
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x711"
    },
    "1754": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4035,
        4136
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1755": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4101,
        4125
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 22,
      "value": "0x6E5"
    },
    "1758": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4101,
        4119
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x68"
    },
    "1760": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4123,
        4124
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1761": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4101,
        4122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC27"
    },
    "1764": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "jump": "i",
      "offset": [
        4101,
        4125
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1765": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4101,
        4125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1766": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4095
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1767": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4096,
        4097
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1768": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1769": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1770": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1771": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "LT",
      "path": "0"
    },
    "1772": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F1"
    },
    "1775": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1776": {
      "dev": "Index out of range",
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "INVALID",
      "path": "0"
    },
    "1777": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1784": {
      "op": "SHL"
    },
    "1785": {
      "op": "SUB"
    },
    "1786": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4125
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1787": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4125
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1788": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4125
      ],
      "op": "AND",
      "path": "0"
    },
    "1789": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1791": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1792": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1793": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "MUL",
      "path": "0"
    },
    "1794": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1795": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1796": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1797": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "ADD",
      "path": "0"
    },
    "1798": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1799": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1800": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4098
      ],
      "op": "ADD",
      "path": "0"
    },
    "1801": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4089,
        4125
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1802": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4070,
        4073
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x1"
    },
    "1804": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4070,
        4073
      ],
      "op": "ADD",
      "path": "0"
    },
    "1805": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4035,
        4136
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D2"
    },
    "1808": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4035,
        4136
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1809": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4035,
        4136
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1810": {
      "op": "POP"
    },
    "1811": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        4153,
        4159
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 24
    },
    "1812": {
      "op": "POP"
    },
    "1813": {
      "op": "POP"
    },
    "1814": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        3835,
        4166
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1815": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "jump": "o",
      "offset": [
        3835,
        4166
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1816": {
      "offset": [
        1488,
        1547
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1817": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6B"
    },
    "1819": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1821": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1822": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1823": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1825": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1826": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1828": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1830": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1831": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1832": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1833": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1834": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1835": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "LT",
      "path": "0"
    },
    "1836": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x731"
    },
    "1839": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1840": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "INVALID",
      "path": "0"
    },
    "1841": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1842": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1844": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1845": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1846": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1847": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1849": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1850": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1851": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1852": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1854": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1855": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1856": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "MUL",
      "path": "0"
    },
    "1857": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "ADD",
      "path": "0"
    },
    "1858": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1859": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1860": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1862": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1863": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "ADD",
      "path": "0"
    },
    "1864": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1865": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1867": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1868": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "ADD",
      "path": "0"
    },
    "1869": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1870": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1872": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1873": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1874": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "ADD",
      "path": "0"
    },
    "1875": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1876": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1877": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "offset": [
        1488,
        1547
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1878": {
      "op": "POP"
    },
    "1879": {
      "offset": [
        1488,
        1547
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1880": {
      "op": "POP"
    },
    "1881": {
      "offset": [
        1488,
        1547
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1882": {
      "fn": "BadgerGeyser.getDistributionTokens",
      "jump": "o",
      "offset": [
        1488,
        1547
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1883": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        3497,
        3582
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1884": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        3547,
        3551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1886": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        3497,
        3582
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1887": {
      "fn": "BadgerGeyser.supportsHistory",
      "jump": "o",
      "offset": [
        3497,
        3582
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1888": {
      "offset": [
        1294,
        1320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1889": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        1294,
        1320
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x66"
    },
    "1891": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        1294,
        1320
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1892": {
      "fn": "BadgerGeyser.supportsHistory",
      "offset": [
        1294,
        1320
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1893": {
      "fn": "BadgerGeyser.supportsHistory",
      "jump": "o",
      "offset": [
        1294,
        1320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1894": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6116,
        6238
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1895": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6180,
        6192
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 25,
      "value": "0x76E"
    },
    "1898": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6180,
        6190
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC33"
    },
    "1901": {
      "fn": "BadgerGeyser.addDistributionToken",
      "jump": "i",
      "offset": [
        6180,
        6192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1902": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6180,
        6192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1903": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6202,
        6231
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 26,
      "value": "0x485"
    },
    "1906": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6202,
        6220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x68"
    },
    "1908": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6225,
        6230
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1909": {
      "fn": "BadgerGeyser.addDistributionToken",
      "offset": [
        6202,
        6224
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9E"
    },
    "1912": {
      "fn": "BadgerGeyser.addDistributionToken",
      "jump": "i",
      "offset": [
        6202,
        6231
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1913": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1914": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4398,
        4405
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1916": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4424,
        4436
      ],
      "op": "DUP3",
      "path": "31",
      "statement": 27
    },
    "1917": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4424,
        4436
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1918": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4424,
        4436
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1919": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4424,
        4430
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x33"
    },
    "1921": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4424,
        4436
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "1923": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4424,
        4436
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1924": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4424,
        4436
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1926": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4424,
        4436
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1927": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4424,
        4436
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1928": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4424,
        4454
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x791"
    },
    "1931": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4424,
        4454
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1932": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4448,
        4453
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1933": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4424,
        4447
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xC27"
    },
    "1936": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "jump": "i",
      "offset": [
        4424,
        4454
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1937": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4424,
        4454
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1938": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4417,
        4454
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1939": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4417,
        4454
      ],
      "op": "POP",
      "path": "31"
    },
    "1940": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1941": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "SWAP3",
      "path": "31"
    },
    "1942": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "1943": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "POP",
      "path": "31"
    },
    "1944": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "offset": [
        4325,
        4461
      ],
      "op": "POP",
      "path": "31"
    },
    "1945": {
      "fn": "AccessControlUpgradeable.getRoleMember",
      "jump": "o",
      "offset": [
        4325,
        4461
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1946": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3310,
        3447
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1947": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3379,
        3383
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1949": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3402,
        3414
      ],
      "op": "DUP3",
      "path": "31",
      "statement": 28
    },
    "1950": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3402,
        3414
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1951": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3402,
        3414
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1952": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3402,
        3408
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x33"
    },
    "1954": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3402,
        3414
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "1956": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3402,
        3414
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "1957": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3402,
        3414
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "1959": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3402,
        3414
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1960": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3402,
        3414
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "1961": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3402,
        3440
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x791"
    },
    "1964": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3402,
        3440
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1965": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3432,
        3439
      ],
      "op": "DUP4",
      "path": "31"
    },
    "1966": {
      "fn": "AccessControlUpgradeable.hasRole",
      "offset": [
        3402,
        3431
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x8AC"
    },
    "1969": {
      "fn": "AccessControlUpgradeable.hasRole",
      "jump": "i",
      "offset": [
        3402,
        3440
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1970": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        4172,
        4289
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1971": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        4229,
        4236
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1973": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        4255,
        4282
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 29,
      "value": "0x7BE"
    },
    "1976": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        4255,
        4273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x68"
    },
    "1978": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        4255,
        4280
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1C"
    },
    "1981": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "jump": "i",
      "offset": [
        4255,
        4282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1982": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        4255,
        4282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1983": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        4248,
        4282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1984": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        4248,
        4282
      ],
      "op": "POP",
      "path": "0"
    },
    "1985": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        4172,
        4289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1986": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "jump": "o",
      "offset": [
        4172,
        4289
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1987": {
      "offset": [
        1126,
        1156
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1988": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        1126,
        1156
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x65"
    },
    "1990": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        1126,
        1156
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1991": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "offset": [
        1126,
        1156
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1992": {
      "fn": "BadgerGeyser.getNumDistributionTokens",
      "jump": "o",
      "offset": [
        1126,
        1156
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1993": {
      "fn": "BadgerGeyser.getStakingToken",
      "offset": [
        3653,
        3757
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1994": {
      "fn": "BadgerGeyser.getStakingToken",
      "offset": [
        3737,
        3750
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0x67"
    },
    "1996": {
      "fn": "BadgerGeyser.getStakingToken",
      "offset": [
        3737,
        3750
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2003": {
      "op": "SHL"
    },
    "2004": {
      "op": "SUB"
    },
    "2005": {
      "fn": "BadgerGeyser.getStakingToken",
      "offset": [
        3737,
        3750
      ],
      "op": "AND",
      "path": "0"
    },
    "2006": {
      "fn": "BadgerGeyser.getStakingToken",
      "offset": [
        3653,
        3757
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2007": {
      "fn": "BadgerGeyser.getStakingToken",
      "jump": "o",
      "offset": [
        3653,
        3757
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2008": {
      "offset": [
        2087,
        2136
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2009": {
      "offset": [
        2132,
        2136
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "2011": {
      "offset": [
        2087,
        2136
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2012": {
      "fn": "BadgerGeyser.getStakingToken",
      "jump": "o",
      "offset": [
        2087,
        2136
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2013": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        5918,
        6056
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2014": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        5991,
        6008
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 31,
      "value": "0x7E5"
    },
    "2017": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        5991,
        6006
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97A"
    },
    "2020": {
      "fn": "BadgerGeyser.unstake",
      "jump": "i",
      "offset": [
        5991,
        6008
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2021": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        5991,
        6008
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2022": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        6018,
        6049
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 32,
      "value": "0x3F9"
    },
    "2025": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        6030,
        6040
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2026": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        6042,
        6048
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2027": {
      "fn": "BadgerGeyser.unstake",
      "offset": [
        6018,
        6029
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5A"
    },
    "2030": {
      "fn": "BadgerGeyser.unstake",
      "jump": "i",
      "offset": [
        6018,
        6049
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2031": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3615,
        3740
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2032": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3678,
        3685
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "2034": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3704,
        3716
      ],
      "op": "DUP2",
      "path": "31",
      "statement": 33
    },
    "2035": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3704,
        3716
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2036": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3704,
        3716
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2037": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3704,
        3710
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x33"
    },
    "2039": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3704,
        3716
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "2041": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3704,
        3716
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2042": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3704,
        3716
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "2044": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3704,
        3716
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2045": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3704,
        3716
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "2046": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3704,
        3733
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x794"
    },
    "2049": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3704,
        3733
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2050": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "offset": [
        3704,
        3731
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xC1C"
    },
    "2053": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "jump": "i",
      "offset": [
        3704,
        3733
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2054": {
      "offset": [
        1213,
        1287
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2055": {
      "offset": [
        1257,
        1287
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4BF6F2CDCC8AD6C087A7A4FBECF46150B3686B71387234CAC2B3E2E6DC70E345"
    },
    "2088": {
      "offset": [
        1213,
        1287
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2089": {
      "fn": "AccessControlUpgradeable.getRoleMemberCount",
      "jump": "o",
      "offset": [
        1213,
        1287
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2090": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5461,
        5687
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2091": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5553,
        5565
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 34,
      "value": "0x0"
    },
    "2093": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5553,
        5565
      ],
      "op": "DUP3",
      "path": "31"
    },
    "2094": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5553,
        5565
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2095": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5553,
        5565
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2096": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5553,
        5559
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x33"
    },
    "2098": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5553,
        5565
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "2100": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5553,
        5565
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2101": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5553,
        5565
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "2103": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5553,
        5565
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2104": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5553,
        5565
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "2105": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5553,
        5575
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x2"
    },
    "2107": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5553,
        5575
      ],
      "op": "ADD",
      "path": "31"
    },
    "2108": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5553,
        5575
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "2109": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5545,
        5590
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x848"
    },
    "2112": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5545,
        5590
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2113": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5577,
        5589
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x314"
    },
    "2116": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5577,
        5587
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA98"
    },
    "2119": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "jump": "i",
      "offset": [
        5577,
        5589
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2120": {
      "branch": 103,
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5545,
        5590
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2121": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5537,
        5643
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x64F"
    },
    "2124": {
      "branch": 103,
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5537,
        5643
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "2125": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5537,
        5643
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "2127": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5537,
        5643
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "2128": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2134": {
      "op": "SHL"
    },
    "2135": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5537,
        5643
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2136": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5537,
        5643
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2137": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5537,
        5643
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x4"
    },
    "2139": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5537,
        5643
      ],
      "op": "ADD",
      "path": "31"
    },
    "2140": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5537,
        5643
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x3A4"
    },
    "2143": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5537,
        5643
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2144": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "offset": [
        5537,
        5643
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1774"
    },
    "2147": {
      "fn": "AccessControlUpgradeable.revokeRole",
      "jump": "i",
      "offset": [
        5537,
        5643
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2148": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3246,
        3366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2149": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3301,
        3339
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 35,
      "value": "0x88E"
    },
    "2152": {
      "offset": [
        1257,
        1287
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4BF6F2CDCC8AD6C087A7A4FBECF46150B3686B71387234CAC2B3E2E6DC70E345"
    },
    "2185": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3328,
        3338
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2186": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3301,
        3308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79A"
    },
    "2189": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "jump": "i",
      "offset": [
        3301,
        3339
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2190": {
      "branch": 94,
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3301,
        3339
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2191": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3293,
        3359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AA"
    },
    "2194": {
      "branch": 94,
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3293,
        3359
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2195": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3293,
        3359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2197": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3293,
        3359
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2198": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2204": {
      "op": "SHL"
    },
    "2205": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3293,
        3359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2206": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3293,
        3359
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2207": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3293,
        3359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2209": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3293,
        3359
      ],
      "op": "ADD",
      "path": "0"
    },
    "2210": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3293,
        3359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A4"
    },
    "2213": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3293,
        3359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2214": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3293,
        3359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1624"
    },
    "2217": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "jump": "i",
      "offset": [
        3293,
        3359
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2218": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "offset": [
        3293,
        3359
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2219": {
      "fn": "BadgerGeyser._onlyTokenLocker",
      "jump": "o",
      "offset": [
        3246,
        3366
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2220": {
      "fn": "EnumerableSetUpgradeable.contains",
      "offset": [
        5412,
        5568
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2221": {
      "fn": "EnumerableSetUpgradeable.contains",
      "offset": [
        5492,
        5496
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2223": {
      "fn": "EnumerableSetUpgradeable.contains",
      "offset": [
        5515,
        5561
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 36,
      "value": "0x791"
    },
    "2226": {
      "fn": "EnumerableSetUpgradeable.contains",
      "offset": [
        5525,
        5528
      ],
      "op": "DUP4",
      "path": "42"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2233": {
      "op": "SHL"
    },
    "2234": {
      "op": "SUB"
    },
    "2235": {
      "fn": "EnumerableSetUpgradeable.contains",
      "offset": [
        5545,
        5559
      ],
      "op": "DUP5",
      "path": "42"
    },
    "2236": {
      "fn": "EnumerableSetUpgradeable.contains",
      "offset": [
        5545,
        5559
      ],
      "op": "AND",
      "path": "42"
    },
    "2237": {
      "fn": "EnumerableSetUpgradeable.contains",
      "offset": [
        5515,
        5524
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xD56"
    },
    "2240": {
      "fn": "EnumerableSetUpgradeable.contains",
      "jump": "i",
      "offset": [
        5515,
        5561
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2241": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9078,
        9593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2242": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9233,
        9263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "2245": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9233,
        9263
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11D7"
    },
    "2248": {
      "fn": "BadgerGeyser._signalTokenLock",
      "jump": "i",
      "offset": [
        9233,
        9263
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2249": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9233,
        9263
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2250": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9273,
        9304
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 37
    },
    "2251": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9273,
        9304
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2252": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9273,
        9304
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2253": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9334,
        9360
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 38,
      "value": "0x8D6"
    },
    "2256": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9334,
        9343
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2257": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9348,
        9359
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2258": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9334,
        9347
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6E"
    },
    "2261": {
      "fn": "BadgerGeyser._signalTokenLock",
      "jump": "i",
      "offset": [
        9334,
        9360
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2262": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9334,
        9360
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2263": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9314,
        9331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2265": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9314,
        9331
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2266": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9314,
        9331
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2267": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9314,
        9331
      ],
      "op": "ADD",
      "path": "0"
    },
    "2268": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9314,
        9360
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2269": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9314,
        9360
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2270": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9314,
        9360
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2271": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9370,
        9390
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x40"
    },
    "2273": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9370,
        9390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2274": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9370,
        9390
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2275": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9370,
        9390
      ],
      "op": "ADD",
      "path": "0"
    },
    "2276": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9370,
        9404
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2277": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9370,
        9404
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2278": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9370,
        9404
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2279": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9414,
        9432
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x60"
    },
    "2281": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9414,
        9432
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2282": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9414,
        9432
      ],
      "op": "ADD",
      "path": "0"
    },
    "2283": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9414,
        9444
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2284": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9414,
        9444
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2285": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9414,
        9444
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2292": {
      "op": "SHL"
    },
    "2293": {
      "op": "SUB"
    },
    "2294": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9476
      ],
      "op": "DUP11",
      "path": "0",
      "statement": 41
    },
    "2295": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9476
      ],
      "op": "AND",
      "path": "0"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2298": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9476
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2299": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9476
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2300": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9476
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2301": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6B"
    },
    "2303": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9476
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2304": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9476
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2305": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9476
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2306": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9476
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2307": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9476
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2308": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2309": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2310": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2312": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2313": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2314": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "ADD",
      "path": "0"
    },
    "2315": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2316": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2317": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2318": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2319": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2320": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2321": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2322": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2323": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2324": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2325": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2326": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2328": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2329": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2330": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "MUL",
      "path": "0"
    },
    "2331": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "ADD",
      "path": "0"
    },
    "2332": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2333": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2334": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2335": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2336": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2337": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2338": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2339": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "ADD",
      "path": "0"
    },
    "2340": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2341": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2342": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2343": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2344": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2345": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2347": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2348": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "ADD",
      "path": "0"
    },
    "2349": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2350": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2351": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2353": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2354": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2355": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "ADD",
      "path": "0"
    },
    "2356": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2357": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2358": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2359": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9454,
        9491
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2360": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9507,
        9586
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 42
    },
    "2361": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9578,
        9581
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2362": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9578,
        9581
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2363": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9507,
        9586
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x739472339D528D689EB4B6825D2D76852FD8870676F0B8A4BBB682D037F0FD6E"
    },
    "2396": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9507,
        9586
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2397": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9507,
        9586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96B"
    },
    "2400": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9507,
        9586
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2401": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9527,
        9533
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2402": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9527,
        9533
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2403": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9393,
        9404
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2404": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9393,
        9404
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2405": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9435,
        9444
      ],
      "op": "DUP10",
      "path": "0"
    },
    "2406": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9435,
        9444
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2407": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9507,
        9586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A91"
    },
    "2410": {
      "fn": "BadgerGeyser._signalTokenLock",
      "jump": "i",
      "offset": [
        9507,
        9586
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2411": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9507,
        9586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2412": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9507,
        9586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2414": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9507,
        9586
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2415": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9507,
        9586
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2416": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9507,
        9586
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2417": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9507,
        9586
      ],
      "op": "SUB",
      "path": "0"
    },
    "2418": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9507,
        9586
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2419": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9507,
        9586
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2420": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9078,
        9593
      ],
      "op": "POP",
      "path": "0"
    },
    "2421": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9078,
        9593
      ],
      "op": "POP",
      "path": "0"
    },
    "2422": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9078,
        9593
      ],
      "op": "POP",
      "path": "0"
    },
    "2423": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9078,
        9593
      ],
      "op": "POP",
      "path": "0"
    },
    "2424": {
      "fn": "BadgerGeyser._signalTokenLock",
      "offset": [
        9078,
        9593
      ],
      "op": "POP",
      "path": "0"
    },
    "2425": {
      "fn": "BadgerGeyser._signalTokenLock",
      "jump": "o",
      "offset": [
        9078,
        9593
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2426": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        2999,
        3125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2427": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3060,
        3075
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 43,
      "value": "0x65"
    },
    "2429": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3060,
        3075
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2430": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3053,
        3056
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2431": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3053,
        3075
      ],
      "op": "LT",
      "path": "0"
    },
    "2432": {
      "branch": 95,
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3053,
        3075
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2433": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3045,
        3118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AA"
    },
    "2436": {
      "branch": 95,
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3045,
        3118
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2437": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3045,
        3118
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2439": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3045,
        3118
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2440": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2446": {
      "op": "SHL"
    },
    "2447": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3045,
        3118
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2448": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3045,
        3118
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2449": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3045,
        3118
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2451": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3045,
        3118
      ],
      "op": "ADD",
      "path": "0"
    },
    "2452": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3045,
        3118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A4"
    },
    "2455": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3045,
        3118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2456": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "offset": [
        3045,
        3118
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E6"
    },
    "2459": {
      "fn": "BadgerGeyser._onlyAfterStart",
      "jump": "i",
      "offset": [
        3045,
        3118
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2460": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7618,
        8243
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2461": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7756,
        7757
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 44,
      "value": "0x0"
    },
    "2463": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7747,
        7753
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2464": {
      "branch": 96,
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7747,
        7757
      ],
      "op": "GT",
      "path": "0"
    },
    "2465": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7739,
        7796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9BC"
    },
    "2468": {
      "branch": 96,
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7739,
        7796
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2469": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7739,
        7796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2471": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7739,
        7796
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2472": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2478": {
      "op": "SHL"
    },
    "2479": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7739,
        7796
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2480": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7739,
        7796
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2481": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7739,
        7796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2483": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7739,
        7796
      ],
      "op": "ADD",
      "path": "0"
    },
    "2484": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7739,
        7796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A4"
    },
    "2487": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7739,
        7796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2488": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7739,
        7796
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C4"
    },
    "2491": {
      "fn": "BadgerGeyser._stakeFor",
      "jump": "i",
      "offset": [
        7739,
        7796
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2492": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7739,
        7796
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2499": {
      "op": "SHL"
    },
    "2500": {
      "op": "SUB"
    },
    "2501": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7814,
        7839
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 45
    },
    "2502": {
      "branch": 97,
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7814,
        7839
      ],
      "op": "AND",
      "path": "0"
    },
    "2503": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7806,
        7885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E2"
    },
    "2506": {
      "branch": 97,
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7806,
        7885
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2507": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7806,
        7885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2509": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7806,
        7885
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2510": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2516": {
      "op": "SHL"
    },
    "2517": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7806,
        7885
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2518": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7806,
        7885
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2519": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7806,
        7885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2521": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7806,
        7885
      ],
      "op": "ADD",
      "path": "0"
    },
    "2522": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7806,
        7885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A4"
    },
    "2525": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7806,
        7885
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2526": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7806,
        7885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1854"
    },
    "2529": {
      "fn": "BadgerGeyser._stakeFor",
      "jump": "i",
      "offset": [
        7806,
        7885
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2530": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7806,
        7885
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2537": {
      "op": "SHL"
    },
    "2538": {
      "op": "SUB"
    },
    "2539": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7977
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 46
    },
    "2540": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7977
      ],
      "op": "AND",
      "path": "0"
    },
    "2541": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2543": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7977
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2544": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7977
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2545": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7977
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2546": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6A"
    },
    "2548": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2550": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7977
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2551": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2553": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7977
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2554": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7977
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2555": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7977
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2556": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7989
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA05"
    },
    "2559": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2560": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7982,
        7988
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2561": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6E"
    },
    "2564": {
      "fn": "BadgerGeyser._stakeFor",
      "jump": "i",
      "offset": [
        7953,
        7989
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2565": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7953,
        7989
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2572": {
      "op": "SHL"
    },
    "2573": {
      "op": "SUB"
    },
    "2574": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7926,
        7950
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2575": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7926,
        7950
      ],
      "op": "AND",
      "path": "0"
    },
    "2576": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7926,
        7950
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2578": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7926,
        7950
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2579": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7926,
        7950
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2580": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7926,
        7950
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2581": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7926,
        7937
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6A"
    },
    "2583": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7926,
        7950
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2585": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7926,
        7950
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2586": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7926,
        7950
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2588": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7926,
        7950
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2589": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7926,
        7950
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2590": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7926,
        7989
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2591": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8046,
        8057
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 47,
      "value": "0x66"
    },
    "2593": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8046,
        8057
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2594": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8046,
        8069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2B"
    },
    "2597": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8046,
        8069
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2598": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8062,
        8068
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2599": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8046,
        8061
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6E"
    },
    "2602": {
      "fn": "BadgerGeyser._stakeFor",
      "jump": "i",
      "offset": [
        8046,
        8069
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2603": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8046,
        8069
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2604": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8032,
        8043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x66"
    },
    "2606": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8032,
        8069
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2607": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8080,
        8093
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 48,
      "value": "0x67"
    },
    "2609": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8080,
        8093
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2610": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8080,
        8141
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA46"
    },
    "2613": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8080,
        8141
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2620": {
      "op": "SHL"
    },
    "2621": {
      "op": "SUB"
    },
    "2622": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8080,
        8093
      ],
      "op": "AND",
      "path": "0"
    },
    "2623": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8111,
        8117
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2624": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8127,
        8131
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2625": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8134,
        8140
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2626": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8080,
        8110
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD93"
    },
    "2629": {
      "fn": "BadgerGeyser._stakeFor",
      "jump": "i",
      "offset": [
        8080,
        8141
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2630": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8080,
        8141
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2631": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8219,
        8231
      ],
      "op": "NUMBER",
      "path": "0",
      "statement": 49
    },
    "2632": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8214,
        8217
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2633": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8164,
        8175
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2640": {
      "op": "SHL"
    },
    "2641": {
      "op": "SUB"
    },
    "2642": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "AND",
      "path": "0"
    },
    "2643": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x70462F09E1FCDD39EE7DBE9165C6A369557B03057A6D820C84A600208B9B26D"
    },
    "2676": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8177,
        8183
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2677": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8185,
        8212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7D"
    },
    "2680": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8200,
        8211
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2681": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8185,
        8199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x659"
    },
    "2684": {
      "fn": "BadgerGeyser._stakeFor",
      "jump": "i",
      "offset": [
        8185,
        8212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2685": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8185,
        8212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2686": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2688": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2689": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8B"
    },
    "2692": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2693": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2694": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2695": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A59"
    },
    "2698": {
      "fn": "BadgerGeyser._stakeFor",
      "jump": "i",
      "offset": [
        8157,
        8236
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2699": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2700": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2702": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2703": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2704": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2705": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "SUB",
      "path": "0"
    },
    "2706": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2707": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        8157,
        8236
      ],
      "op": "LOG4",
      "path": "0"
    },
    "2708": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7618,
        8243
      ],
      "op": "POP",
      "path": "0"
    },
    "2709": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7618,
        8243
      ],
      "op": "POP",
      "path": "0"
    },
    "2710": {
      "fn": "BadgerGeyser._stakeFor",
      "offset": [
        7618,
        8243
      ],
      "op": "POP",
      "path": "0"
    },
    "2711": {
      "fn": "BadgerGeyser._stakeFor",
      "jump": "o",
      "offset": [
        7618,
        8243
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2712": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        820,
        924
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "2713": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        907,
        917
      ],
      "op": "CALLER",
      "path": "30",
      "statement": 50
    },
    "2714": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        820,
        924
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "2715": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "o",
      "offset": [
        820,
        924
      ],
      "op": "JUMP",
      "path": "30"
    },
    "2716": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7385,
        7569
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2717": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7458,
        7470
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "2719": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7458,
        7470
      ],
      "op": "DUP3",
      "path": "31"
    },
    "2720": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7458,
        7470
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2721": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7458,
        7470
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2722": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7458,
        7464
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x33"
    },
    "2724": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7458,
        7470
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "2726": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7458,
        7470
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "2727": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7458,
        7470
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "2729": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7458,
        7470
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2730": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7458,
        7470
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "2731": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7458,
        7491
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xAB4"
    },
    "2734": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7458,
        7491
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2735": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7483,
        7490
      ],
      "op": "DUP3",
      "path": "31"
    },
    "2736": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7458,
        7482
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xB9E"
    },
    "2739": {
      "fn": "AccessControlUpgradeable._grantRole",
      "jump": "i",
      "offset": [
        7458,
        7491
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2740": {
      "branch": 104,
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7458,
        7491
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2741": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7454,
        7563
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "2742": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7454,
        7563
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x485"
    },
    "2745": {
      "branch": 104,
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7454,
        7563
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "2746": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7539,
        7551
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 51,
      "value": "0xAC1"
    },
    "2749": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7539,
        7549
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA98"
    },
    "2752": {
      "fn": "AccessControlUpgradeable._grantRole",
      "jump": "i",
      "offset": [
        7539,
        7551
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2753": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7539,
        7551
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2760": {
      "op": "SHL"
    },
    "2761": {
      "op": "SUB"
    },
    "2762": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7512,
        7552
      ],
      "op": "AND",
      "path": "31"
    },
    "2763": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7530,
        7537
      ],
      "op": "DUP2",
      "path": "31"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2770": {
      "op": "SHL"
    },
    "2771": {
      "op": "SUB"
    },
    "2772": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7512,
        7552
      ],
      "op": "AND",
      "path": "31"
    },
    "2773": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7524,
        7528
      ],
      "op": "DUP4",
      "path": "31"
    },
    "2774": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7512,
        7552
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "2807": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7512,
        7552
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "2809": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7512,
        7552
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "2810": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7512,
        7552
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "2812": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7512,
        7552
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "2813": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7512,
        7552
      ],
      "op": "DUP1",
      "path": "31"
    },
    "2814": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7512,
        7552
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "2815": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7512,
        7552
      ],
      "op": "SUB",
      "path": "31"
    },
    "2816": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7512,
        7552
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2817": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7512,
        7552
      ],
      "op": "LOG4",
      "path": "31"
    },
    "2818": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7385,
        7569
      ],
      "op": "POP",
      "path": "31"
    },
    "2819": {
      "fn": "AccessControlUpgradeable._grantRole",
      "offset": [
        7385,
        7569
      ],
      "op": "POP",
      "path": "31"
    },
    "2820": {
      "fn": "AccessControlUpgradeable._grantRole",
      "jump": "o",
      "offset": [
        7385,
        7569
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2821": {
      "fn": "Initializable._isConstructor",
      "offset": [
        1866,
        2459
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "2822": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2302,
        2306
      ],
      "op": "ADDRESS",
      "path": "36"
    },
    "2823": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2410,
        2427
      ],
      "op": "EXTCODESIZE",
      "path": "36"
    },
    "2824": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2445,
        2452
      ],
      "op": "ISZERO",
      "path": "36",
      "statement": 52
    },
    "2825": {
      "fn": "Initializable._isConstructor",
      "offset": [
        1866,
        2459
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "2826": {
      "fn": "Initializable._isConstructor",
      "jump": "o",
      "offset": [
        1866,
        2459
      ],
      "op": "JUMP",
      "path": "36"
    },
    "2827": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1589,
        1727
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2828": {
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "2830": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1426,
        1439
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "2831": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x100"
    },
    "2834": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1426,
        1439
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "2835": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1426,
        1439
      ],
      "op": "DIV",
      "path": "36"
    },
    "2836": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xFF"
    },
    "2838": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1426,
        1439
      ],
      "op": "AND",
      "path": "36"
    },
    "2839": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1426,
        1439
      ],
      "op": "DUP1",
      "path": "36"
    },
    "2840": {
      "offset": [
        1426,
        1459
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xB24"
    },
    "2843": {
      "offset": [
        1426,
        1459
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "2844": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1426,
        1459
      ],
      "op": "POP",
      "path": "36"
    },
    "2845": {
      "offset": [
        1443,
        1459
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xB24"
    },
    "2848": {
      "offset": [
        1443,
        1457
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xB05"
    },
    "2851": {
      "jump": "i",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMP",
      "path": "36"
    },
    "2852": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "2853": {
      "offset": [
        1426,
        1476
      ],
      "op": "DUP1",
      "path": "36"
    },
    "2854": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1426,
        1476
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xB32"
    },
    "2857": {
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "2858": {
      "op": "POP"
    },
    "2859": {
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "2861": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1464,
        1476
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "2862": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xFF"
    },
    "2864": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1464,
        1476
      ],
      "op": "AND",
      "path": "36"
    },
    "2865": {
      "offset": [
        1463,
        1476
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "2866": {
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "2867": {
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xB4E"
    },
    "2870": {
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "2871": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "2873": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1418,
        1527
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "2874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2880": {
      "op": "SHL"
    },
    "2881": {
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "36"
    },
    "2882": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "2883": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "2885": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "36"
    },
    "2886": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x3A4"
    },
    "2889": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "2890": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1806"
    },
    "2893": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "jump": "i",
      "offset": [
        1418,
        1527
      ],
      "op": "JUMP",
      "path": "36"
    },
    "2894": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "2895": {
      "offset": [
        1538,
        1557
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "2897": {
      "offset": [
        1561,
        1574
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "2898": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x100"
    },
    "2901": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1561,
        1574
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "2902": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1561,
        1574
      ],
      "op": "DIV",
      "path": "36"
    },
    "2903": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xFF"
    },
    "2905": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1561,
        1574
      ],
      "op": "AND",
      "path": "36"
    },
    "2906": {
      "offset": [
        1560,
        1574
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "2907": {
      "offset": [
        1584,
        1682
      ],
      "op": "DUP1",
      "path": "36"
    },
    "2908": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1584,
        1682
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "2909": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1584,
        1682
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xB79"
    },
    "2912": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1584,
        1682
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "2913": {
      "offset": [
        1618,
        1631
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "2915": {
      "offset": [
        1618,
        1638
      ],
      "op": "DUP1",
      "path": "36"
    },
    "2916": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1618,
        1638
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2919": {
      "op": "NOT"
    },
    "2920": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "2923": {
      "op": "NOT"
    },
    "2924": {
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "2925": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "2926": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1618,
        1638
      ],
      "op": "AND",
      "path": "36"
    },
    "2927": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1618,
        1638
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x100"
    },
    "2930": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1618,
        1638
      ],
      "op": "OR",
      "path": "36"
    },
    "2931": {
      "offset": [
        1652,
        1671
      ],
      "op": "AND",
      "path": "36"
    },
    "2932": {
      "offset": [
        1634,
        1638
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1"
    },
    "2934": {
      "offset": [
        1652,
        1671
      ],
      "op": "OR",
      "path": "36"
    },
    "2935": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1652,
        1671
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "2936": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1652,
        1671
      ],
      "op": "SSTORE",
      "path": "36"
    },
    "2937": {
      "offset": [
        1584,
        1682
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "2938": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1652,
        1678
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 53,
      "value": "0xB81"
    },
    "2941": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1652,
        1676
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xDEB"
    },
    "2944": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "jump": "i",
      "offset": [
        1652,
        1678
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2945": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1652,
        1678
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2946": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1688,
        1720
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 54,
      "value": "0xB89"
    },
    "2949": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1688,
        1718
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xDEB"
    },
    "2952": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "jump": "i",
      "offset": [
        1688,
        1720
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2953": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1688,
        1720
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2954": {
      "offset": [
        1708,
        1722
      ],
      "op": "DUP1",
      "path": "36"
    },
    "2955": {
      "offset": [
        1704,
        1770
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "2956": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1704,
        1770
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xB9B"
    },
    "2959": {
      "offset": [
        1704,
        1770
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "2960": {
      "offset": [
        1754,
        1759
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "2962": {
      "offset": [
        1738,
        1759
      ],
      "op": "DUP1",
      "path": "36"
    },
    "2963": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1738,
        1759
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "2964": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "2967": {
      "op": "NOT"
    },
    "2968": {
      "offset": [
        1738,
        1759
      ],
      "op": "AND",
      "path": "36"
    },
    "2969": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1738,
        1759
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "2970": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1738,
        1759
      ],
      "op": "SSTORE",
      "path": "36"
    },
    "2971": {
      "offset": [
        1704,
        1770
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "2972": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "offset": [
        1589,
        1727
      ],
      "op": "POP",
      "path": "31"
    },
    "2973": {
      "fn": "AccessControlUpgradeable.__AccessControl_init",
      "jump": "o",
      "offset": [
        1589,
        1727
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2974": {
      "fn": "EnumerableSetUpgradeable.add",
      "offset": [
        4875,
        5016
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2975": {
      "fn": "EnumerableSetUpgradeable.add",
      "offset": [
        4945,
        4949
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2977": {
      "fn": "EnumerableSetUpgradeable.add",
      "offset": [
        4968,
        5009
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 55,
      "value": "0x791"
    },
    "2980": {
      "fn": "EnumerableSetUpgradeable.add",
      "offset": [
        4973,
        4976
      ],
      "op": "DUP4",
      "path": "42"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2987": {
      "op": "SHL"
    },
    "2988": {
      "op": "SUB"
    },
    "2989": {
      "fn": "EnumerableSetUpgradeable.add",
      "offset": [
        4993,
        5007
      ],
      "op": "DUP5",
      "path": "42"
    },
    "2990": {
      "fn": "EnumerableSetUpgradeable.add",
      "offset": [
        4993,
        5007
      ],
      "op": "AND",
      "path": "42"
    },
    "2991": {
      "fn": "EnumerableSetUpgradeable.add",
      "offset": [
        4968,
        4972
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xE6C"
    },
    "2994": {
      "fn": "EnumerableSetUpgradeable.add",
      "jump": "i",
      "offset": [
        4968,
        5009
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2995": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7575,
        7763
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2996": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7649,
        7661
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "2998": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7649,
        7661
      ],
      "op": "DUP3",
      "path": "31"
    },
    "2999": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7649,
        7661
      ],
      "op": "DUP2",
      "path": "31"
    },
    "3000": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7649,
        7661
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "3001": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7649,
        7655
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x33"
    },
    "3003": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7649,
        7661
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x20"
    },
    "3005": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7649,
        7661
      ],
      "op": "MSTORE",
      "path": "31"
    },
    "3006": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7649,
        7661
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "3008": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7649,
        7661
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3009": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7649,
        7661
      ],
      "op": "KECCAK256",
      "path": "31"
    },
    "3010": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7649,
        7685
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xBCB"
    },
    "3013": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7649,
        7685
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3014": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7677,
        7684
      ],
      "op": "DUP3",
      "path": "31"
    },
    "3015": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7649,
        7676
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xEB6"
    },
    "3018": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "jump": "i",
      "offset": [
        7649,
        7685
      ],
      "op": "JUMP",
      "path": "31"
    },
    "3019": {
      "branch": 105,
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7649,
        7685
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "3020": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7645,
        7757
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "3021": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7645,
        7757
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x485"
    },
    "3024": {
      "branch": 105,
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7645,
        7757
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "3025": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7733,
        7745
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 56,
      "value": "0xBD8"
    },
    "3028": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7733,
        7743
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA98"
    },
    "3031": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "jump": "i",
      "offset": [
        7733,
        7745
      ],
      "op": "JUMP",
      "path": "31"
    },
    "3032": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7733,
        7745
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3039": {
      "op": "SHL"
    },
    "3040": {
      "op": "SUB"
    },
    "3041": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7706,
        7746
      ],
      "op": "AND",
      "path": "31"
    },
    "3042": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7724,
        7731
      ],
      "op": "DUP2",
      "path": "31"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3049": {
      "op": "SHL"
    },
    "3050": {
      "op": "SUB"
    },
    "3051": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7706,
        7746
      ],
      "op": "AND",
      "path": "31"
    },
    "3052": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7718,
        7722
      ],
      "op": "DUP4",
      "path": "31"
    },
    "3053": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7706,
        7746
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "3086": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7706,
        7746
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "3088": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7706,
        7746
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "3089": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7706,
        7746
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x40"
    },
    "3091": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7706,
        7746
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "3092": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7706,
        7746
      ],
      "op": "DUP1",
      "path": "31"
    },
    "3093": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7706,
        7746
      ],
      "op": "SWAP2",
      "path": "31"
    },
    "3094": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7706,
        7746
      ],
      "op": "SUB",
      "path": "31"
    },
    "3095": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7706,
        7746
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "3096": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7706,
        7746
      ],
      "op": "LOG4",
      "path": "31"
    },
    "3097": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7575,
        7763
      ],
      "op": "POP",
      "path": "31"
    },
    "3098": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "offset": [
        7575,
        7763
      ],
      "op": "POP",
      "path": "31"
    },
    "3099": {
      "fn": "AccessControlUpgradeable._revokeRole",
      "jump": "o",
      "offset": [
        7575,
        7763
      ],
      "op": "JUMP",
      "path": "31"
    },
    "3100": {
      "fn": "EnumerableSetUpgradeable.length",
      "offset": [
        5649,
        5764
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3101": {
      "fn": "EnumerableSetUpgradeable.length",
      "offset": [
        5712,
        5719
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3103": {
      "fn": "EnumerableSetUpgradeable.length",
      "offset": [
        5738,
        5757
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 57,
      "value": "0x794"
    },
    "3106": {
      "fn": "EnumerableSetUpgradeable.length",
      "offset": [
        5746,
        5749
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3107": {
      "fn": "EnumerableSetUpgradeable.length",
      "offset": [
        5738,
        5745
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xECB"
    },
    "3110": {
      "fn": "EnumerableSetUpgradeable.length",
      "jump": "i",
      "offset": [
        5738,
        5757
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3111": {
      "fn": "EnumerableSetUpgradeable.at",
      "offset": [
        6096,
        6243
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3112": {
      "fn": "EnumerableSetUpgradeable.at",
      "offset": [
        6170,
        6177
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3114": {
      "fn": "EnumerableSetUpgradeable.at",
      "offset": [
        6212,
        6234
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 58,
      "value": "0x791"
    },
    "3117": {
      "fn": "EnumerableSetUpgradeable.at",
      "offset": [
        6216,
        6219
      ],
      "op": "DUP4",
      "path": "42"
    },
    "3118": {
      "fn": "EnumerableSetUpgradeable.at",
      "offset": [
        6228,
        6233
      ],
      "op": "DUP4",
      "path": "42"
    },
    "3119": {
      "fn": "EnumerableSetUpgradeable.at",
      "offset": [
        6212,
        6215
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xECF"
    },
    "3122": {
      "fn": "EnumerableSetUpgradeable.at",
      "jump": "i",
      "offset": [
        6212,
        6234
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3123": {
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3131,
        3240
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3124": {
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3180,
        3219
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 59,
      "value": "0xC3E"
    },
    "3127": {
      "offset": [
        2132,
        2136
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "3129": {
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3208,
        3218
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3130": {
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3180,
        3187
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79A"
    },
    "3133": {
      "fn": "BadgerGeyser._onlyAdmin",
      "jump": "i",
      "offset": [
        3180,
        3219
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3134": {
      "branch": 98,
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3180,
        3219
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3135": {
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3172,
        3233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AA"
    },
    "3138": {
      "branch": 98,
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3172,
        3233
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3139": {
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3172,
        3233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3141": {
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3172,
        3233
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3142": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3148": {
      "op": "SHL"
    },
    "3149": {
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3172,
        3233
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3150": {
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3172,
        3233
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3151": {
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3172,
        3233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3153": {
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3172,
        3233
      ],
      "op": "ADD",
      "path": "0"
    },
    "3154": {
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3172,
        3233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A4"
    },
    "3157": {
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3172,
        3233
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3158": {
      "fn": "BadgerGeyser._onlyAdmin",
      "offset": [
        3172,
        3233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15BF"
    },
    "3161": {
      "fn": "BadgerGeyser._onlyAdmin",
      "jump": "i",
      "offset": [
        3172,
        3233
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3162": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8475,
        9072
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3163": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8580,
        8581
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 60,
      "value": "0x0"
    },
    "3165": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8571,
        8577
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3166": {
      "branch": 99,
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8571,
        8581
      ],
      "op": "GT",
      "path": "0"
    },
    "3167": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8563,
        8622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7A"
    },
    "3170": {
      "branch": 99,
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8563,
        8622
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3171": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8563,
        8622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3173": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8563,
        8622
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3174": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3180": {
      "op": "SHL"
    },
    "3181": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8563,
        8622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3182": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8563,
        8622
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3183": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8563,
        8622
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3185": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8563,
        8622
      ],
      "op": "ADD",
      "path": "0"
    },
    "3186": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8563,
        8622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A4"
    },
    "3189": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8563,
        8622
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3190": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8563,
        8622
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1730"
    },
    "3193": {
      "fn": "BadgerGeyser._unstakeFor",
      "jump": "i",
      "offset": [
        8563,
        8622
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3194": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8563,
        8622
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3195": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8664,
        8670
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 61
    },
    "3196": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8640,
        8660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC84"
    },
    "3199": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8655,
        8659
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3200": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8640,
        8654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x659"
    },
    "3203": {
      "fn": "BadgerGeyser._unstakeFor",
      "jump": "i",
      "offset": [
        8640,
        8660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3204": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8640,
        8660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3205": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8640,
        8670
      ],
      "op": "LT",
      "path": "0"
    },
    "3206": {
      "branch": 100,
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8640,
        8670
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3207": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8632,
        8737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA2"
    },
    "3210": {
      "branch": 100,
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8632,
        8737
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3211": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8632,
        8737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3213": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8632,
        8737
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3214": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3220": {
      "op": "SHL"
    },
    "3221": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8632,
        8737
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3222": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8632,
        8737
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3223": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8632,
        8737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3225": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8632,
        8737
      ],
      "op": "ADD",
      "path": "0"
    },
    "3226": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8632,
        8737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A4"
    },
    "3229": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8632,
        8737
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3230": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8632,
        8737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19AD"
    },
    "3233": {
      "fn": "BadgerGeyser._unstakeFor",
      "jump": "i",
      "offset": [
        8632,
        8737
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3234": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8632,
        8737
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3241": {
      "op": "SHL"
    },
    "3242": {
      "op": "SUB"
    },
    "3243": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8815
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 62
    },
    "3244": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8815
      ],
      "op": "AND",
      "path": "0"
    },
    "3245": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3247": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3248": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8815
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3249": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8815
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3250": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6A"
    },
    "3252": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3254": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8815
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3255": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3257": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3258": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8815
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3259": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8815
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3260": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC5"
    },
    "3263": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8827
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3264": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8820,
        8826
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3265": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8819
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF14"
    },
    "3268": {
      "fn": "BadgerGeyser._unstakeFor",
      "jump": "i",
      "offset": [
        8798,
        8827
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3269": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8798,
        8827
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3276": {
      "op": "SHL"
    },
    "3277": {
      "op": "SUB"
    },
    "3278": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8778,
        8795
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3279": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8778,
        8795
      ],
      "op": "AND",
      "path": "0"
    },
    "3280": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8778,
        8795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3282": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8778,
        8795
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3283": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8778,
        8795
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3284": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8778,
        8795
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3285": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8778,
        8789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6A"
    },
    "3287": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8778,
        8795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3289": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8778,
        8795
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3290": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8778,
        8795
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3292": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8778,
        8795
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3293": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8778,
        8795
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3294": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8778,
        8827
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3295": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8884,
        8895
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 63,
      "value": "0x66"
    },
    "3297": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8884,
        8895
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3298": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8884,
        8907
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCEB"
    },
    "3301": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8884,
        8907
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3302": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8900,
        8906
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3303": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8884,
        8899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF14"
    },
    "3306": {
      "fn": "BadgerGeyser._unstakeFor",
      "jump": "i",
      "offset": [
        8884,
        8907
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3307": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8884,
        8907
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3308": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8870,
        8881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x66"
    },
    "3310": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8870,
        8907
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3311": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8942,
        8955
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 64,
      "value": "0x67"
    },
    "3313": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8942,
        8955
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3314": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8942,
        8982
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD05"
    },
    "3317": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8942,
        8982
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3324": {
      "op": "SHL"
    },
    "3325": {
      "op": "SUB"
    },
    "3326": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8942,
        8955
      ],
      "op": "AND",
      "path": "0"
    },
    "3327": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8969,
        8973
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3328": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8975,
        8981
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3329": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8942,
        8968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF56"
    },
    "3332": {
      "fn": "BadgerGeyser._unstakeFor",
      "jump": "i",
      "offset": [
        8942,
        8982
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3333": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8942,
        8982
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3334": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        9048,
        9060
      ],
      "op": "NUMBER",
      "path": "0",
      "statement": 65
    },
    "3335": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        9043,
        9046
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "3336": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        9007,
        9011
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3343": {
      "op": "SHL"
    },
    "3344": {
      "op": "SUB"
    },
    "3345": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "AND",
      "path": "0"
    },
    "3346": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xA4CC38F55B7506135366A0BC5006873BA1B4AFE26F819B633E799754F80F223D"
    },
    "3379": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        9013,
        9019
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3380": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        9021,
        9041
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD3C"
    },
    "3383": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        9036,
        9040
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3384": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        9021,
        9035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x659"
    },
    "3387": {
      "fn": "BadgerGeyser._unstakeFor",
      "jump": "i",
      "offset": [
        9021,
        9041
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3388": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        9021,
        9041
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3389": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3391": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3392": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4A"
    },
    "3395": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3396": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3397": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3398": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A59"
    },
    "3401": {
      "fn": "BadgerGeyser._unstakeFor",
      "jump": "i",
      "offset": [
        8998,
        9065
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3402": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3403": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3405": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3406": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3407": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3408": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "SUB",
      "path": "0"
    },
    "3409": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3410": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8998,
        9065
      ],
      "op": "LOG4",
      "path": "0"
    },
    "3411": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8475,
        9072
      ],
      "op": "POP",
      "path": "0"
    },
    "3412": {
      "fn": "BadgerGeyser._unstakeFor",
      "offset": [
        8475,
        9072
      ],
      "op": "POP",
      "path": "0"
    },
    "3413": {
      "fn": "BadgerGeyser._unstakeFor",
      "jump": "o",
      "offset": [
        8475,
        9072
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3414": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3787,
        3914
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3415": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3860,
        3864
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3417": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3902
      ],
      "op": "SWAP1",
      "path": "42",
      "statement": 66
    },
    "3418": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3902
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3419": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3902
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3420": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3895
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "3422": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3895
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3423": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3895
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3424": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3895
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3425": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3895
      ],
      "op": "ADD",
      "path": "42"
    },
    "3426": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3902
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "3428": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3902
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3429": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3902
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3431": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3902
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3432": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3902
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "3433": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3902
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "3434": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3907
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "3435": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3907
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "3436": {
      "fn": "EnumerableSetUpgradeable._contains",
      "offset": [
        3883,
        3907
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3437": {
      "fn": "EnumerableSetUpgradeable._contains",
      "jump": "o",
      "offset": [
        3787,
        3914
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3438": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        885,
        1061
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3439": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        943,
        950
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "3441": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        974,
        979
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3442": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        974,
        979
      ],
      "op": "DUP3",
      "path": "35"
    },
    "3443": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        974,
        979
      ],
      "op": "ADD",
      "path": "35"
    },
    "3444": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        997,
        1003
      ],
      "op": "DUP4",
      "path": "35",
      "statement": 67
    },
    "3445": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        997,
        1003
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3446": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        997,
        1003
      ],
      "op": "LT",
      "path": "35"
    },
    "3447": {
      "branch": 117,
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        997,
        1003
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "3448": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x791"
    },
    "3451": {
      "branch": 117,
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "3452": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "3454": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "3455": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3461": {
      "op": "SHL"
    },
    "3462": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3463": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3464": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "3466": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "ADD",
      "path": "35"
    },
    "3467": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3A4"
    },
    "3470": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3471": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        989,
        1035
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x16F9"
    },
    "3474": {
      "fn": "SafeMathUpgradeable.add",
      "jump": "i",
      "offset": [
        989,
        1035
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3475": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        954,
        1168
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3476": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1065,
        1161
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 68,
      "value": "0x3E0"
    },
    "3479": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1085,
        1090
      ],
      "op": "DUP5",
      "path": "39"
    },
    "3480": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1115,
        1142
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x23B872DD"
    },
    "3485": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1115,
        1142
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "3487": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1115,
        1142
      ],
      "op": "SHL",
      "path": "39"
    },
    "3488": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1144,
        1148
      ],
      "op": "DUP6",
      "path": "39"
    },
    "3489": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1150,
        1152
      ],
      "op": "DUP6",
      "path": "39"
    },
    "3490": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1154,
        1159
      ],
      "op": "DUP6",
      "path": "39"
    },
    "3491": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3493": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3494": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x24"
    },
    "3496": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "ADD",
      "path": "39"
    },
    "3497": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xDB4"
    },
    "3500": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "3501": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "3502": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3503": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3504": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x148A"
    },
    "3507": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "jump": "i",
      "offset": [
        1092,
        1160
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3508": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3509": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3511": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3512": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3515": {
      "op": "NOT"
    },
    "3516": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3517": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "DUP5",
      "path": "39"
    },
    "3518": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "SUB",
      "path": "39"
    },
    "3519": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "ADD",
      "path": "39"
    },
    "3520": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3521": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3522": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3523": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3524": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3525": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "3527": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3528": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "ADD",
      "path": "39"
    },
    "3529": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3530": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3537": {
      "op": "SHL"
    },
    "3538": {
      "op": "SUB"
    },
    "3539": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "AND",
      "path": "39"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3546": {
      "op": "SHL"
    },
    "3547": {
      "op": "SUB"
    },
    "3548": {
      "op": "NOT"
    },
    "3549": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3550": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "3551": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "AND",
      "path": "39"
    },
    "3552": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "3553": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3554": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "3555": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "OR",
      "path": "39"
    },
    "3556": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3557": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3558": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1092,
        1160
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3559": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "offset": [
        1065,
        1084
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xF75"
    },
    "3562": {
      "fn": "SafeERC20Upgradeable.safeTransferFrom",
      "jump": "i",
      "offset": [
        1065,
        1161
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3563": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        751,
        815
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "3564": {
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "3566": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "3567": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x100"
    },
    "3570": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "3571": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "DIV",
      "path": "36"
    },
    "3572": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xFF"
    },
    "3574": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "AND",
      "path": "36"
    },
    "3575": {
      "branch": 112,
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1439
      ],
      "op": "DUP1",
      "path": "36"
    },
    "3576": {
      "offset": [
        1426,
        1459
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xE04"
    },
    "3579": {
      "branch": 112,
      "offset": [
        1426,
        1459
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "3580": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1459
      ],
      "op": "POP",
      "path": "36"
    },
    "3581": {
      "offset": [
        1443,
        1459
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xE04"
    },
    "3584": {
      "offset": [
        1443,
        1457
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xB05"
    },
    "3587": {
      "jump": "i",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMP",
      "path": "36"
    },
    "3588": {
      "branch": 113,
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1443,
        1459
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "3589": {
      "offset": [
        1426,
        1476
      ],
      "op": "DUP1",
      "path": "36"
    },
    "3590": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1426,
        1476
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xE12"
    },
    "3593": {
      "branch": 113,
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "3594": {
      "op": "POP"
    },
    "3595": {
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "3597": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1464,
        1476
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "3598": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1464,
        1476
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xFF"
    },
    "3600": {
      "branch": 114,
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1464,
        1476
      ],
      "op": "AND",
      "path": "36"
    },
    "3601": {
      "offset": [
        1463,
        1476
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "3602": {
      "offset": [
        1426,
        1476
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "3603": {
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xE2E"
    },
    "3606": {
      "branch": 114,
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "3607": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "3609": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "3610": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3616": {
      "op": "SHL"
    },
    "3617": {
      "offset": [
        1418,
        1527
      ],
      "op": "DUP2",
      "path": "36"
    },
    "3618": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "3619": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "3621": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "ADD",
      "path": "36"
    },
    "3622": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x3A4"
    },
    "3625": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "3626": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1806"
    },
    "3629": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "jump": "i",
      "offset": [
        1418,
        1527
      ],
      "op": "JUMP",
      "path": "36"
    },
    "3630": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1418,
        1527
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "3631": {
      "offset": [
        1538,
        1557
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "3633": {
      "offset": [
        1561,
        1574
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "3634": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x100"
    },
    "3637": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1561,
        1574
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "3638": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1561,
        1574
      ],
      "op": "DIV",
      "path": "36"
    },
    "3639": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1561,
        1574
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xFF"
    },
    "3641": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1561,
        1574
      ],
      "op": "AND",
      "path": "36"
    },
    "3642": {
      "offset": [
        1560,
        1574
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "3643": {
      "offset": [
        1584,
        1682
      ],
      "op": "DUP1",
      "path": "36"
    },
    "3644": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1584,
        1682
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "3645": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1584,
        1682
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xB89"
    },
    "3648": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1584,
        1682
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "3649": {
      "offset": [
        1618,
        1631
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "3651": {
      "offset": [
        1618,
        1638
      ],
      "op": "DUP1",
      "path": "36"
    },
    "3652": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1618,
        1638
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3655": {
      "op": "NOT"
    },
    "3656": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "3659": {
      "op": "NOT"
    },
    "3660": {
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "3661": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1618,
        1638
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "3662": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1618,
        1638
      ],
      "op": "AND",
      "path": "36"
    },
    "3663": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1618,
        1638
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x100"
    },
    "3666": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1618,
        1638
      ],
      "op": "OR",
      "path": "36"
    },
    "3667": {
      "offset": [
        1652,
        1671
      ],
      "op": "AND",
      "path": "36"
    },
    "3668": {
      "offset": [
        1634,
        1638
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1"
    },
    "3670": {
      "offset": [
        1652,
        1671
      ],
      "op": "OR",
      "path": "36"
    },
    "3671": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1652,
        1671
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "3672": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1652,
        1671
      ],
      "op": "SSTORE",
      "path": "36"
    },
    "3673": {
      "offset": [
        1708,
        1722
      ],
      "op": "DUP1",
      "path": "36"
    },
    "3674": {
      "offset": [
        1704,
        1770
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "3675": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1704,
        1770
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xB9B"
    },
    "3678": {
      "offset": [
        1704,
        1770
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "3679": {
      "offset": [
        1754,
        1759
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "3681": {
      "offset": [
        1738,
        1759
      ],
      "op": "DUP1",
      "path": "36"
    },
    "3682": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1738,
        1759
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "3683": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "3686": {
      "op": "NOT"
    },
    "3687": {
      "offset": [
        1738,
        1759
      ],
      "op": "AND",
      "path": "36"
    },
    "3688": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1738,
        1759
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "3689": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1738,
        1759
      ],
      "op": "SSTORE",
      "path": "36"
    },
    "3690": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        751,
        815
      ],
      "op": "POP",
      "path": "30"
    },
    "3691": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "jump": "o",
      "offset": [
        751,
        815
      ],
      "op": "JUMP",
      "path": "30"
    },
    "3692": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1622,
        2026
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3693": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1685,
        1689
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3695": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1706,
        1727
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xE78"
    },
    "3698": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1716,
        1719
      ],
      "op": "DUP4",
      "path": "42"
    },
    "3699": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1721,
        1726
      ],
      "op": "DUP4",
      "path": "42"
    },
    "3700": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1706,
        1715
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xD56"
    },
    "3703": {
      "fn": "EnumerableSetUpgradeable._add",
      "jump": "i",
      "offset": [
        1706,
        1727
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3704": {
      "branch": 109,
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1706,
        1727
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3705": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1701,
        2020
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xEAE"
    },
    "3708": {
      "branch": 109,
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1701,
        2020
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "3709": {
      "op": "POP"
    },
    "3710": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "DUP2",
      "path": "42",
      "statement": 69
    },
    "3711": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "3712": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "3714": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3715": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3716": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "ADD",
      "path": "42"
    },
    "3717": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "DUP5",
      "path": "42"
    },
    "3718": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "3719": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1754
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3721": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "DUP5",
      "path": "42"
    },
    "3722": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3723": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3724": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "3726": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "DUP1",
      "path": "42"
    },
    "3727": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3728": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "3729": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3730": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "3731": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "ADD",
      "path": "42"
    },
    "3732": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "DUP5",
      "path": "42"
    },
    "3733": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3734": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1743,
        1766
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "3735": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1923,
        1941
      ],
      "op": "DUP5",
      "path": "42",
      "statement": 70
    },
    "3736": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1923,
        1941
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "3737": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1920
      ],
      "op": "DUP5",
      "path": "42"
    },
    "3738": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1920
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3739": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1920
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3740": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1913
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3741": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1913
      ],
      "op": "DUP7",
      "path": "42"
    },
    "3742": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1913
      ],
      "op": "ADD",
      "path": "42"
    },
    "3743": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1920
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3744": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1920
      ],
      "op": "SWAP4",
      "path": "42"
    },
    "3745": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1920
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3746": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1920
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3748": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1920
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3749": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1920
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "3750": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1941
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3751": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1941
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3752": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1941
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3753": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1901,
        1941
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "3754": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1955,
        1966
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 71,
      "value": "0x794"
    },
    "3757": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1955,
        1966
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3758": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1701,
        2020
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3759": {
      "op": "POP"
    },
    "3760": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        2004,
        2009
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 72,
      "value": "0x0"
    },
    "3762": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1997,
        2009
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x794"
    },
    "3765": {
      "fn": "EnumerableSetUpgradeable._add",
      "offset": [
        1997,
        2009
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3766": {
      "fn": "EnumerableSetUpgradeable.remove",
      "offset": [
        5184,
        5331
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3767": {
      "fn": "EnumerableSetUpgradeable.remove",
      "offset": [
        5257,
        5261
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3769": {
      "fn": "EnumerableSetUpgradeable.remove",
      "offset": [
        5280,
        5324
      ],
      "op": "PUSH2",
      "path": "42",
      "statement": 73,
      "value": "0x791"
    },
    "3772": {
      "fn": "EnumerableSetUpgradeable.remove",
      "offset": [
        5288,
        5291
      ],
      "op": "DUP4",
      "path": "42"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3779": {
      "op": "SHL"
    },
    "3780": {
      "op": "SUB"
    },
    "3781": {
      "fn": "EnumerableSetUpgradeable.remove",
      "offset": [
        5308,
        5322
      ],
      "op": "DUP5",
      "path": "42"
    },
    "3782": {
      "fn": "EnumerableSetUpgradeable.remove",
      "offset": [
        5308,
        5322
      ],
      "op": "AND",
      "path": "42"
    },
    "3783": {
      "fn": "EnumerableSetUpgradeable.remove",
      "offset": [
        5280,
        5287
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1004"
    },
    "3786": {
      "fn": "EnumerableSetUpgradeable.remove",
      "jump": "i",
      "offset": [
        5280,
        5324
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3787": {
      "fn": "EnumerableSetUpgradeable._length",
      "offset": [
        3995,
        4102
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3788": {
      "fn": "EnumerableSetUpgradeable._length",
      "offset": [
        4077,
        4095
      ],
      "op": "SLOAD",
      "path": "42",
      "statement": 74
    },
    "3789": {
      "fn": "EnumerableSetUpgradeable._length",
      "offset": [
        4077,
        4095
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3790": {
      "fn": "EnumerableSetUpgradeable._length",
      "jump": "o",
      "offset": [
        3995,
        4102
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3791": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4434,
        4635
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3792": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4528,
        4546
      ],
      "op": "DUP2",
      "path": "42",
      "statement": 75
    },
    "3793": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4528,
        4546
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "3794": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4501,
        4508
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3796": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4501,
        4508
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3797": {
      "branch": 110,
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4528,
        4554
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3798": {
      "op": "LT"
    },
    "3799": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4520,
        4593
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xEF2"
    },
    "3802": {
      "branch": 110,
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4520,
        4593
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "3803": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4520,
        4593
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "3805": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4520,
        4593
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "3806": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3812": {
      "op": "SHL"
    },
    "3813": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4520,
        4593
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3814": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4520,
        4593
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3815": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4520,
        4593
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "3817": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4520,
        4593
      ],
      "op": "ADD",
      "path": "42"
    },
    "3818": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4520,
        4593
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x3A4"
    },
    "3821": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4520,
        4593
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3822": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4520,
        4593
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x15E2"
    },
    "3825": {
      "fn": "EnumerableSetUpgradeable._at",
      "jump": "i",
      "offset": [
        4520,
        4593
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3826": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4520,
        4593
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3827": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4613
      ],
      "op": "DUP3",
      "path": "42",
      "statement": 76
    },
    "3828": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4621
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3830": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4621
      ],
      "op": "ADD",
      "path": "42"
    },
    "3831": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4622,
        4627
      ],
      "op": "DUP3",
      "path": "42"
    },
    "3832": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3833": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "3834": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "DUP2",
      "path": "42"
    },
    "3835": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "LT",
      "path": "42"
    },
    "3836": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0xF01"
    },
    "3839": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "3840": {
      "dev": "Index out of range",
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "INVALID",
      "path": "42"
    },
    "3841": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "3842": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3843": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3845": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "3846": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "3848": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "3850": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "3851": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "ADD",
      "path": "42"
    },
    "3852": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4610,
        4628
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "3853": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4603,
        4628
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "3854": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4603,
        4628
      ],
      "op": "POP",
      "path": "42"
    },
    "3855": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4434,
        4635
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "3856": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4434,
        4635
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "3857": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4434,
        4635
      ],
      "op": "POP",
      "path": "42"
    },
    "3858": {
      "fn": "EnumerableSetUpgradeable._at",
      "offset": [
        4434,
        4635
      ],
      "op": "POP",
      "path": "42"
    },
    "3859": {
      "fn": "EnumerableSetUpgradeable._at",
      "jump": "o",
      "offset": [
        4434,
        4635
      ],
      "op": "JUMP",
      "path": "42"
    },
    "3860": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1332,
        1466
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3861": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1390,
        1397
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "3863": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 77,
      "value": "0x791"
    },
    "3866": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1420,
        1421
      ],
      "op": "DUP4",
      "path": "35"
    },
    "3867": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1423,
        1424
      ],
      "op": "DUP4",
      "path": "35"
    },
    "3868": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "3870": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "3871": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3872": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "3874": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "ADD",
      "path": "35"
    },
    "3875": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "3877": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3878": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "DUP1",
      "path": "35"
    },
    "3879": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1E"
    },
    "3881": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3882": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3883": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "3885": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "ADD",
      "path": "35"
    },
    "3886": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "PUSH32",
      "path": "35",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "3919": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3920": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "3921": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1459
      ],
      "op": "POP",
      "path": "35"
    },
    "3922": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1416,
        1419
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x10CA"
    },
    "3925": {
      "fn": "SafeMathUpgradeable.sub",
      "jump": "i",
      "offset": [
        1416,
        1459
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3926": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        762,
        948
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3927": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        855,
        941
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 78,
      "value": "0x3F9"
    },
    "3930": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        875,
        880
      ],
      "op": "DUP4",
      "path": "39"
    },
    "3931": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        905,
        928
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xA9059CBB"
    },
    "3936": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        905,
        928
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "3938": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        905,
        928
      ],
      "op": "SHL",
      "path": "39"
    },
    "3939": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        930,
        932
      ],
      "op": "DUP5",
      "path": "39"
    },
    "3940": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        934,
        939
      ],
      "op": "DUP5",
      "path": "39"
    },
    "3941": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        882,
        940
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3943": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        882,
        940
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3944": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        882,
        940
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x24"
    },
    "3946": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        882,
        940
      ],
      "op": "ADD",
      "path": "39"
    },
    "3947": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        882,
        940
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xDB4"
    },
    "3950": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        882,
        940
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "3951": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        882,
        940
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3952": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        882,
        940
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3953": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        882,
        940
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x14AE"
    },
    "3956": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "jump": "i",
      "offset": [
        882,
        940
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3957": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3080,
        3842
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3958": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3510,
        3533
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x60"
    },
    "3960": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xFCA"
    },
    "3963": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3564,
        3568
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3964": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3966": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3967": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3968": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3970": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "ADD",
      "path": "39"
    },
    "3971": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3973": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3974": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3975": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "3977": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3978": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3979": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "3981": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "ADD",
      "path": "39"
    },
    "3982": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "PUSH32",
      "path": "39",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "4015": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4016": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4017": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "POP",
      "path": "39"
    },
    "4018": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3549
      ],
      "op": "DUP6",
      "path": "39"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4025": {
      "op": "SHL"
    },
    "4026": {
      "op": "SUB"
    },
    "4027": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3563
      ],
      "op": "AND",
      "path": "39"
    },
    "4028": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3563
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x10F6"
    },
    "4031": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3563
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4032": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "4033": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4034": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4035": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xFFFFFFFF"
    },
    "4040": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "AND",
      "path": "39"
    },
    "4041": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "jump": "i",
      "offset": [
        3536,
        3605
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4042": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3536,
        3605
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4043": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3619,
        3636
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4044": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3619,
        3636
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4045": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3510,
        3605
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4046": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3510,
        3605
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4047": {
      "op": "POP"
    },
    "4048": {
      "branch": 115,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3619,
        3640
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4049": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3615,
        3836
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3F9"
    },
    "4052": {
      "branch": 115,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3615,
        3836
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4053": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3759,
        3769
      ],
      "op": "DUP1",
      "path": "39",
      "statement": 79
    },
    "4054": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3778
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4055": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3778
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "4057": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3778
      ],
      "op": "ADD",
      "path": "39"
    },
    "4058": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3778
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4059": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3778
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4060": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3778
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4061": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3778
      ],
      "op": "ADD",
      "path": "39"
    },
    "4062": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3778
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4063": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3778
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xFE8"
    },
    "4066": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3778
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4067": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3778
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4068": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3778
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1321"
    },
    "4071": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "jump": "i",
      "offset": [
        3748,
        3778
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4072": {
      "branch": 116,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3778
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4073": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3740,
        3825
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3F9"
    },
    "4076": {
      "branch": 116,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3740,
        3825
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4077": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3740,
        3825
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4079": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3740,
        3825
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4080": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4086": {
      "op": "SHL"
    },
    "4087": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3740,
        3825
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4088": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3740,
        3825
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4089": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3740,
        3825
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "4091": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3740,
        3825
      ],
      "op": "ADD",
      "path": "39"
    },
    "4092": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3740,
        3825
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3A4"
    },
    "4095": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3740,
        3825
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4096": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3740,
        3825
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1963"
    },
    "4099": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "jump": "i",
      "offset": [
        3740,
        3825
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4100": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2194,
        3706
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4101": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2260,
        2264
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4103": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2397,
        2416
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4104": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2397,
        2416
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4105": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2397,
        2416
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4106": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2397,
        2409
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "4108": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2397,
        2409
      ],
      "op": "DUP4",
      "path": "42"
    },
    "4109": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2397,
        2409
      ],
      "op": "ADD",
      "path": "42"
    },
    "4110": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2397,
        2416
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4112": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2397,
        2416
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4113": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2397,
        2416
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4115": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2397,
        2416
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4116": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2397,
        2416
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "4117": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2397,
        2416
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "4118": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2431,
        2446
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4119": {
      "branch": 111,
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2431,
        2446
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "4120": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2427,
        3700
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x10C0"
    },
    "4123": {
      "branch": 111,
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2427,
        3700
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4124": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2860,
        2878
      ],
      "op": "DUP4",
      "path": "42"
    },
    "4125": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2860,
        2878
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4128": {
      "op": "NOT"
    },
    "4129": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2812,
        2826
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4130": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2812,
        2826
      ],
      "op": "DUP4",
      "path": "42"
    },
    "4131": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2812,
        2826
      ],
      "op": "ADD",
      "path": "42"
    },
    "4132": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2812,
        2826
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "4133": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2860,
        2882
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4134": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2860,
        2882
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4135": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2860,
        2882
      ],
      "op": "ADD",
      "path": "42"
    },
    "4136": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2860,
        2882
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4137": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2788,
        2809
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4139": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2788,
        2809
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4140": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2860,
        2863
      ],
      "op": "DUP8",
      "path": "42"
    },
    "4141": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2860,
        2863
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4142": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2860,
        2882
      ],
      "op": "DUP4",
      "path": "42"
    },
    "4143": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2860,
        2882
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4144": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3142,
        3164
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4145": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3142,
        3164
      ],
      "op": "LT",
      "path": "42"
    },
    "4146": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3142,
        3164
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1037"
    },
    "4149": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3142,
        3164
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4150": {
      "dev": "Index out of range",
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3142,
        3164
      ],
      "op": "INVALID",
      "path": "42"
    },
    "4151": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3142,
        3164
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4152": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3142,
        3164
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4153": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3142,
        3164
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4155": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3142,
        3164
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4156": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3142,
        3164
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4158": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3142,
        3164
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4160": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3142,
        3164
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "4161": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3142,
        3164
      ],
      "op": "ADD",
      "path": "42"
    },
    "4162": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3142,
        3164
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "4163": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3122,
        3164
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4164": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3122,
        3164
      ],
      "op": "POP",
      "path": "42"
    },
    "4165": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3285,
        3294
      ],
      "op": "DUP1",
      "path": "42",
      "statement": 80
    },
    "4166": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3259
      ],
      "op": "DUP8",
      "path": "42"
    },
    "4167": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3267
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4169": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3267
      ],
      "op": "ADD",
      "path": "42"
    },
    "4170": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3268,
        3281
      ],
      "op": "DUP5",
      "path": "42"
    },
    "4171": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4172": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "4173": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4174": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "LT",
      "path": "42"
    },
    "4175": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1054"
    },
    "4178": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4179": {
      "dev": "Index out of range",
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "INVALID",
      "path": "42"
    },
    "4180": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4181": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4183": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "4184": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "DUP3",
      "path": "42"
    },
    "4185": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4186": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4188": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4189": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "DUP4",
      "path": "42"
    },
    "4190": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "4191": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4192": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "4193": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3282
      ],
      "op": "ADD",
      "path": "42"
    },
    "4194": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3294
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "4195": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3294
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4196": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3294
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "4197": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3256,
        3294
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "4198": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3383
      ],
      "op": "DUP3",
      "path": "42",
      "statement": 81
    },
    "4199": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3383
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4200": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3383
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4201": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3402,
        3403
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "4203": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3372
      ],
      "op": "DUP10",
      "path": "42"
    },
    "4204": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3372
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4205": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3372
      ],
      "op": "ADD",
      "path": "42"
    },
    "4206": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3383
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4207": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3383
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "4208": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3383
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4209": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3383
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "4211": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3383
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4212": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3383
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "4213": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3386,
        3403
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4214": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3386,
        3403
      ],
      "op": "DUP5",
      "path": "42"
    },
    "4215": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3386,
        3403
      ],
      "op": "ADD",
      "path": "42"
    },
    "4216": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3403
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4217": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3403
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "4218": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "DUP7",
      "path": "42",
      "statement": 82
    },
    "4219": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "SLOAD",
      "path": "42"
    },
    "4220": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3363
      ],
      "op": "DUP8",
      "path": "42"
    },
    "4221": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3360,
        3363
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4222": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "DUP1",
      "path": "42"
    },
    "4223": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x1084"
    },
    "4226": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "4227": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "INVALID",
      "path": "42"
    },
    "4228": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4229": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "4231": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4232": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "SUB",
      "path": "42"
    },
    "4233": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4234": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4235": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4236": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4238": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4239": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4241": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4243": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "4244": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "ADD",
      "path": "42"
    },
    "4245": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4247": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4248": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "4249": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4250": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3509,
        3526
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "4251": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3601,
        3604
      ],
      "op": "DUP7",
      "path": "42",
      "statement": 83
    },
    "4252": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3601,
        3613
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "4254": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3601,
        3613
      ],
      "op": "ADD",
      "path": "42"
    },
    "4255": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3601,
        3620
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4257": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3614,
        3619
      ],
      "op": "DUP8",
      "path": "42"
    },
    "4258": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3601,
        3620
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4259": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3601,
        3620
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4260": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3601,
        3620
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4262": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3601,
        3620
      ],
      "op": "ADD",
      "path": "42"
    },
    "4263": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3601,
        3620
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4264": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3601,
        3620
      ],
      "op": "DUP2",
      "path": "42"
    },
    "4265": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3601,
        3620
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "4266": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3601,
        3620
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "4268": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3601,
        3620
      ],
      "op": "ADD",
      "path": "42"
    },
    "4269": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3601,
        3620
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4271": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3601,
        3620
      ],
      "op": "KECCAK256",
      "path": "42"
    },
    "4272": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3594,
        3620
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "4274": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3594,
        3620
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "4275": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3594,
        3620
      ],
      "op": "SSTORE",
      "path": "42"
    },
    "4276": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3642,
        3646
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 84,
      "value": "0x1"
    },
    "4278": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3635,
        3646
      ],
      "op": "SWAP5",
      "path": "42"
    },
    "4279": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3635,
        3646
      ],
      "op": "POP",
      "path": "42"
    },
    "4280": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3635,
        3646
      ],
      "op": "POP",
      "path": "42"
    },
    "4281": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3635,
        3646
      ],
      "op": "POP",
      "path": "42"
    },
    "4282": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3635,
        3646
      ],
      "op": "POP",
      "path": "42"
    },
    "4283": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3635,
        3646
      ],
      "op": "POP",
      "path": "42"
    },
    "4284": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3635,
        3646
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x794"
    },
    "4287": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3635,
        3646
      ],
      "op": "JUMP",
      "path": "42"
    },
    "4288": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        2427,
        3700
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "4289": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3684,
        3689
      ],
      "op": "PUSH1",
      "path": "42",
      "statement": 85,
      "value": "0x0"
    },
    "4291": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3677,
        3689
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "4292": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3677,
        3689
      ],
      "op": "POP",
      "path": "42"
    },
    "4293": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3677,
        3689
      ],
      "op": "POP",
      "path": "42"
    },
    "4294": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3677,
        3689
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x794"
    },
    "4297": {
      "fn": "EnumerableSetUpgradeable._remove",
      "offset": [
        3677,
        3689
      ],
      "op": "JUMP",
      "path": "42"
    },
    "4298": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1757,
        1944
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4299": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1843,
        1850
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "4301": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1878,
        1890
      ],
      "op": "DUP2",
      "path": "35",
      "statement": 86
    },
    "4302": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1870,
        1876
      ],
      "op": "DUP5",
      "path": "35"
    },
    "4303": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1870,
        1876
      ],
      "op": "DUP5",
      "path": "35"
    },
    "4304": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1870,
        1876
      ],
      "op": "GT",
      "path": "35"
    },
    "4305": {
      "branch": 118,
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1870,
        1876
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "4306": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x10EE"
    },
    "4309": {
      "branch": 118,
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "4310": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4312": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "4313": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4319": {
      "op": "SHL"
    },
    "4320": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "DUP2",
      "path": "35"
    },
    "4321": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "4322": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "4324": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "ADD",
      "path": "35"
    },
    "4325": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3A4"
    },
    "4328": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "4329": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4330": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x158C"
    },
    "4333": {
      "fn": "SafeMathUpgradeable.sub",
      "jump": "i",
      "offset": [
        1862,
        1891
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4334": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1862,
        1891
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "4335": {
      "op": "POP"
    },
    "4336": {
      "op": "POP"
    },
    "4337": {
      "op": "POP"
    },
    "4338": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1913,
        1918
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4339": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1913,
        1918
      ],
      "op": "SUB",
      "path": "35"
    },
    "4340": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        1913,
        1918
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "4341": {
      "fn": "SafeMathUpgradeable.sub",
      "jump": "o",
      "offset": [
        1757,
        1944
      ],
      "op": "JUMP",
      "path": "35"
    },
    "4342": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3584,
        3778
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4343": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3687,
        3699
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x60"
    },
    "4345": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3718,
        3771
      ],
      "op": "PUSH2",
      "path": "41",
      "statement": 87,
      "value": "0x1105"
    },
    "4348": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3741,
        3747
      ],
      "op": "DUP5",
      "path": "41"
    },
    "4349": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3749,
        3753
      ],
      "op": "DUP5",
      "path": "41"
    },
    "4350": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3755,
        3756
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "4352": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3758,
        3770
      ],
      "op": "DUP6",
      "path": "41"
    },
    "4353": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3718,
        3740
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x110D"
    },
    "4356": {
      "fn": "AddressUpgradeable.functionCall",
      "jump": "i",
      "offset": [
        3718,
        3771
      ],
      "op": "JUMP",
      "path": "41"
    },
    "4357": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3718,
        3771
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4358": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3711,
        3771
      ],
      "op": "SWAP5",
      "path": "41"
    },
    "4359": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3584,
        3778
      ],
      "op": "SWAP4",
      "path": "41"
    },
    "4360": {
      "op": "POP"
    },
    "4361": {
      "op": "POP"
    },
    "4362": {
      "op": "POP"
    },
    "4363": {
      "op": "POP"
    },
    "4364": {
      "fn": "AddressUpgradeable.functionCall",
      "jump": "o",
      "offset": [
        3584,
        3778
      ],
      "op": "JUMP",
      "path": "41"
    },
    "4365": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        4931,
        5889
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4366": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5061,
        5073
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x60"
    },
    "4368": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5093,
        5111
      ],
      "op": "PUSH2",
      "path": "41",
      "statement": 88,
      "value": "0x1118"
    },
    "4371": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5104,
        5110
      ],
      "op": "DUP6",
      "path": "41"
    },
    "4372": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5093,
        5103
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x11D1"
    },
    "4375": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "jump": "i",
      "offset": [
        5093,
        5111
      ],
      "op": "JUMP",
      "path": "41"
    },
    "4376": {
      "branch": 106,
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5093,
        5111
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4377": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5085,
        5145
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1134"
    },
    "4380": {
      "branch": 106,
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5085,
        5145
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "4381": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5085,
        5145
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "4383": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5085,
        5145
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "4384": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4390": {
      "op": "SHL"
    },
    "4391": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5085,
        5145
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4392": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5085,
        5145
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "4393": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5085,
        5145
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "4395": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5085,
        5145
      ],
      "op": "ADD",
      "path": "41"
    },
    "4396": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5085,
        5145
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x3A4"
    },
    "4399": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5085,
        5145
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "4400": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5085,
        5145
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x192C"
    },
    "4403": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "jump": "i",
      "offset": [
        5085,
        5145
      ],
      "op": "JUMP",
      "path": "41"
    },
    "4404": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5085,
        5145
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4405": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5216,
        5228
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "4407": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5230,
        5253
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x60"
    },
    "4409": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5263
      ],
      "op": "DUP7",
      "path": "41"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4416": {
      "op": "SHL"
    },
    "4417": {
      "op": "SUB"
    },
    "4418": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5268
      ],
      "op": "AND",
      "path": "41"
    },
    "4419": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5277,
        5285
      ],
      "op": "DUP6",
      "path": "41"
    },
    "4420": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5288,
        5292
      ],
      "op": "DUP8",
      "path": "41"
    },
    "4421": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "4423": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "4424": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1151"
    },
    "4427": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "4428": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "4429": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x145A"
    },
    "4432": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "jump": "i",
      "offset": [
        5257,
        5293
      ],
      "op": "JUMP",
      "path": "41"
    },
    "4433": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4434": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "4436": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "4438": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "4439": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "DUP1",
      "path": "41"
    },
    "4440": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "DUP4",
      "path": "41"
    },
    "4441": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "SUB",
      "path": "41"
    },
    "4442": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4443": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "DUP6",
      "path": "41"
    },
    "4444": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "DUP8",
      "path": "41"
    },
    "4445": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "GAS",
      "path": "41"
    },
    "4446": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "CALL",
      "path": "41"
    },
    "4447": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "4448": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "POP",
      "path": "41"
    },
    "4449": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "POP",
      "path": "41"
    },
    "4450": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "POP",
      "path": "41"
    },
    "4451": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "RETURNDATASIZE",
      "path": "41"
    },
    "4452": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "DUP1",
      "path": "41"
    },
    "4453": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "4455": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4456": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "EQ",
      "path": "41"
    },
    "4457": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x118E"
    },
    "4460": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "4461": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "4463": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "4464": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "4465": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "POP",
      "path": "41"
    },
    "4466": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1F"
    },
    "4468": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "NOT",
      "path": "41"
    },
    "4469": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x3F"
    },
    "4471": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "RETURNDATASIZE",
      "path": "41"
    },
    "4472": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "ADD",
      "path": "41"
    },
    "4473": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "AND",
      "path": "41"
    },
    "4474": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "DUP3",
      "path": "41"
    },
    "4475": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "ADD",
      "path": "41"
    },
    "4476": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "4478": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "4479": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "RETURNDATASIZE",
      "path": "41"
    },
    "4480": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "DUP3",
      "path": "41"
    },
    "4481": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "4482": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "RETURNDATASIZE",
      "path": "41"
    },
    "4483": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "4485": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "4487": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "DUP5",
      "path": "41"
    },
    "4488": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "ADD",
      "path": "41"
    },
    "4489": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "RETURNDATACOPY",
      "path": "41"
    },
    "4490": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1193"
    },
    "4493": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "JUMP",
      "path": "41"
    },
    "4494": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4495": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x60"
    },
    "4497": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "4498": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "POP",
      "path": "41"
    },
    "4499": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4500": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5257,
        5293
      ],
      "op": "POP",
      "path": "41"
    },
    "4501": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5215,
        5293
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "4502": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5215,
        5293
      ],
      "op": "POP",
      "path": "41"
    },
    "4503": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5215,
        5293
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "4504": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5215,
        5293
      ],
      "op": "POP",
      "path": "41"
    },
    "4505": {
      "branch": 107,
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5307,
        5314
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4506": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5303,
        5883
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "4507": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5303,
        5883
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x11A7"
    },
    "4510": {
      "branch": 107,
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5303,
        5883
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "4511": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5337,
        5347
      ],
      "op": "SWAP2",
      "path": "41",
      "statement": 89
    },
    "4512": {
      "op": "POP"
    },
    "4513": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5330,
        5347
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1105"
    },
    "4516": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5330,
        5347
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "4517": {
      "op": "POP"
    },
    "4518": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5330,
        5347
      ],
      "op": "JUMP",
      "path": "41"
    },
    "4519": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5303,
        5883
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4520": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5448,
        5465
      ],
      "op": "DUP1",
      "path": "41"
    },
    "4521": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5448,
        5465
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "4522": {
      "branch": 108,
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5448,
        5469
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "4523": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5444,
        5873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x11B7"
    },
    "4526": {
      "branch": 108,
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5444,
        5873
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "4527": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5706,
        5716
      ],
      "op": "DUP1",
      "path": "41"
    },
    "4528": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5700,
        5717
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "4529": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5766,
        5781
      ],
      "op": "DUP1",
      "path": "41"
    },
    "4530": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5753,
        5763
      ],
      "op": "DUP3",
      "path": "41"
    },
    "4531": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5749,
        5751
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "4533": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5745,
        5764
      ],
      "op": "ADD",
      "path": "41"
    },
    "4534": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5738,
        5782
      ],
      "op": "REVERT",
      "path": "41"
    },
    "4535": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5655,
        5800
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4536": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5845,
        5857
      ],
      "op": "DUP4",
      "path": "41",
      "statement": 90
    },
    "4537": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5838,
        5858
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "4539": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5838,
        5858
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "4540": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4546": {
      "op": "SHL"
    },
    "4547": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5838,
        5858
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4548": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5838,
        5858
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "4549": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5838,
        5858
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "4551": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5838,
        5858
      ],
      "op": "ADD",
      "path": "41"
    },
    "4552": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5838,
        5858
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x3A4"
    },
    "4555": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5838,
        5858
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "4556": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5838,
        5858
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "4557": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "offset": [
        5838,
        5858
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x158C"
    },
    "4560": {
      "fn": "AddressUpgradeable._functionCallWithValue",
      "jump": "i",
      "offset": [
        5838,
        5858
      ],
      "op": "JUMP",
      "path": "41"
    },
    "4561": {
      "fn": "AddressUpgradeable.isContract",
      "offset": [
        729,
        1142
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4562": {
      "fn": "AddressUpgradeable.isContract",
      "offset": [
        1089,
        1109
      ],
      "op": "EXTCODESIZE",
      "path": "41"
    },
    "4563": {
      "fn": "AddressUpgradeable.isContract",
      "offset": [
        1127,
        1135
      ],
      "op": "ISZERO",
      "path": "41",
      "statement": 91
    },
    "4564": {
      "fn": "AddressUpgradeable.isContract",
      "offset": [
        1127,
        1135
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "4565": {
      "fn": "AddressUpgradeable.isContract",
      "offset": [
        1127,
        1135
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "4566": {
      "fn": "AddressUpgradeable.isContract",
      "jump": "o",
      "offset": [
        729,
        1142
      ],
      "op": "JUMP",
      "path": "41"
    },
    "4567": {
      "op": "JUMPDEST"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4570": {
      "op": "MLOAD"
    },
    "4571": {
      "op": "DUP1"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4574": {
      "op": "ADD"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4577": {
      "op": "MSTORE"
    },
    "4578": {
      "op": "DUP1"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4581": {
      "op": "DUP2"
    },
    "4582": {
      "op": "MSTORE"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4585": {
      "op": "ADD"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4588": {
      "op": "DUP2"
    },
    "4589": {
      "op": "MSTORE"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4592": {
      "op": "ADD"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4595": {
      "op": "DUP2"
    },
    "4596": {
      "op": "MSTORE"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4599": {
      "op": "ADD"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4602": {
      "op": "DUP2"
    },
    "4603": {
      "op": "MSTORE"
    },
    "4604": {
      "op": "POP"
    },
    "4605": {
      "op": "SWAP1"
    },
    "4606": {
      "jump": "o",
      "op": "JUMP"
    },
    "4607": {
      "op": "JUMPDEST"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4610": {
      "op": "DUP1"
    },
    "4611": {
      "op": "DUP4"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4614": {
      "op": "DUP5"
    },
    "4615": {
      "op": "ADD"
    },
    "4616": {
      "op": "SLT"
    },
    "4617": {
      "op": "PUSH2",
      "value": "0x1210"
    },
    "4620": {
      "op": "JUMPI"
    },
    "4621": {
      "op": "DUP2"
    },
    "4622": {
      "op": "DUP3"
    },
    "4623": {
      "op": "REVERT"
    },
    "4624": {
      "op": "JUMPDEST"
    },
    "4625": {
      "op": "POP"
    },
    "4626": {
      "op": "DUP2"
    },
    "4627": {
      "op": "CALLDATALOAD"
    },
    "4628": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4637": {
      "op": "DUP2"
    },
    "4638": {
      "op": "GT"
    },
    "4639": {
      "op": "ISZERO"
    },
    "4640": {
      "op": "PUSH2",
      "value": "0x1227"
    },
    "4643": {
      "op": "JUMPI"
    },
    "4644": {
      "op": "DUP2"
    },
    "4645": {
      "op": "DUP3"
    },
    "4646": {
      "op": "REVERT"
    },
    "4647": {
      "op": "JUMPDEST"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4650": {
      "op": "DUP4"
    },
    "4651": {
      "op": "ADD"
    },
    "4652": {
      "op": "SWAP2"
    },
    "4653": {
      "op": "POP"
    },
    "4654": {
      "op": "DUP4"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4657": {
      "op": "DUP3"
    },
    "4658": {
      "op": "DUP6"
    },
    "4659": {
      "op": "ADD"
    },
    "4660": {
      "op": "ADD"
    },
    "4661": {
      "op": "GT"
    },
    "4662": {
      "op": "ISZERO"
    },
    "4663": {
      "op": "PUSH2",
      "value": "0x123F"
    },
    "4666": {
      "op": "JUMPI"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4669": {
      "op": "DUP1"
    },
    "4670": {
      "op": "REVERT"
    },
    "4671": {
      "op": "JUMPDEST"
    },
    "4672": {
      "op": "SWAP3"
    },
    "4673": {
      "op": "POP"
    },
    "4674": {
      "op": "SWAP3"
    },
    "4675": {
      "op": "SWAP1"
    },
    "4676": {
      "op": "POP"
    },
    "4677": {
      "jump": "o",
      "op": "JUMP"
    },
    "4678": {
      "op": "JUMPDEST"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4683": {
      "op": "DUP3"
    },
    "4684": {
      "op": "DUP5"
    },
    "4685": {
      "op": "SUB"
    },
    "4686": {
      "op": "SLT"
    },
    "4687": {
      "op": "ISZERO"
    },
    "4688": {
      "op": "PUSH2",
      "value": "0x1257"
    },
    "4691": {
      "op": "JUMPI"
    },
    "4692": {
      "op": "DUP1"
    },
    "4693": {
      "op": "DUP2"
    },
    "4694": {
      "op": "REVERT"
    },
    "4695": {
      "op": "JUMPDEST"
    },
    "4696": {
      "op": "DUP2"
    },
    "4697": {
      "op": "CALLDATALOAD"
    },
    "4698": {
      "op": "PUSH2",
      "value": "0x791"
    },
    "4701": {
      "op": "DUP2"
    },
    "4702": {
      "op": "PUSH2",
      "value": "0x1AE7"
    },
    "4705": {
      "jump": "i",
      "op": "JUMP"
    },
    "4706": {
      "op": "JUMPDEST"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4709": {
      "op": "DUP1"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4712": {
      "op": "DUP4"
    },
    "4713": {
      "op": "DUP6"
    },
    "4714": {
      "op": "SUB"
    },
    "4715": {
      "op": "SLT"
    },
    "4716": {
      "op": "ISZERO"
    },
    "4717": {
      "op": "PUSH2",
      "value": "0x1274"
    },
    "4720": {
      "op": "JUMPI"
    },
    "4721": {
      "op": "DUP1"
    },
    "4722": {
      "op": "DUP2"
    },
    "4723": {
      "op": "REVERT"
    },
    "4724": {
      "op": "JUMPDEST"
    },
    "4725": {
      "op": "DUP3"
    },
    "4726": {
      "op": "CALLDATALOAD"
    },
    "4727": {
      "op": "PUSH2",
      "value": "0x127F"
    },
    "4730": {
      "op": "DUP2"
    },
    "4731": {
      "op": "PUSH2",
      "value": "0x1AE7"
    },
    "4734": {
      "jump": "i",
      "op": "JUMP"
    },
    "4735": {
      "op": "JUMPDEST"
    },
    "4736": {
      "op": "SWAP5"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4739": {
      "op": "SWAP4"
    },
    "4740": {
      "op": "SWAP1"
    },
    "4741": {
      "op": "SWAP4"
    },
    "4742": {
      "op": "ADD"
    },
    "4743": {
      "op": "CALLDATALOAD"
    },
    "4744": {
      "op": "SWAP4"
    },
    "4745": {
      "op": "POP"
    },
    "4746": {
      "op": "POP"
    },
    "4747": {
      "op": "POP"
    },
    "4748": {
      "jump": "o",
      "op": "JUMP"
    },
    "4749": {
      "op": "JUMPDEST"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4752": {
      "op": "DUP1"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4755": {
      "op": "DUP1"
    },
    "4756": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4758": {
      "op": "DUP6"
    },
    "4759": {
      "op": "DUP8"
    },
    "4760": {
      "op": "SUB"
    },
    "4761": {
      "op": "SLT"
    },
    "4762": {
      "op": "ISZERO"
    },
    "4763": {
      "op": "PUSH2",
      "value": "0x12A2"
    },
    "4766": {
      "op": "JUMPI"
    },
    "4767": {
      "op": "DUP2"
    },
    "4768": {
      "op": "DUP3"
    },
    "4769": {
      "op": "REVERT"
    },
    "4770": {
      "op": "JUMPDEST"
    },
    "4771": {
      "op": "DUP5"
    },
    "4772": {
      "op": "CALLDATALOAD"
    },
    "4773": {
      "op": "PUSH2",
      "value": "0x12AD"
    },
    "4776": {
      "op": "DUP2"
    },
    "4777": {
      "op": "PUSH2",
      "value": "0x1AE7"
    },
    "4780": {
      "jump": "i",
      "op": "JUMP"
    },
    "4781": {
      "op": "JUMPDEST"
    },
    "4782": {
      "op": "SWAP4"
    },
    "4783": {
      "op": "POP"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4786": {
      "op": "DUP6"
    },
    "4787": {
      "op": "ADD"
    },
    "4788": {
      "op": "CALLDATALOAD"
    },
    "4789": {
      "op": "SWAP3"
    },
    "4790": {
      "op": "POP"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4793": {
      "op": "DUP6"
    },
    "4794": {
      "op": "ADD"
    },
    "4795": {
      "op": "CALLDATALOAD"
    },
    "4796": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4805": {
      "op": "DUP2"
    },
    "4806": {
      "op": "GT"
    },
    "4807": {
      "op": "ISZERO"
    },
    "4808": {
      "op": "PUSH2",
      "value": "0x12CF"
    },
    "4811": {
      "op": "JUMPI"
    },
    "4812": {
      "op": "DUP3"
    },
    "4813": {
      "op": "DUP4"
    },
    "4814": {
      "op": "REVERT"
    },
    "4815": {
      "op": "JUMPDEST"
    },
    "4816": {
      "op": "PUSH2",
      "value": "0x12DB"
    },
    "4819": {
      "op": "DUP8"
    },
    "4820": {
      "op": "DUP3"
    },
    "4821": {
      "op": "DUP9"
    },
    "4822": {
      "op": "ADD"
    },
    "4823": {
      "op": "PUSH2",
      "value": "0x11FF"
    },
    "4826": {
      "jump": "i",
      "op": "JUMP"
    },
    "4827": {
      "op": "JUMPDEST"
    },
    "4828": {
      "op": "SWAP6"
    },
    "4829": {
      "op": "SWAP9"
    },
    "4830": {
      "op": "SWAP5"
    },
    "4831": {
      "op": "SWAP8"
    },
    "4832": {
      "op": "POP"
    },
    "4833": {
      "op": "SWAP6"
    },
    "4834": {
      "op": "POP"
    },
    "4835": {
      "op": "POP"
    },
    "4836": {
      "op": "POP"
    },
    "4837": {
      "op": "POP"
    },
    "4838": {
      "jump": "o",
      "op": "JUMP"
    },
    "4839": {
      "op": "JUMPDEST"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4842": {
      "op": "DUP1"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4845": {
      "op": "DUP1"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4848": {
      "op": "DUP6"
    },
    "4849": {
      "op": "DUP8"
    },
    "4850": {
      "op": "SUB"
    },
    "4851": {
      "op": "SLT"
    },
    "4852": {
      "op": "ISZERO"
    },
    "4853": {
      "op": "PUSH2",
      "value": "0x12FC"
    },
    "4856": {
      "op": "JUMPI"
    },
    "4857": {
      "op": "DUP4"
    },
    "4858": {
      "op": "DUP5"
    },
    "4859": {
      "op": "REVERT"
    },
    "4860": {
      "op": "JUMPDEST"
    },
    "4861": {
      "op": "DUP5"
    },
    "4862": {
      "op": "CALLDATALOAD"
    },
    "4863": {
      "op": "PUSH2",
      "value": "0x1307"
    },
    "4866": {
      "op": "DUP2"
    },
    "4867": {
      "op": "PUSH2",
      "value": "0x1AE7"
    },
    "4870": {
      "jump": "i",
      "op": "JUMP"
    },
    "4871": {
      "op": "JUMPDEST"
    },
    "4872": {
      "op": "SWAP7"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4875": {
      "op": "DUP7"
    },
    "4876": {
      "op": "ADD"
    },
    "4877": {
      "op": "CALLDATALOAD"
    },
    "4878": {
      "op": "SWAP7"
    },
    "4879": {
      "op": "POP"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4882": {
      "op": "DUP7"
    },
    "4883": {
      "op": "ADD"
    },
    "4884": {
      "op": "CALLDATALOAD"
    },
    "4885": {
      "op": "SWAP6"
    },
    "4886": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4888": {
      "op": "ADD"
    },
    "4889": {
      "op": "CALLDATALOAD"
    },
    "4890": {
      "op": "SWAP5"
    },
    "4891": {
      "op": "POP"
    },
    "4892": {
      "op": "SWAP3"
    },
    "4893": {
      "op": "POP"
    },
    "4894": {
      "op": "POP"
    },
    "4895": {
      "op": "POP"
    },
    "4896": {
      "jump": "o",
      "op": "JUMP"
    },
    "4897": {
      "op": "JUMPDEST"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4902": {
      "op": "DUP3"
    },
    "4903": {
      "op": "DUP5"
    },
    "4904": {
      "op": "SUB"
    },
    "4905": {
      "op": "SLT"
    },
    "4906": {
      "op": "ISZERO"
    },
    "4907": {
      "op": "PUSH2",
      "value": "0x1332"
    },
    "4910": {
      "op": "JUMPI"
    },
    "4911": {
      "op": "DUP1"
    },
    "4912": {
      "op": "DUP2"
    },
    "4913": {
      "op": "REVERT"
    },
    "4914": {
      "op": "JUMPDEST"
    },
    "4915": {
      "op": "DUP2"
    },
    "4916": {
      "op": "MLOAD"
    },
    "4917": {
      "op": "DUP1"
    },
    "4918": {
      "op": "ISZERO"
    },
    "4919": {
      "op": "ISZERO"
    },
    "4920": {
      "op": "DUP2"
    },
    "4921": {
      "op": "EQ"
    },
    "4922": {
      "op": "PUSH2",
      "value": "0x791"
    },
    "4925": {
      "op": "JUMPI"
    },
    "4926": {
      "op": "DUP2"
    },
    "4927": {
      "op": "DUP3"
    },
    "4928": {
      "op": "REVERT"
    },
    "4929": {
      "op": "JUMPDEST"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4934": {
      "op": "DUP3"
    },
    "4935": {
      "op": "DUP5"
    },
    "4936": {
      "op": "SUB"
    },
    "4937": {
      "op": "SLT"
    },
    "4938": {
      "op": "ISZERO"
    },
    "4939": {
      "op": "PUSH2",
      "value": "0x1352"
    },
    "4942": {
      "op": "JUMPI"
    },
    "4943": {
      "op": "DUP1"
    },
    "4944": {
      "op": "DUP2"
    },
    "4945": {
      "op": "REVERT"
    },
    "4946": {
      "op": "JUMPDEST"
    },
    "4947": {
      "op": "POP"
    },
    "4948": {
      "op": "CALLDATALOAD"
    },
    "4949": {
      "op": "SWAP2"
    },
    "4950": {
      "op": "SWAP1"
    },
    "4951": {
      "op": "POP"
    },
    "4952": {
      "jump": "o",
      "op": "JUMP"
    },
    "4953": {
      "op": "JUMPDEST"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4956": {
      "op": "DUP1"
    },
    "4957": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4959": {
      "op": "DUP4"
    },
    "4960": {
      "op": "DUP6"
    },
    "4961": {
      "op": "SUB"
    },
    "4962": {
      "op": "SLT"
    },
    "4963": {
      "op": "ISZERO"
    },
    "4964": {
      "op": "PUSH2",
      "value": "0x136B"
    },
    "4967": {
      "op": "JUMPI"
    },
    "4968": {
      "op": "DUP2"
    },
    "4969": {
      "op": "DUP3"
    },
    "4970": {
      "op": "REVERT"
    },
    "4971": {
      "op": "JUMPDEST"
    },
    "4972": {
      "op": "DUP3"
    },
    "4973": {
      "op": "CALLDATALOAD"
    },
    "4974": {
      "op": "SWAP2"
    },
    "4975": {
      "op": "POP"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4978": {
      "op": "DUP4"
    },
    "4979": {
      "op": "ADD"
    },
    "4980": {
      "op": "CALLDATALOAD"
    },
    "4981": {
      "op": "PUSH2",
      "value": "0x137D"
    },
    "4984": {
      "op": "DUP2"
    },
    "4985": {
      "op": "PUSH2",
      "value": "0x1AE7"
    },
    "4988": {
      "jump": "i",
      "op": "JUMP"
    },
    "4989": {
      "op": "JUMPDEST"
    },
    "4990": {
      "op": "DUP1"
    },
    "4991": {
      "op": "SWAP2"
    },
    "4992": {
      "op": "POP"
    },
    "4993": {
      "op": "POP"
    },
    "4994": {
      "op": "SWAP3"
    },
    "4995": {
      "op": "POP"
    },
    "4996": {
      "op": "SWAP3"
    },
    "4997": {
      "op": "SWAP1"
    },
    "4998": {
      "op": "POP"
    },
    "4999": {
      "jump": "o",
      "op": "JUMP"
    },
    "5000": {
      "op": "JUMPDEST"
    },
    "5001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5003": {
      "op": "DUP1"
    },
    "5004": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5006": {
      "op": "DUP4"
    },
    "5007": {
      "op": "DUP6"
    },
    "5008": {
      "op": "SUB"
    },
    "5009": {
      "op": "SLT"
    },
    "5010": {
      "op": "ISZERO"
    },
    "5011": {
      "op": "PUSH2",
      "value": "0x139A"
    },
    "5014": {
      "op": "JUMPI"
    },
    "5015": {
      "op": "DUP2"
    },
    "5016": {
      "op": "DUP3"
    },
    "5017": {
      "op": "REVERT"
    },
    "5018": {
      "op": "JUMPDEST"
    },
    "5019": {
      "op": "POP"
    },
    "5020": {
      "op": "POP"
    },
    "5021": {
      "op": "DUP1"
    },
    "5022": {
      "op": "CALLDATALOAD"
    },
    "5023": {
      "op": "SWAP3"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5026": {
      "op": "SWAP1"
    },
    "5027": {
      "op": "SWAP2"
    },
    "5028": {
      "op": "ADD"
    },
    "5029": {
      "op": "CALLDATALOAD"
    },
    "5030": {
      "op": "SWAP2"
    },
    "5031": {
      "op": "POP"
    },
    "5032": {
      "jump": "o",
      "op": "JUMP"
    },
    "5033": {
      "op": "JUMPDEST"
    },
    "5034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5036": {
      "op": "DUP1"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5039": {
      "op": "DUP1"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5044": {
      "op": "DUP7"
    },
    "5045": {
      "op": "DUP9"
    },
    "5046": {
      "op": "SUB"
    },
    "5047": {
      "op": "SLT"
    },
    "5048": {
      "op": "ISZERO"
    },
    "5049": {
      "op": "PUSH2",
      "value": "0x13C0"
    },
    "5052": {
      "op": "JUMPI"
    },
    "5053": {
      "op": "DUP1"
    },
    "5054": {
      "op": "DUP2"
    },
    "5055": {
      "op": "REVERT"
    },
    "5056": {
      "op": "JUMPDEST"
    },
    "5057": {
      "op": "DUP6"
    },
    "5058": {
      "op": "CALLDATALOAD"
    },
    "5059": {
      "op": "PUSH2",
      "value": "0x13CB"
    },
    "5062": {
      "op": "DUP2"
    },
    "5063": {
      "op": "PUSH2",
      "value": "0x1AE7"
    },
    "5066": {
      "jump": "i",
      "op": "JUMP"
    },
    "5067": {
      "op": "JUMPDEST"
    },
    "5068": {
      "op": "SWAP5"
    },
    "5069": {
      "op": "POP"
    },
    "5070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5072": {
      "op": "DUP7"
    },
    "5073": {
      "op": "ADD"
    },
    "5074": {
      "op": "CALLDATALOAD"
    },
    "5075": {
      "op": "PUSH2",
      "value": "0x13DB"
    },
    "5078": {
      "op": "DUP2"
    },
    "5079": {
      "op": "PUSH2",
      "value": "0x1AE7"
    },
    "5082": {
      "jump": "i",
      "op": "JUMP"
    },
    "5083": {
      "op": "JUMPDEST"
    },
    "5084": {
      "op": "SWAP4"
    },
    "5085": {
      "op": "POP"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5088": {
      "op": "DUP7"
    },
    "5089": {
      "op": "ADD"
    },
    "5090": {
      "op": "CALLDATALOAD"
    },
    "5091": {
      "op": "SWAP3"
    },
    "5092": {
      "op": "POP"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5095": {
      "op": "DUP7"
    },
    "5096": {
      "op": "ADD"
    },
    "5097": {
      "op": "CALLDATALOAD"
    },
    "5098": {
      "op": "PUSH2",
      "value": "0x13F2"
    },
    "5101": {
      "op": "DUP2"
    },
    "5102": {
      "op": "PUSH2",
      "value": "0x1AE7"
    },
    "5105": {
      "jump": "i",
      "op": "JUMP"
    },
    "5106": {
      "op": "JUMPDEST"
    },
    "5107": {
      "op": "SWAP2"
    },
    "5108": {
      "op": "POP"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5111": {
      "op": "DUP7"
    },
    "5112": {
      "op": "ADD"
    },
    "5113": {
      "op": "CALLDATALOAD"
    },
    "5114": {
      "op": "PUSH2",
      "value": "0x1402"
    },
    "5117": {
      "op": "DUP2"
    },
    "5118": {
      "op": "PUSH2",
      "value": "0x1AE7"
    },
    "5121": {
      "jump": "i",
      "op": "JUMP"
    },
    "5122": {
      "op": "JUMPDEST"
    },
    "5123": {
      "op": "DUP1"
    },
    "5124": {
      "op": "SWAP2"
    },
    "5125": {
      "op": "POP"
    },
    "5126": {
      "op": "POP"
    },
    "5127": {
      "op": "SWAP3"
    },
    "5128": {
      "op": "SWAP6"
    },
    "5129": {
      "op": "POP"
    },
    "5130": {
      "op": "SWAP3"
    },
    "5131": {
      "op": "SWAP6"
    },
    "5132": {
      "op": "SWAP1"
    },
    "5133": {
      "op": "SWAP4"
    },
    "5134": {
      "op": "POP"
    },
    "5135": {
      "jump": "o",
      "op": "JUMP"
    },
    "5136": {
      "op": "JUMPDEST"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5139": {
      "op": "DUP1"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5144": {
      "op": "DUP5"
    },
    "5145": {
      "op": "DUP7"
    },
    "5146": {
      "op": "SUB"
    },
    "5147": {
      "op": "SLT"
    },
    "5148": {
      "op": "ISZERO"
    },
    "5149": {
      "op": "PUSH2",
      "value": "0x1424"
    },
    "5152": {
      "op": "JUMPI"
    },
    "5153": {
      "op": "DUP3"
    },
    "5154": {
      "op": "DUP4"
    },
    "5155": {
      "op": "REVERT"
    },
    "5156": {
      "op": "JUMPDEST"
    },
    "5157": {
      "op": "DUP4"
    },
    "5158": {
      "op": "CALLDATALOAD"
    },
    "5159": {
      "op": "SWAP3"
    },
    "5160": {
      "op": "POP"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5163": {
      "op": "DUP5"
    },
    "5164": {
      "op": "ADD"
    },
    "5165": {
      "op": "CALLDATALOAD"
    },
    "5166": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5175": {
      "op": "DUP2"
    },
    "5176": {
      "op": "GT"
    },
    "5177": {
      "op": "ISZERO"
    },
    "5178": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "5181": {
      "op": "JUMPI"
    },
    "5182": {
      "op": "DUP3"
    },
    "5183": {
      "op": "DUP4"
    },
    "5184": {
      "op": "REVERT"
    },
    "5185": {
      "op": "JUMPDEST"
    },
    "5186": {
      "op": "PUSH2",
      "value": "0x144D"
    },
    "5189": {
      "op": "DUP7"
    },
    "5190": {
      "op": "DUP3"
    },
    "5191": {
      "op": "DUP8"
    },
    "5192": {
      "op": "ADD"
    },
    "5193": {
      "op": "PUSH2",
      "value": "0x11FF"
    },
    "5196": {
      "jump": "i",
      "op": "JUMP"
    },
    "5197": {
      "op": "JUMPDEST"
    },
    "5198": {
      "op": "SWAP5"
    },
    "5199": {
      "op": "SWAP8"
    },
    "5200": {
      "op": "SWAP1"
    },
    "5201": {
      "op": "SWAP7"
    },
    "5202": {
      "op": "POP"
    },
    "5203": {
      "op": "SWAP4"
    },
    "5204": {
      "op": "SWAP5"
    },
    "5205": {
      "op": "POP"
    },
    "5206": {
      "op": "POP"
    },
    "5207": {
      "op": "POP"
    },
    "5208": {
      "op": "POP"
    },
    "5209": {
      "jump": "o",
      "op": "JUMP"
    },
    "5210": {
      "op": "JUMPDEST"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5213": {
      "op": "DUP3"
    },
    "5214": {
      "op": "MLOAD"
    },
    "5215": {
      "op": "PUSH2",
      "value": "0x146C"
    },
    "5218": {
      "op": "DUP2"
    },
    "5219": {
      "op": "DUP5"
    },
    "5220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5222": {
      "op": "DUP8"
    },
    "5223": {
      "op": "ADD"
    },
    "5224": {
      "op": "PUSH2",
      "value": "0x1ABB"
    },
    "5227": {
      "jump": "i",
      "op": "JUMP"
    },
    "5228": {
      "op": "JUMPDEST"
    },
    "5229": {
      "op": "SWAP2"
    },
    "5230": {
      "op": "SWAP1"
    },
    "5231": {
      "op": "SWAP2"
    },
    "5232": {
      "op": "ADD"
    },
    "5233": {
      "op": "SWAP3"
    },
    "5234": {
      "op": "SWAP2"
    },
    "5235": {
      "op": "POP"
    },
    "5236": {
      "op": "POP"
    },
    "5237": {
      "jump": "o",
      "op": "JUMP"
    },
    "5238": {
      "op": "JUMPDEST"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5245": {
      "op": "SHL"
    },
    "5246": {
      "op": "SUB"
    },
    "5247": {
      "op": "SWAP2"
    },
    "5248": {
      "op": "SWAP1"
    },
    "5249": {
      "op": "SWAP2"
    },
    "5250": {
      "op": "AND"
    },
    "5251": {
      "op": "DUP2"
    },
    "5252": {
      "op": "MSTORE"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5255": {
      "op": "ADD"
    },
    "5256": {
      "op": "SWAP1"
    },
    "5257": {
      "jump": "o",
      "op": "JUMP"
    },
    "5258": {
      "op": "JUMPDEST"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5265": {
      "op": "SHL"
    },
    "5266": {
      "op": "SUB"
    },
    "5267": {
      "op": "SWAP4"
    },
    "5268": {
      "op": "DUP5"
    },
    "5269": {
      "op": "AND"
    },
    "5270": {
      "op": "DUP2"
    },
    "5271": {
      "op": "MSTORE"
    },
    "5272": {
      "op": "SWAP2"
    },
    "5273": {
      "op": "SWAP1"
    },
    "5274": {
      "op": "SWAP3"
    },
    "5275": {
      "op": "AND"
    },
    "5276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5278": {
      "op": "DUP3"
    },
    "5279": {
      "op": "ADD"
    },
    "5280": {
      "op": "MSTORE"
    },
    "5281": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5283": {
      "op": "DUP2"
    },
    "5284": {
      "op": "ADD"
    },
    "5285": {
      "op": "SWAP2"
    },
    "5286": {
      "op": "SWAP1"
    },
    "5287": {
      "op": "SWAP2"
    },
    "5288": {
      "op": "MSTORE"
    },
    "5289": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5291": {
      "op": "ADD"
    },
    "5292": {
      "op": "SWAP1"
    },
    "5293": {
      "jump": "o",
      "op": "JUMP"
    },
    "5294": {
      "op": "JUMPDEST"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5301": {
      "op": "SHL"
    },
    "5302": {
      "op": "SUB"
    },
    "5303": {
      "op": "SWAP3"
    },
    "5304": {
      "op": "SWAP1"
    },
    "5305": {
      "op": "SWAP3"
    },
    "5306": {
      "op": "AND"
    },
    "5307": {
      "op": "DUP3"
    },
    "5308": {
      "op": "MSTORE"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5311": {
      "op": "DUP3"
    },
    "5312": {
      "op": "ADD"
    },
    "5313": {
      "op": "MSTORE"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5316": {
      "op": "ADD"
    },
    "5317": {
      "op": "SWAP1"
    },
    "5318": {
      "jump": "o",
      "op": "JUMP"
    },
    "5319": {
      "op": "JUMPDEST"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5322": {
      "op": "DUP1"
    },
    "5323": {
      "op": "DUP3"
    },
    "5324": {
      "op": "MSTORE"
    },
    "5325": {
      "op": "DUP3"
    },
    "5326": {
      "op": "MLOAD"
    },
    "5327": {
      "op": "DUP3"
    },
    "5328": {
      "op": "DUP3"
    },
    "5329": {
      "op": "ADD"
    },
    "5330": {
      "op": "DUP2"
    },
    "5331": {
      "op": "SWAP1"
    },
    "5332": {
      "op": "MSTORE"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5335": {
      "op": "SWAP2"
    },
    "5336": {
      "op": "SWAP1"
    },
    "5337": {
      "op": "DUP5"
    },
    "5338": {
      "op": "DUP3"
    },
    "5339": {
      "op": "ADD"
    },
    "5340": {
      "op": "SWAP1"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5343": {
      "op": "DUP6"
    },
    "5344": {
      "op": "ADD"
    },
    "5345": {
      "op": "SWAP1"
    },
    "5346": {
      "op": "DUP5"
    },
    "5347": {
      "op": "JUMPDEST"
    },
    "5348": {
      "op": "DUP2"
    },
    "5349": {
      "op": "DUP2"
    },
    "5350": {
      "op": "LT"
    },
    "5351": {
      "op": "ISZERO"
    },
    "5352": {
      "op": "PUSH2",
      "value": "0x1508"
    },
    "5355": {
      "op": "JUMPI"
    },
    "5356": {
      "op": "DUP4"
    },
    "5357": {
      "op": "MLOAD"
    },
    "5358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5364": {
      "op": "SHL"
    },
    "5365": {
      "op": "SUB"
    },
    "5366": {
      "op": "AND"
    },
    "5367": {
      "op": "DUP4"
    },
    "5368": {
      "op": "MSTORE"
    },
    "5369": {
      "op": "SWAP3"
    },
    "5370": {
      "op": "DUP5"
    },
    "5371": {
      "op": "ADD"
    },
    "5372": {
      "op": "SWAP3"
    },
    "5373": {
      "op": "SWAP2"
    },
    "5374": {
      "op": "DUP5"
    },
    "5375": {
      "op": "ADD"
    },
    "5376": {
      "op": "SWAP2"
    },
    "5377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5379": {
      "op": "ADD"
    },
    "5380": {
      "op": "PUSH2",
      "value": "0x14E3"
    },
    "5383": {
      "op": "JUMP"
    },
    "5384": {
      "op": "JUMPDEST"
    },
    "5385": {
      "op": "POP"
    },
    "5386": {
      "op": "SWAP1"
    },
    "5387": {
      "op": "SWAP7"
    },
    "5388": {
      "op": "SWAP6"
    },
    "5389": {
      "op": "POP"
    },
    "5390": {
      "op": "POP"
    },
    "5391": {
      "op": "POP"
    },
    "5392": {
      "op": "POP"
    },
    "5393": {
      "op": "POP"
    },
    "5394": {
      "op": "POP"
    },
    "5395": {
      "jump": "o",
      "op": "JUMP"
    },
    "5396": {
      "op": "JUMPDEST"
    },
    "5397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5399": {
      "op": "DUP1"
    },
    "5400": {
      "op": "DUP3"
    },
    "5401": {
      "op": "MSTORE"
    },
    "5402": {
      "op": "DUP3"
    },
    "5403": {
      "op": "MLOAD"
    },
    "5404": {
      "op": "DUP3"
    },
    "5405": {
      "op": "DUP3"
    },
    "5406": {
      "op": "ADD"
    },
    "5407": {
      "op": "DUP2"
    },
    "5408": {
      "op": "SWAP1"
    },
    "5409": {
      "op": "MSTORE"
    },
    "5410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5412": {
      "op": "SWAP2"
    },
    "5413": {
      "op": "SWAP1"
    },
    "5414": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5416": {
      "op": "SWAP1"
    },
    "5417": {
      "op": "DUP2"
    },
    "5418": {
      "op": "DUP6"
    },
    "5419": {
      "op": "ADD"
    },
    "5420": {
      "op": "SWAP1"
    },
    "5421": {
      "op": "DUP7"
    },
    "5422": {
      "op": "DUP5"
    },
    "5423": {
      "op": "ADD"
    },
    "5424": {
      "op": "DUP6"
    },
    "5425": {
      "op": "JUMPDEST"
    },
    "5426": {
      "op": "DUP3"
    },
    "5427": {
      "op": "DUP2"
    },
    "5428": {
      "op": "LT"
    },
    "5429": {
      "op": "ISZERO"
    },
    "5430": {
      "op": "PUSH2",
      "value": "0x156B"
    },
    "5433": {
      "op": "JUMPI"
    },
    "5434": {
      "op": "DUP2"
    },
    "5435": {
      "op": "MLOAD"
    },
    "5436": {
      "op": "DUP1"
    },
    "5437": {
      "op": "MLOAD"
    },
    "5438": {
      "op": "DUP6"
    },
    "5439": {
      "op": "MSTORE"
    },
    "5440": {
      "op": "DUP7"
    },
    "5441": {
      "op": "DUP2"
    },
    "5442": {
      "op": "ADD"
    },
    "5443": {
      "op": "MLOAD"
    },
    "5444": {
      "op": "DUP8"
    },
    "5445": {
      "op": "DUP7"
    },
    "5446": {
      "op": "ADD"
    },
    "5447": {
      "op": "MSTORE"
    },
    "5448": {
      "op": "DUP6"
    },
    "5449": {
      "op": "DUP2"
    },
    "5450": {
      "op": "ADD"
    },
    "5451": {
      "op": "MLOAD"
    },
    "5452": {
      "op": "DUP7"
    },
    "5453": {
      "op": "DUP7"
    },
    "5454": {
      "op": "ADD"
    },
    "5455": {
      "op": "MSTORE"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5458": {
      "op": "SWAP1"
    },
    "5459": {
      "op": "DUP2"
    },
    "5460": {
      "op": "ADD"
    },
    "5461": {
      "op": "MLOAD"
    },
    "5462": {
      "op": "SWAP1"
    },
    "5463": {
      "op": "DUP6"
    },
    "5464": {
      "op": "ADD"
    },
    "5465": {
      "op": "MSTORE"
    },
    "5466": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5468": {
      "op": "SWAP1"
    },
    "5469": {
      "op": "SWAP4"
    },
    "5470": {
      "op": "ADD"
    },
    "5471": {
      "op": "SWAP3"
    },
    "5472": {
      "op": "SWAP1"
    },
    "5473": {
      "op": "DUP6"
    },
    "5474": {
      "op": "ADD"
    },
    "5475": {
      "op": "SWAP1"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5478": {
      "op": "ADD"
    },
    "5479": {
      "op": "PUSH2",
      "value": "0x1531"
    },
    "5482": {
      "op": "JUMP"
    },
    "5483": {
      "op": "JUMPDEST"
    },
    "5484": {
      "op": "POP"
    },
    "5485": {
      "op": "SWAP2"
    },
    "5486": {
      "op": "SWAP8"
    },
    "5487": {
      "op": "SWAP7"
    },
    "5488": {
      "op": "POP"
    },
    "5489": {
      "op": "POP"
    },
    "5490": {
      "op": "POP"
    },
    "5491": {
      "op": "POP"
    },
    "5492": {
      "op": "POP"
    },
    "5493": {
      "op": "POP"
    },
    "5494": {
      "op": "POP"
    },
    "5495": {
      "jump": "o",
      "op": "JUMP"
    },
    "5496": {
      "op": "JUMPDEST"
    },
    "5497": {
      "op": "SWAP1"
    },
    "5498": {
      "op": "ISZERO"
    },
    "5499": {
      "op": "ISZERO"
    },
    "5500": {
      "op": "DUP2"
    },
    "5501": {
      "op": "MSTORE"
    },
    "5502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5504": {
      "op": "ADD"
    },
    "5505": {
      "op": "SWAP1"
    },
    "5506": {
      "jump": "o",
      "op": "JUMP"
    },
    "5507": {
      "op": "JUMPDEST"
    },
    "5508": {
      "op": "SWAP1"
    },
    "5509": {
      "op": "DUP2"
    },
    "5510": {
      "op": "MSTORE"
    },
    "5511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5513": {
      "op": "ADD"
    },
    "5514": {
      "op": "SWAP1"
    },
    "5515": {
      "jump": "o",
      "op": "JUMP"
    },
    "5516": {
      "op": "JUMPDEST"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5521": {
      "op": "DUP3"
    },
    "5522": {
      "op": "MSTORE"
    },
    "5523": {
      "op": "DUP3"
    },
    "5524": {
      "op": "MLOAD"
    },
    "5525": {
      "op": "DUP1"
    },
    "5526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5528": {
      "op": "DUP5"
    },
    "5529": {
      "op": "ADD"
    },
    "5530": {
      "op": "MSTORE"
    },
    "5531": {
      "op": "PUSH2",
      "value": "0x15AB"
    },
    "5534": {
      "op": "DUP2"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5537": {
      "op": "DUP6"
    },
    "5538": {
      "op": "ADD"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5541": {
      "op": "DUP8"
    },
    "5542": {
      "op": "ADD"
    },
    "5543": {
      "op": "PUSH2",
      "value": "0x1ABB"
    },
    "5546": {
      "jump": "i",
      "op": "JUMP"
    },
    "5547": {
      "op": "JUMPDEST"
    },
    "5548": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5550": {
      "op": "ADD"
    },
    "5551": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5553": {
      "op": "NOT"
    },
    "5554": {
      "op": "AND"
    },
    "5555": {
      "op": "SWAP2"
    },
    "5556": {
      "op": "SWAP1"
    },
    "5557": {
      "op": "SWAP2"
    },
    "5558": {
      "op": "ADD"
    },
    "5559": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5561": {
      "op": "ADD"
    },
    "5562": {
      "op": "SWAP3"
    },
    "5563": {
      "op": "SWAP2"
    },
    "5564": {
      "op": "POP"
    },
    "5565": {
      "op": "POP"
    },
    "5566": {
      "jump": "o",
      "op": "JUMP"
    },
    "5567": {
      "op": "JUMPDEST"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5570": {
      "op": "DUP1"
    },
    "5571": {
      "op": "DUP3"
    },
    "5572": {
      "op": "MSTORE"
    },
    "5573": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "5575": {
      "op": "SWAP1"
    },
    "5576": {
      "op": "DUP3"
    },
    "5577": {
      "op": "ADD"
    },
    "5578": {
      "op": "MSTORE"
    },
    "5579": {
      "op": "PUSH9",
      "value": "0x37B7363CA0B236B4B7"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5591": {
      "op": "SHL"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5594": {
      "op": "DUP3"
    },
    "5595": {
      "op": "ADD"
    },
    "5596": {
      "op": "MSTORE"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5599": {
      "op": "ADD"
    },
    "5600": {
      "op": "SWAP1"
    },
    "5601": {
      "jump": "o",
      "op": "JUMP"
    },
    "5602": {
      "op": "JUMPDEST"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5605": {
      "op": "DUP1"
    },
    "5606": {
      "op": "DUP3"
    },
    "5607": {
      "op": "MSTORE"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5610": {
      "op": "SWAP1"
    },
    "5611": {
      "op": "DUP3"
    },
    "5612": {
      "op": "ADD"
    },
    "5613": {
      "op": "MSTORE"
    },
    "5614": {
      "op": "PUSH32",
      "value": "0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5649": {
      "op": "DUP3"
    },
    "5650": {
      "op": "ADD"
    },
    "5651": {
      "op": "MSTORE"
    },
    "5652": {
      "op": "PUSH2",
      "value": "0x6473"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5657": {
      "op": "SHL"
    },
    "5658": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5660": {
      "op": "DUP3"
    },
    "5661": {
      "op": "ADD"
    },
    "5662": {
      "op": "MSTORE"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5665": {
      "op": "ADD"
    },
    "5666": {
      "op": "SWAP1"
    },
    "5667": {
      "jump": "o",
      "op": "JUMP"
    },
    "5668": {
      "op": "JUMPDEST"
    },
    "5669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5671": {
      "op": "DUP1"
    },
    "5672": {
      "op": "DUP3"
    },
    "5673": {
      "op": "MSTORE"
    },
    "5674": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "5676": {
      "op": "SWAP1"
    },
    "5677": {
      "op": "DUP3"
    },
    "5678": {
      "op": "ADD"
    },
    "5679": {
      "op": "MSTORE"
    },
    "5680": {
      "op": "PUSH15",
      "value": "0x37B7363CAA37B5B2B72637B1B5B2B9"
    },
    "5696": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "5698": {
      "op": "SHL"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5701": {
      "op": "DUP3"
    },
    "5702": {
      "op": "ADD"
    },
    "5703": {
      "op": "MSTORE"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5706": {
      "op": "ADD"
    },
    "5707": {
      "op": "SWAP1"
    },
    "5708": {
      "jump": "o",
      "op": "JUMP"
    },
    "5709": {
      "op": "JUMPDEST"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5712": {
      "op": "DUP1"
    },
    "5713": {
      "op": "DUP3"
    },
    "5714": {
      "op": "MSTORE"
    },
    "5715": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "5717": {
      "op": "SWAP1"
    },
    "5718": {
      "op": "DUP3"
    },
    "5719": {
      "op": "ADD"
    },
    "5720": {
      "op": "MSTORE"
    },
    "5721": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5756": {
      "op": "DUP3"
    },
    "5757": {
      "op": "ADD"
    },
    "5758": {
      "op": "MSTORE"
    },
    "5759": {
      "op": "PUSH15",
      "value": "0x818591B5A5B881D1BC819DC985B9D"
    },
    "5775": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "5777": {
      "op": "SHL"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5780": {
      "op": "DUP3"
    },
    "5781": {
      "op": "ADD"
    },
    "5782": {
      "op": "MSTORE"
    },
    "5783": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5785": {
      "op": "ADD"
    },
    "5786": {
      "op": "SWAP1"
    },
    "5787": {
      "jump": "o",
      "op": "JUMP"
    },
    "5788": {
      "op": "JUMPDEST"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5791": {
      "op": "DUP1"
    },
    "5792": {
      "op": "DUP3"
    },
    "5793": {
      "op": "MSTORE"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "5796": {
      "op": "SWAP1"
    },
    "5797": {
      "op": "DUP3"
    },
    "5798": {
      "op": "ADD"
    },
    "5799": {
      "op": "MSTORE"
    },
    "5800": {
      "op": "PUSH32",
      "value": "0x4261646765724765797365723A205363686564756C652063616E6E6F74207374"
    },
    "5833": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5835": {
      "op": "DUP3"
    },
    "5836": {
      "op": "ADD"
    },
    "5837": {
      "op": "MSTORE"
    },
    "5838": {
      "op": "PUSH32",
      "value": "0x617274206265666F726520676C6F62616C2073746172742074696D6500000000"
    },
    "5871": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5873": {
      "op": "DUP3"
    },
    "5874": {
      "op": "ADD"
    },
    "5875": {
      "op": "MSTORE"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5878": {
      "op": "ADD"
    },
    "5879": {
      "op": "SWAP1"
    },
    "5880": {
      "jump": "o",
      "op": "JUMP"
    },
    "5881": {
      "op": "JUMPDEST"
    },
    "5882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5884": {
      "op": "DUP1"
    },
    "5885": {
      "op": "DUP3"
    },
    "5886": {
      "op": "MSTORE"
    },
    "5887": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "5889": {
      "op": "SWAP1"
    },
    "5890": {
      "op": "DUP3"
    },
    "5891": {
      "op": "ADD"
    },
    "5892": {
      "op": "MSTORE"
    },
    "5893": {
      "op": "PUSH32",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "5926": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5928": {
      "op": "DUP3"
    },
    "5929": {
      "op": "ADD"
    },
    "5930": {
      "op": "MSTORE"
    },
    "5931": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5933": {
      "op": "ADD"
    },
    "5934": {
      "op": "SWAP1"
    },
    "5935": {
      "jump": "o",
      "op": "JUMP"
    },
    "5936": {
      "op": "JUMPDEST"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5939": {
      "op": "DUP1"
    },
    "5940": {
      "op": "DUP3"
    },
    "5941": {
      "op": "MSTORE"
    },
    "5942": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5944": {
      "op": "SWAP1"
    },
    "5945": {
      "op": "DUP3"
    },
    "5946": {
      "op": "ADD"
    },
    "5947": {
      "op": "MSTORE"
    },
    "5948": {
      "op": "PUSH32",
      "value": "0x4261646765724765797365723A20756E7374616B6520616D6F756E7420697320"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5983": {
      "op": "DUP3"
    },
    "5984": {
      "op": "ADD"
    },
    "5985": {
      "op": "MSTORE"
    },
    "5986": {
      "op": "PUSH4",
      "value": "0x7A65726F"
    },
    "5991": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5993": {
      "op": "SHL"
    },
    "5994": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5996": {
      "op": "DUP3"
    },
    "5997": {
      "op": "ADD"
    },
    "5998": {
      "op": "MSTORE"
    },
    "5999": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6001": {
      "op": "ADD"
    },
    "6002": {
      "op": "SWAP1"
    },
    "6003": {
      "jump": "o",
      "op": "JUMP"
    },
    "6004": {
      "op": "JUMPDEST"
    },
    "6005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6007": {
      "op": "DUP1"
    },
    "6008": {
      "op": "DUP3"
    },
    "6009": {
      "op": "MSTORE"
    },
    "6010": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "6012": {
      "op": "SWAP1"
    },
    "6013": {
      "op": "DUP3"
    },
    "6014": {
      "op": "ADD"
    },
    "6015": {
      "op": "MSTORE"
    },
    "6016": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
    },
    "6049": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6051": {
      "op": "DUP3"
    },
    "6052": {
      "op": "ADD"
    },
    "6053": {
      "op": "MSTORE"
    },
    "6054": {
      "op": "PUSH16",
      "value": "0x2061646D696E20746F207265766F6B65"
    },
    "6071": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6073": {
      "op": "SHL"
    },
    "6074": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6076": {
      "op": "DUP3"
    },
    "6077": {
      "op": "ADD"
    },
    "6078": {
      "op": "MSTORE"
    },
    "6079": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6081": {
      "op": "ADD"
    },
    "6082": {
      "op": "SWAP1"
    },
    "6083": {
      "jump": "o",
      "op": "JUMP"
    },
    "6084": {
      "op": "JUMPDEST"
    },
    "6085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6087": {
      "op": "DUP1"
    },
    "6088": {
      "op": "DUP3"
    },
    "6089": {
      "op": "MSTORE"
    },
    "6090": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6092": {
      "op": "SWAP1"
    },
    "6093": {
      "op": "DUP3"
    },
    "6094": {
      "op": "ADD"
    },
    "6095": {
      "op": "MSTORE"
    },
    "6096": {
      "op": "PUSH32",
      "value": "0x4261646765724765797365723A207374616B6520616D6F756E74206973207A65"
    },
    "6129": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6131": {
      "op": "DUP3"
    },
    "6132": {
      "op": "ADD"
    },
    "6133": {
      "op": "MSTORE"
    },
    "6134": {
      "op": "PUSH2",
      "value": "0x726F"
    },
    "6137": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6139": {
      "op": "SHL"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6142": {
      "op": "DUP3"
    },
    "6143": {
      "op": "ADD"
    },
    "6144": {
      "op": "MSTORE"
    },
    "6145": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6147": {
      "op": "ADD"
    },
    "6148": {
      "op": "SWAP1"
    },
    "6149": {
      "jump": "o",
      "op": "JUMP"
    },
    "6150": {
      "op": "JUMPDEST"
    },
    "6151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6153": {
      "op": "DUP1"
    },
    "6154": {
      "op": "DUP3"
    },
    "6155": {
      "op": "MSTORE"
    },
    "6156": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "6158": {
      "op": "SWAP1"
    },
    "6159": {
      "op": "DUP3"
    },
    "6160": {
      "op": "ADD"
    },
    "6161": {
      "op": "MSTORE"
    },
    "6162": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6197": {
      "op": "DUP3"
    },
    "6198": {
      "op": "ADD"
    },
    "6199": {
      "op": "MSTORE"
    },
    "6200": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "6215": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "6217": {
      "op": "SHL"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6220": {
      "op": "DUP3"
    },
    "6221": {
      "op": "ADD"
    },
    "6222": {
      "op": "MSTORE"
    },
    "6223": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6225": {
      "op": "ADD"
    },
    "6226": {
      "op": "SWAP1"
    },
    "6227": {
      "jump": "o",
      "op": "JUMP"
    },
    "6228": {
      "op": "JUMPDEST"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6231": {
      "op": "DUP1"
    },
    "6232": {
      "op": "DUP3"
    },
    "6233": {
      "op": "MSTORE"
    },
    "6234": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "6236": {
      "op": "SWAP1"
    },
    "6237": {
      "op": "DUP3"
    },
    "6238": {
      "op": "ADD"
    },
    "6239": {
      "op": "MSTORE"
    },
    "6240": {
      "op": "PUSH32",
      "value": "0x4261646765724765797365723A2062656E6566696369617279206973207A6572"
    },
    "6273": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6275": {
      "op": "DUP3"
    },
    "6276": {
      "op": "ADD"
    },
    "6277": {
      "op": "MSTORE"
    },
    "6278": {
      "op": "PUSH9",
      "value": "0x6F2061646472657373"
    },
    "6288": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "6290": {
      "op": "SHL"
    },
    "6291": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6293": {
      "op": "DUP3"
    },
    "6294": {
      "op": "ADD"
    },
    "6295": {
      "op": "MSTORE"
    },
    "6296": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6298": {
      "op": "ADD"
    },
    "6299": {
      "op": "SWAP1"
    },
    "6300": {
      "jump": "o",
      "op": "JUMP"
    },
    "6301": {
      "op": "JUMPDEST"
    },
    "6302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6304": {
      "op": "DUP1"
    },
    "6305": {
      "op": "DUP3"
    },
    "6306": {
      "op": "MSTORE"
    },
    "6307": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "6309": {
      "op": "SWAP1"
    },
    "6310": {
      "op": "DUP3"
    },
    "6311": {
      "op": "ADD"
    },
    "6312": {
      "op": "MSTORE"
    },
    "6313": {
      "op": "PUSH32",
      "value": "0x4261646765724765797365723A20546F6B656E206E6F7420617070726F766564"
    },
    "6346": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6348": {
      "op": "DUP3"
    },
    "6349": {
      "op": "ADD"
    },
    "6350": {
      "op": "MSTORE"
    },
    "6351": {
      "op": "PUSH9",
      "value": "0x10313C9030B236B4B7"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "6363": {
      "op": "SHL"
    },
    "6364": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6366": {
      "op": "DUP3"
    },
    "6367": {
      "op": "ADD"
    },
    "6368": {
      "op": "MSTORE"
    },
    "6369": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6371": {
      "op": "ADD"
    },
    "6372": {
      "op": "SWAP1"
    },
    "6373": {
      "jump": "o",
      "op": "JUMP"
    },
    "6374": {
      "op": "JUMPDEST"
    },
    "6375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6377": {
      "op": "DUP1"
    },
    "6378": {
      "op": "DUP3"
    },
    "6379": {
      "op": "MSTORE"
    },
    "6380": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6382": {
      "op": "SWAP1"
    },
    "6383": {
      "op": "DUP3"
    },
    "6384": {
      "op": "ADD"
    },
    "6385": {
      "op": "MSTORE"
    },
    "6386": {
      "op": "PUSH32",
      "value": "0x4261646765724765797365723A20446973747269627574696F6E206E6F742073"
    },
    "6419": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6421": {
      "op": "DUP3"
    },
    "6422": {
      "op": "ADD"
    },
    "6423": {
      "op": "MSTORE"
    },
    "6424": {
      "op": "PUSH6",
      "value": "0x1D185C9D1959"
    },
    "6431": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "6433": {
      "op": "SHL"
    },
    "6434": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6436": {
      "op": "DUP3"
    },
    "6437": {
      "op": "ADD"
    },
    "6438": {
      "op": "MSTORE"
    },
    "6439": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6441": {
      "op": "ADD"
    },
    "6442": {
      "op": "SWAP1"
    },
    "6443": {
      "jump": "o",
      "op": "JUMP"
    },
    "6444": {
      "op": "JUMPDEST"
    },
    "6445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6447": {
      "op": "DUP1"
    },
    "6448": {
      "op": "DUP3"
    },
    "6449": {
      "op": "MSTORE"
    },
    "6450": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "6452": {
      "op": "SWAP1"
    },
    "6453": {
      "op": "DUP3"
    },
    "6454": {
      "op": "ADD"
    },
    "6455": {
      "op": "MSTORE"
    },
    "6456": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6491": {
      "op": "DUP3"
    },
    "6492": {
      "op": "ADD"
    },
    "6493": {
      "op": "MSTORE"
    },
    "6494": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6496": {
      "op": "ADD"
    },
    "6497": {
      "op": "SWAP1"
    },
    "6498": {
      "jump": "o",
      "op": "JUMP"
    },
    "6499": {
      "op": "JUMPDEST"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6502": {
      "op": "DUP1"
    },
    "6503": {
      "op": "DUP3"
    },
    "6504": {
      "op": "MSTORE"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "6507": {
      "op": "SWAP1"
    },
    "6508": {
      "op": "DUP3"
    },
    "6509": {
      "op": "ADD"
    },
    "6510": {
      "op": "MSTORE"
    },
    "6511": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "6544": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6546": {
      "op": "DUP3"
    },
    "6547": {
      "op": "ADD"
    },
    "6548": {
      "op": "MSTORE"
    },
    "6549": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "6560": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "6562": {
      "op": "SHL"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6565": {
      "op": "DUP3"
    },
    "6566": {
      "op": "ADD"
    },
    "6567": {
      "op": "MSTORE"
    },
    "6568": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6570": {
      "op": "ADD"
    },
    "6571": {
      "op": "SWAP1"
    },
    "6572": {
      "jump": "o",
      "op": "JUMP"
    },
    "6573": {
      "op": "JUMPDEST"
    },
    "6574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6576": {
      "op": "DUP1"
    },
    "6577": {
      "op": "DUP3"
    },
    "6578": {
      "op": "MSTORE"
    },
    "6579": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "6581": {
      "op": "SWAP1"
    },
    "6582": {
      "op": "DUP3"
    },
    "6583": {
      "op": "ADD"
    },
    "6584": {
      "op": "MSTORE"
    },
    "6585": {
      "op": "PUSH32",
      "value": "0x4261646765724765797365723A20756E7374616B6520616D6F756E7420697320"
    },
    "6618": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6620": {
      "op": "DUP3"
    },
    "6621": {
      "op": "ADD"
    },
    "6622": {
      "op": "MSTORE"
    },
    "6623": {
      "op": "PUSH32",
      "value": "0x67726561746572207468616E20746F74616C2075736572207374616B65730000"
    },
    "6656": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6658": {
      "op": "DUP3"
    },
    "6659": {
      "op": "ADD"
    },
    "6660": {
      "op": "MSTORE"
    },
    "6661": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6663": {
      "op": "ADD"
    },
    "6664": {
      "op": "SWAP1"
    },
    "6665": {
      "jump": "o",
      "op": "JUMP"
    },
    "6666": {
      "op": "JUMPDEST"
    },
    "6667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6669": {
      "op": "DUP1"
    },
    "6670": {
      "op": "DUP3"
    },
    "6671": {
      "op": "MSTORE"
    },
    "6672": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "6674": {
      "op": "SWAP1"
    },
    "6675": {
      "op": "DUP3"
    },
    "6676": {
      "op": "ADD"
    },
    "6677": {
      "op": "MSTORE"
    },
    "6678": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
    },
    "6711": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6713": {
      "op": "DUP3"
    },
    "6714": {
      "op": "ADD"
    },
    "6715": {
      "op": "MSTORE"
    },
    "6716": {
      "op": "PUSH15",
      "value": "0x103937B632B9903337B91039B2B633"
    },
    "6732": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "6734": {
      "op": "SHL"
    },
    "6735": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6737": {
      "op": "DUP3"
    },
    "6738": {
      "op": "ADD"
    },
    "6739": {
      "op": "MSTORE"
    },
    "6740": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6742": {
      "op": "ADD"
    },
    "6743": {
      "op": "SWAP1"
    },
    "6744": {
      "jump": "o",
      "op": "JUMP"
    },
    "6745": {
      "op": "JUMPDEST"
    },
    "6746": {
      "op": "SWAP2"
    },
    "6747": {
      "op": "DUP3"
    },
    "6748": {
      "op": "MSTORE"
    },
    "6749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6751": {
      "op": "DUP3"
    },
    "6752": {
      "op": "ADD"
    },
    "6753": {
      "op": "MSTORE"
    },
    "6754": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6756": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6758": {
      "op": "DUP3"
    },
    "6759": {
      "op": "ADD"
    },
    "6760": {
      "op": "DUP2"
    },
    "6761": {
      "op": "SWAP1"
    },
    "6762": {
      "op": "MSTORE"
    },
    "6763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6765": {
      "op": "SWAP1"
    },
    "6766": {
      "op": "DUP3"
    },
    "6767": {
      "op": "ADD"
    },
    "6768": {
      "op": "MSTORE"
    },
    "6769": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6771": {
      "op": "ADD"
    },
    "6772": {
      "op": "SWAP1"
    },
    "6773": {
      "jump": "o",
      "op": "JUMP"
    },
    "6774": {
      "op": "JUMPDEST"
    },
    "6775": {
      "op": "SWAP4"
    },
    "6776": {
      "op": "DUP5"
    },
    "6777": {
      "op": "MSTORE"
    },
    "6778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6780": {
      "op": "DUP5"
    },
    "6781": {
      "op": "ADD"
    },
    "6782": {
      "op": "SWAP3"
    },
    "6783": {
      "op": "SWAP1"
    },
    "6784": {
      "op": "SWAP3"
    },
    "6785": {
      "op": "MSTORE"
    },
    "6786": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6788": {
      "op": "DUP4"
    },
    "6789": {
      "op": "ADD"
    },
    "6790": {
      "op": "MSTORE"
    },
    "6791": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6793": {
      "op": "DUP3"
    },
    "6794": {
      "op": "ADD"
    },
    "6795": {
      "op": "MSTORE"
    },
    "6796": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6798": {
      "op": "ADD"
    },
    "6799": {
      "op": "SWAP1"
    },
    "6800": {
      "jump": "o",
      "op": "JUMP"
    },
    "6801": {
      "op": "JUMPDEST"
    },
    "6802": {
      "op": "SWAP4"
    },
    "6803": {
      "op": "DUP5"
    },
    "6804": {
      "op": "MSTORE"
    },
    "6805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6807": {
      "op": "DUP5"
    },
    "6808": {
      "op": "ADD"
    },
    "6809": {
      "op": "SWAP3"
    },
    "6810": {
      "op": "SWAP1"
    },
    "6811": {
      "op": "SWAP3"
    },
    "6812": {
      "op": "MSTORE"
    },
    "6813": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6815": {
      "op": "DUP4"
    },
    "6816": {
      "op": "ADD"
    },
    "6817": {
      "op": "MSTORE"
    },
    "6818": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6820": {
      "op": "DUP3"
    },
    "6821": {
      "op": "ADD"
    },
    "6822": {
      "op": "MSTORE"
    },
    "6823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6825": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6827": {
      "op": "DUP3"
    },
    "6828": {
      "op": "ADD"
    },
    "6829": {
      "op": "DUP2"
    },
    "6830": {
      "op": "SWAP1"
    },
    "6831": {
      "op": "MSTORE"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6834": {
      "op": "SWAP1"
    },
    "6835": {
      "op": "DUP3"
    },
    "6836": {
      "op": "ADD"
    },
    "6837": {
      "op": "MSTORE"
    },
    "6838": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6840": {
      "op": "ADD"
    },
    "6841": {
      "op": "SWAP1"
    },
    "6842": {
      "jump": "o",
      "op": "JUMP"
    },
    "6843": {
      "op": "JUMPDEST"
    },
    "6844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6846": {
      "op": "JUMPDEST"
    },
    "6847": {
      "op": "DUP4"
    },
    "6848": {
      "op": "DUP2"
    },
    "6849": {
      "op": "LT"
    },
    "6850": {
      "op": "ISZERO"
    },
    "6851": {
      "op": "PUSH2",
      "value": "0x1AD6"
    },
    "6854": {
      "op": "JUMPI"
    },
    "6855": {
      "op": "DUP2"
    },
    "6856": {
      "op": "DUP2"
    },
    "6857": {
      "op": "ADD"
    },
    "6858": {
      "op": "MLOAD"
    },
    "6859": {
      "op": "DUP4"
    },
    "6860": {
      "op": "DUP3"
    },
    "6861": {
      "op": "ADD"
    },
    "6862": {
      "op": "MSTORE"
    },
    "6863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6865": {
      "op": "ADD"
    },
    "6866": {
      "op": "PUSH2",
      "value": "0x1ABE"
    },
    "6869": {
      "op": "JUMP"
    },
    "6870": {
      "op": "JUMPDEST"
    },
    "6871": {
      "op": "DUP4"
    },
    "6872": {
      "op": "DUP2"
    },
    "6873": {
      "op": "GT"
    },
    "6874": {
      "op": "ISZERO"
    },
    "6875": {
      "op": "PUSH2",
      "value": "0x3E0"
    },
    "6878": {
      "op": "JUMPI"
    },
    "6879": {
      "op": "POP"
    },
    "6880": {
      "op": "POP"
    },
    "6881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6883": {
      "op": "SWAP2"
    },
    "6884": {
      "op": "ADD"
    },
    "6885": {
      "op": "MSTORE"
    },
    "6886": {
      "jump": "o",
      "op": "JUMP"
    },
    "6887": {
      "op": "JUMPDEST"
    },
    "6888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6894": {
      "op": "SHL"
    },
    "6895": {
      "op": "SUB"
    },
    "6896": {
      "op": "DUP2"
    },
    "6897": {
      "op": "AND"
    },
    "6898": {
      "op": "DUP2"
    },
    "6899": {
      "op": "EQ"
    },
    "6900": {
      "op": "PUSH2",
      "value": "0xB9B"
    },
    "6903": {
      "op": "JUMPI"
    },
    "6904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6906": {
      "op": "DUP1"
    },
    "6907": {
      "op": "REVERT"
    }
  },
  "sha1": "4c928bc9bf1552d0043d744ff4d61c1167807afc",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"deps/@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol\";\nimport \"deps/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"deps/@openzeppelin/contracts-upgradeable/token/ERC20/SafeERC20Upgradeable.sol\";\nimport \"deps/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"deps/@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\";\n\n/**\n * @title Badger Geyser\n @dev Tracks stakes and pledged tokens to be distributed, for use with \n @dev BadgerTree merkle distribution system. An arbitrary number of tokens to \n distribute can be specified.\n */\n\ncontract BadgerGeyser is Initializable, AccessControlUpgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n    using SafeMathUpgradeable for uint256;\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\n\n    struct UnlockSchedule {\n        uint256 initialLocked;\n        uint256 endAtSec;\n        uint256 durationSec;\n        uint256 startTime;\n    }\n\n    uint256 public globalStartTime;\n\n    uint256 public constant MAX_PERCENTAGE = 100;\n    bytes32 public constant TOKEN_LOCKER_ROLE = keccak256(\"TOKEN_LOCKER_ROLE\");\n\n    uint256 public totalStaked;\n\n    IERC20Upgradeable internal _stakingToken;\n    EnumerableSetUpgradeable.AddressSet distributionTokens;\n\n    mapping(address => uint256) internal _userTotals;\n    mapping(address => UnlockSchedule[]) public unlockSchedules;\n\n    event Staked(address indexed user, uint256 amount, uint256 total, uint256 indexed timestamp, uint256 indexed blockNumber, bytes data);\n    event Unstaked(address indexed user, uint256 amount, uint256 total, uint256 indexed timestamp, uint256 indexed blockNumber, bytes data);\n    event UnlockScheduleSet(address token, uint256 initialLocked, uint256 durationSec, uint256 startTime, uint256 endTime);\n    event TokensLocked(\n        address indexed token,\n        uint256 amount,\n        uint256 durationSec,\n        uint256 startTime,\n        uint256 endTime,\n        uint256 indexed timestamp,\n        bytes data\n    );\n\n    /**\n     * @param stakingToken_ The token users deposit as stake.\n     * @param initialDistributionToken_ The token users receive as they unstake.\n     * @param globalStartTime_ Timestamp after which unlock schedules and staking can begin.\n     */\n    function initialize(\n        IERC20Upgradeable stakingToken_,\n        address initialDistributionToken_,\n        uint256 globalStartTime_,\n        address initialAdmin_,\n        address initialTokenLocker_\n    ) public initializer {\n        __AccessControl_init();\n\n        _setupRole(DEFAULT_ADMIN_ROLE, initialAdmin_);\n        _setupRole(TOKEN_LOCKER_ROLE, initialTokenLocker_);\n\n        _stakingToken = stakingToken_;\n        distributionTokens.add(initialDistributionToken_);\n\n        globalStartTime = globalStartTime_;\n    }\n\n    /// ===== Modifiers =====\n\n    function _onlyAfterStart() internal {\n        require(now >= globalStartTime, \"BadgerGeyser: Distribution not started\");\n    }\n\n    function _onlyAdmin() internal {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"onlyAdmin\");\n    }\n\n    function _onlyTokenLocker() internal {\n        require(hasRole(TOKEN_LOCKER_ROLE, msg.sender), \"onlyTokenLocker\");\n    }\n\n    /// ===== View Functions =====\n\n    /**\n     * @return False. This application does not support staking history.\n     */\n    function supportsHistory() external pure returns (bool) {\n        return false;\n    }\n\n    /**\n     * @return The token users deposit as stake.\n     */\n    function getStakingToken() public view returns (IERC20Upgradeable) {\n        return _stakingToken;\n    }\n\n    /**\n     * @return The token users receive as they unstake.\n     */\n    function getDistributionTokens() public view returns (address[] memory) {\n        uint256 numTokens = distributionTokens.length();\n        address[] memory tokens = new address[](numTokens);\n\n        for (uint256 i = 0; i < numTokens; i++) {\n            tokens[i] = distributionTokens.at(i);\n        }\n\n        return tokens;\n    }\n\n    function getNumDistributionTokens() public view returns (uint256) {\n        return distributionTokens.length();\n    }\n\n    /**\n     * @param addr The user to look up staking information for.\n     * @return The number of staking tokens deposited for addr.\n     */\n    function totalStakedFor(address addr) public view returns (uint256) {\n        return _userTotals[addr];\n    }\n\n    /**\n     * @return Number of unlock schedules.\n     */\n    function unlockScheduleCount(address token) public view returns (uint256) {\n        return unlockSchedules[token].length;\n    }\n\n    function getUnlockSchedulesFor(address token) public view returns (UnlockSchedule[] memory) {\n        return unlockSchedules[token];\n    }\n\n    /// ===== Public Actions =====\n\n    /**\n     * @dev Transfers amount of deposit tokens from the user.\n     * @param amount Number of deposit tokens to stake.\n     */\n    function stake(uint256 amount, bytes calldata data) external {\n        _onlyAfterStart();\n        _stakeFor(msg.sender, msg.sender, amount);\n    }\n\n    /**\n     * @dev Transfers amount of deposit tokens from the caller on behalf of user.\n     * @param user User address who gains credit for this stake operation.\n     * @param amount Number of deposit tokens to stake.\n     * @param data Not used.\n     */\n    function stakeFor(\n        address user,\n        uint256 amount,\n        bytes calldata data\n    ) external {\n        _onlyAfterStart();\n        _stakeFor(msg.sender, user, amount);\n    }\n\n    /**\n     * @dev Unstakes a certain amount of previously deposited tokens. User also receives their\n     * alotted number of distribution tokens.\n     * @param amount Number of deposit tokens to unstake / withdraw.\n     * @param data Not used.\n     */\n    function unstake(uint256 amount, bytes calldata data) external {\n        _onlyAfterStart();\n        _unstakeFor(msg.sender, amount);\n    }\n\n    /// ===== Permissioned Actions: Admins =====\n    \n    function addDistributionToken(address token) external {\n        _onlyAdmin();\n        distributionTokens.add(token);\n    }\n\n    /// ===== Permissioned Actions: Token Lockers =====\n\n    /**\n     * @dev This funcion allows the contract owner to pledge more distribution tokens, along\n     *      with the associated \"unlock schedule\". These locked tokens immediately begin unlocking\n     *      linearly over the duraction of durationSec timeframe.\n     * @param token Token to lock.\n     * @param amount Number of distribution tokens to lock. These are transferred from the caller.\n     * @param durationSec Length of time to linear unlock the tokens.\n     * @param startTime Time to start distribution.\n     */\n    function signalTokenLock(\n        address token,\n        uint256 amount,\n        uint256 durationSec,\n        uint256 startTime\n    ) external {\n        _onlyTokenLocker();   \n        require(startTime >= globalStartTime, \"BadgerGeyser: Schedule cannot start before global start time\");\n        require(distributionTokens.contains(token), \"BadgerGeyser: Token not approved by admin\");\n     \n        _signalTokenLock(token, amount, durationSec, startTime);\n    }\n\n    /// ===== Internal Implementations =====\n\n    /**\n     * @dev Internal implementation of staking methods.\n     * @param staker User address who deposits tokens to stake.\n     * @param beneficiary User address who gains credit for this stake operation.\n     * @param amount Number of deposit tokens to stake.\n     */\n    function _stakeFor(\n        address staker,\n        address beneficiary,\n        uint256 amount\n    ) internal {\n        require(amount > 0, \"BadgerGeyser: stake amount is zero\");\n        require(beneficiary != address(0), \"BadgerGeyser: beneficiary is zero address\");\n\n        // 1. User Accounting\n        _userTotals[beneficiary] = _userTotals[beneficiary].add(amount);\n\n        // 2. Global Accounting\n        totalStaked = totalStaked.add(amount);\n\n        _stakingToken.safeTransferFrom(staker, address(this), amount);\n\n        emit Staked(beneficiary, amount, totalStakedFor(beneficiary), now, block.number, \"\");\n    }\n\n    /**\n     * @dev Unstakes a certain amount of previously deposited tokens. User also receives their\n     * alotted number of distribution tokens.\n     * @param amount Number of deposit tokens to unstake / withdraw.\n     */\n    function _unstakeFor(address user, uint256 amount) internal {\n        // checks\n        require(amount > 0, \"BadgerGeyser: unstake amount is zero\");\n        require(totalStakedFor(user) >= amount, \"BadgerGeyser: unstake amount is greater than total user stakes\");\n\n        // 1. User Accounting\n        _userTotals[user] = _userTotals[user].sub(amount);\n\n        // 2. Global Accounting\n        totalStaked = totalStaked.sub(amount);\n\n        // interactions\n        _stakingToken.safeTransfer(user, amount);\n\n        emit Unstaked(user, amount, totalStakedFor(user), now, block.number, \"\");\n    }\n\n    function _signalTokenLock(\n        address token,\n        uint256 amount,\n        uint256 durationSec,\n        uint256 startTime\n    ) internal {\n\n        UnlockSchedule memory schedule;\n        schedule.initialLocked = amount;\n        schedule.endAtSec = startTime.add(durationSec);\n        schedule.durationSec = durationSec;\n        schedule.startTime = startTime;\n        unlockSchedules[token].push(schedule);\n\n        emit TokensLocked(token, amount, durationSec, startTime, schedule.endAtSec, now, \"\");\n    }\n}\n",
  "sourceMap": "733:8862:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/badger-geyser/BadgerGeyser.sol",
  "type": "contract"
}