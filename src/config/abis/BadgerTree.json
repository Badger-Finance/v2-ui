{
	"abi": [
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "user",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "token",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				},
				{
					"indexed": true,
					"internalType": "uint256",
					"name": "cycle",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "timestamp",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "blockNumber",
					"type": "uint256"
				}
			],
			"name": "Claimed",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "bytes32",
					"name": "root",
					"type": "bytes32"
				}
			],
			"name": "InsufficientFundsForRoot",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "Paused",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "bytes32",
					"name": "role",
					"type": "bytes32"
				},
				{
					"indexed": true,
					"internalType": "bytes32",
					"name": "previousAdminRole",
					"type": "bytes32"
				},
				{
					"indexed": true,
					"internalType": "bytes32",
					"name": "newAdminRole",
					"type": "bytes32"
				}
			],
			"name": "RoleAdminChanged",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "bytes32",
					"name": "role",
					"type": "bytes32"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "account",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "sender",
					"type": "address"
				}
			],
			"name": "RoleGranted",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "bytes32",
					"name": "role",
					"type": "bytes32"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "account",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "sender",
					"type": "address"
				}
			],
			"name": "RoleRevoked",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "uint256",
					"name": "cycle",
					"type": "uint256"
				},
				{
					"indexed": true,
					"internalType": "bytes32",
					"name": "root",
					"type": "bytes32"
				},
				{
					"indexed": true,
					"internalType": "bytes32",
					"name": "contentHash",
					"type": "bytes32"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "timestamp",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "blockNumber",
					"type": "uint256"
				}
			],
			"name": "RootProposed",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "uint256",
					"name": "cycle",
					"type": "uint256"
				},
				{
					"indexed": true,
					"internalType": "bytes32",
					"name": "root",
					"type": "bytes32"
				},
				{
					"indexed": true,
					"internalType": "bytes32",
					"name": "contentHash",
					"type": "bytes32"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "timestamp",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "blockNumber",
					"type": "uint256"
				}
			],
			"name": "RootUpdated",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "Unpaused",
			"type": "event"
		},
		{
			"inputs": [],
			"name": "DEFAULT_ADMIN_ROLE",
			"outputs": [
				{
					"internalType": "bytes32",
					"name": "",
					"type": "bytes32"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "GUARDIAN_ROLE",
			"outputs": [
				{
					"internalType": "bytes32",
					"name": "",
					"type": "bytes32"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "ROOT_UPDATER_ROLE",
			"outputs": [
				{
					"internalType": "bytes32",
					"name": "",
					"type": "bytes32"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "root",
					"type": "bytes32"
				},
				{
					"internalType": "bytes32",
					"name": "contentHash",
					"type": "bytes32"
				},
				{
					"internalType": "uint256",
					"name": "cycle",
					"type": "uint256"
				}
			],
			"name": "approveRoot",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address[]",
					"name": "tokens",
					"type": "address[]"
				},
				{
					"internalType": "uint256[]",
					"name": "cumulativeAmounts",
					"type": "uint256[]"
				},
				{
					"internalType": "uint256",
					"name": "index",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "cycle",
					"type": "uint256"
				},
				{
					"internalType": "bytes32[]",
					"name": "merkleProof",
					"type": "bytes32[]"
				}
			],
			"name": "claim",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"name": "claimed",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "currentCycle",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "user",
					"type": "address"
				},
				{
					"internalType": "address[]",
					"name": "tokens",
					"type": "address[]"
				}
			],
			"name": "getClaimedFor",
			"outputs": [
				{
					"internalType": "address[]",
					"name": "",
					"type": "address[]"
				},
				{
					"internalType": "uint256[]",
					"name": "",
					"type": "uint256[]"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getCurrentMerkleData",
			"outputs": [
				{
					"components": [
						{
							"internalType": "bytes32",
							"name": "root",
							"type": "bytes32"
						},
						{
							"internalType": "bytes32",
							"name": "contentHash",
							"type": "bytes32"
						},
						{
							"internalType": "uint256",
							"name": "timestamp",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "blockNumber",
							"type": "uint256"
						}
					],
					"internalType": "struct BadgerTree.MerkleData",
					"name": "",
					"type": "tuple"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getPendingMerkleData",
			"outputs": [
				{
					"components": [
						{
							"internalType": "bytes32",
							"name": "root",
							"type": "bytes32"
						},
						{
							"internalType": "bytes32",
							"name": "contentHash",
							"type": "bytes32"
						},
						{
							"internalType": "uint256",
							"name": "timestamp",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "blockNumber",
							"type": "uint256"
						}
					],
					"internalType": "struct BadgerTree.MerkleData",
					"name": "",
					"type": "tuple"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "role",
					"type": "bytes32"
				}
			],
			"name": "getRoleAdmin",
			"outputs": [
				{
					"internalType": "bytes32",
					"name": "",
					"type": "bytes32"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "role",
					"type": "bytes32"
				},
				{
					"internalType": "uint256",
					"name": "index",
					"type": "uint256"
				}
			],
			"name": "getRoleMember",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "role",
					"type": "bytes32"
				}
			],
			"name": "getRoleMemberCount",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "role",
					"type": "bytes32"
				},
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "grantRole",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "hasPendingRoot",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "role",
					"type": "bytes32"
				},
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "hasRole",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "admin",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "initialUpdater",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "initialGuardian",
					"type": "address"
				}
			],
			"name": "initialize",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "lastProposeBlockNumber",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "lastProposeTimestamp",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "lastPublishBlockNumber",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "lastPublishTimestamp",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "merkleContentHash",
			"outputs": [
				{
					"internalType": "bytes32",
					"name": "",
					"type": "bytes32"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "merkleRoot",
			"outputs": [
				{
					"internalType": "bytes32",
					"name": "",
					"type": "bytes32"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "pause",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "paused",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "pendingCycle",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "pendingMerkleContentHash",
			"outputs": [
				{
					"internalType": "bytes32",
					"name": "",
					"type": "bytes32"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "pendingMerkleRoot",
			"outputs": [
				{
					"internalType": "bytes32",
					"name": "",
					"type": "bytes32"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "root",
					"type": "bytes32"
				},
				{
					"internalType": "bytes32",
					"name": "contentHash",
					"type": "bytes32"
				},
				{
					"internalType": "uint256",
					"name": "cycle",
					"type": "uint256"
				}
			],
			"name": "proposeRoot",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "role",
					"type": "bytes32"
				},
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "renounceRole",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "role",
					"type": "bytes32"
				},
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "revokeRole",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"name": "totalClaimed",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "unpause",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"allSourcePaths": {
		"0": "contracts/badger-geyser/BadgerTree.sol",
		"1": "deps/@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol",
		"10": "interfaces/badger/ICumulativeMultiTokenMerkleDistributor.sol",
		"2": "deps/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
		"3": "deps/@openzeppelin/contracts-upgradeable/cryptography/MerkleProofUpgradeable.sol",
		"4": "deps/@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
		"5": "deps/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
		"7": "deps/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
		"8": "deps/@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol",
		"9": "deps/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol"
	},
	"ast": {
		"absolutePath": "contracts/badger-geyser/BadgerTree.sol",
		"exportedSymbols": {
			"BadgerTree": [
				536
			]
		},
		"id": 537,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1,
				"literals": [
					"solidity",
					"^",
					"0.6",
					".0"
				],
				"nodeType": "PragmaDirective",
				"src": "33:23:0"
			},
			{
				"id": 2,
				"literals": [
					"experimental",
					"ABIEncoderV2"
				],
				"nodeType": "PragmaDirective",
				"src": "57:33:0"
			},
			{
				"absolutePath": "deps/@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
				"file": "deps/@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol",
				"id": 3,
				"nodeType": "ImportDirective",
				"scope": 537,
				"sourceUnit": 1112,
				"src": "92:79:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "deps/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
				"file": "deps/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
				"id": 4,
				"nodeType": "ImportDirective",
				"scope": 537,
				"sourceUnit": 1190,
				"src": "172:84:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "deps/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
				"file": "deps/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
				"id": 5,
				"nodeType": "ImportDirective",
				"scope": 537,
				"sourceUnit": 845,
				"src": "257:86:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "deps/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
				"file": "deps/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
				"id": 6,
				"nodeType": "ImportDirective",
				"scope": 537,
				"sourceUnit": 1301,
				"src": "344:80:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "deps/@openzeppelin/contracts-upgradeable/cryptography/MerkleProofUpgradeable.sol",
				"file": "deps/@openzeppelin/contracts-upgradeable/cryptography/MerkleProofUpgradeable.sol",
				"id": 7,
				"nodeType": "ImportDirective",
				"scope": 537,
				"sourceUnit": 916,
				"src": "425:90:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"absolutePath": "interfaces/badger/ICumulativeMultiTokenMerkleDistributor.sol",
				"file": "interfaces/badger/ICumulativeMultiTokenMerkleDistributor.sol",
				"id": 8,
				"nodeType": "ImportDirective",
				"scope": 537,
				"sourceUnit": 1347,
				"src": "516:70:0",
				"symbolAliases": [],
				"unitAlias": ""
			},
			{
				"abstract": false,
				"baseContracts": [
					{
						"arguments": null,
						"baseName": {
							"contractScope": null,
							"id": 9,
							"name": "Initializable",
							"nodeType": "UserDefinedTypeName",
							"referencedDeclaration": 1462,
							"src": "611:13:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_Initializable_$1462",
								"typeString": "contract Initializable"
							}
						},
						"id": 10,
						"nodeType": "InheritanceSpecifier",
						"src": "611:13:0"
					},
					{
						"arguments": null,
						"baseName": {
							"contractScope": null,
							"id": 11,
							"name": "AccessControlUpgradeable",
							"nodeType": "UserDefinedTypeName",
							"referencedDeclaration": 844,
							"src": "626:24:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_AccessControlUpgradeable_$844",
								"typeString": "contract AccessControlUpgradeable"
							}
						},
						"id": 12,
						"nodeType": "InheritanceSpecifier",
						"src": "626:24:0"
					},
					{
						"arguments": null,
						"baseName": {
							"contractScope": null,
							"id": 13,
							"name": "ICumulativeMultiTokenMerkleDistributor",
							"nodeType": "UserDefinedTypeName",
							"referencedDeclaration": 1346,
							"src": "652:38:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_ICumulativeMultiTokenMerkleDistributor_$1346",
								"typeString": "contract ICumulativeMultiTokenMerkleDistributor"
							}
						},
						"id": 14,
						"nodeType": "InheritanceSpecifier",
						"src": "652:38:0"
					},
					{
						"arguments": null,
						"baseName": {
							"contractScope": null,
							"id": 15,
							"name": "PausableUpgradeable",
							"nodeType": "UserDefinedTypeName",
							"referencedDeclaration": 1300,
							"src": "692:19:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_PausableUpgradeable_$1300",
								"typeString": "contract PausableUpgradeable"
							}
						},
						"id": 16,
						"nodeType": "InheritanceSpecifier",
						"src": "692:19:0"
					}
				],
				"contractDependencies": [
					844,
					1300,
					1346,
					1391,
					1462
				],
				"contractKind": "contract",
				"documentation": null,
				"fullyImplemented": true,
				"id": 536,
				"linearizedBaseContracts": [
					536,
					1300,
					1346,
					844,
					1391,
					1462
				],
				"name": "BadgerTree",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"id": 19,
						"libraryName": {
							"contractScope": null,
							"id": 17,
							"name": "SafeMathUpgradeable",
							"nodeType": "UserDefinedTypeName",
							"referencedDeclaration": 1111,
							"src": "724:19:0",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_SafeMathUpgradeable_$1111",
								"typeString": "library SafeMathUpgradeable"
							}
						},
						"nodeType": "UsingForDirective",
						"src": "718:38:0",
						"typeName": {
							"id": 18,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "748:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						}
					},
					{
						"canonicalName": "BadgerTree.MerkleData",
						"id": 28,
						"members": [
							{
								"constant": false,
								"id": 21,
								"mutability": "mutable",
								"name": "root",
								"nodeType": "VariableDeclaration",
								"overrides": null,
								"scope": 28,
								"src": "790:12:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								},
								"typeName": {
									"id": 20,
									"name": "bytes32",
									"nodeType": "ElementaryTypeName",
									"src": "790:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									}
								},
								"value": null,
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 23,
								"mutability": "mutable",
								"name": "contentHash",
								"nodeType": "VariableDeclaration",
								"overrides": null,
								"scope": 28,
								"src": "812:19:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								},
								"typeName": {
									"id": 22,
									"name": "bytes32",
									"nodeType": "ElementaryTypeName",
									"src": "812:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									}
								},
								"value": null,
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 25,
								"mutability": "mutable",
								"name": "timestamp",
								"nodeType": "VariableDeclaration",
								"overrides": null,
								"scope": 28,
								"src": "841:17:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 24,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "841:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"value": null,
								"visibility": "internal"
							},
							{
								"constant": false,
								"id": 27,
								"mutability": "mutable",
								"name": "blockNumber",
								"nodeType": "VariableDeclaration",
								"overrides": null,
								"scope": 28,
								"src": "868:19:0",
								"stateVariable": false,
								"storageLocation": "default",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								},
								"typeName": {
									"id": 26,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "868:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								},
								"value": null,
								"visibility": "internal"
							}
						],
						"name": "MerkleData",
						"nodeType": "StructDefinition",
						"scope": 536,
						"src": "762:132:0",
						"visibility": "public"
					},
					{
						"constant": true,
						"functionSelector": "d9ab2c5c",
						"id": 33,
						"mutability": "constant",
						"name": "ROOT_UPDATER_ROLE",
						"nodeType": "VariableDeclaration",
						"overrides": null,
						"scope": 536,
						"src": "900:74:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_bytes32",
							"typeString": "bytes32"
						},
						"typeName": {
							"id": 29,
							"name": "bytes32",
							"nodeType": "ElementaryTypeName",
							"src": "900:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_bytes32",
								"typeString": "bytes32"
							}
						},
						"value": {
							"argumentTypes": null,
							"arguments": [
								{
									"argumentTypes": null,
									"hexValue": "524f4f545f555044415445525f524f4c45",
									"id": 31,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "string",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "954:19:0",
									"subdenomination": null,
									"typeDescriptions": {
										"typeIdentifier": "t_stringliteral_009ab23a1010d07a0450a1fbea1d84169b57d2c2273b54bff0f20c3e90199b5d",
										"typeString": "literal_string \"ROOT_UPDATER_ROLE\""
									},
									"value": "ROOT_UPDATER_ROLE"
								}
							],
							"expression": {
								"argumentTypes": [
									{
										"typeIdentifier": "t_stringliteral_009ab23a1010d07a0450a1fbea1d84169b57d2c2273b54bff0f20c3e90199b5d",
										"typeString": "literal_string \"ROOT_UPDATER_ROLE\""
									}
								],
								"id": 30,
								"name": "keccak256",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": -8,
								"src": "944:9:0",
								"typeDescriptions": {
									"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
									"typeString": "function (bytes memory) pure returns (bytes32)"
								}
							},
							"id": 32,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"kind": "functionCall",
							"lValueRequested": false,
							"names": [],
							"nodeType": "FunctionCall",
							"src": "944:30:0",
							"tryCall": false,
							"typeDescriptions": {
								"typeIdentifier": "t_bytes32",
								"typeString": "bytes32"
							}
						},
						"visibility": "public"
					},
					{
						"constant": true,
						"functionSelector": "24ea54f4",
						"id": 38,
						"mutability": "constant",
						"name": "GUARDIAN_ROLE",
						"nodeType": "VariableDeclaration",
						"overrides": null,
						"scope": 536,
						"src": "980:66:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_bytes32",
							"typeString": "bytes32"
						},
						"typeName": {
							"id": 34,
							"name": "bytes32",
							"nodeType": "ElementaryTypeName",
							"src": "980:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_bytes32",
								"typeString": "bytes32"
							}
						},
						"value": {
							"argumentTypes": null,
							"arguments": [
								{
									"argumentTypes": null,
									"hexValue": "475541524449414e5f524f4c45",
									"id": 36,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"kind": "string",
									"lValueRequested": false,
									"nodeType": "Literal",
									"src": "1030:15:0",
									"subdenomination": null,
									"typeDescriptions": {
										"typeIdentifier": "t_stringliteral_55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a5041",
										"typeString": "literal_string \"GUARDIAN_ROLE\""
									},
									"value": "GUARDIAN_ROLE"
								}
							],
							"expression": {
								"argumentTypes": [
									{
										"typeIdentifier": "t_stringliteral_55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a5041",
										"typeString": "literal_string \"GUARDIAN_ROLE\""
									}
								],
								"id": 35,
								"name": "keccak256",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": -8,
								"src": "1020:9:0",
								"typeDescriptions": {
									"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
									"typeString": "function (bytes memory) pure returns (bytes32)"
								}
							},
							"id": 37,
							"isConstant": false,
							"isLValue": false,
							"isPure": true,
							"kind": "functionCall",
							"lValueRequested": false,
							"names": [],
							"nodeType": "FunctionCall",
							"src": "1020:26:0",
							"tryCall": false,
							"typeDescriptions": {
								"typeIdentifier": "t_bytes32",
								"typeString": "bytes32"
							}
						},
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "bab2f552",
						"id": 40,
						"mutability": "mutable",
						"name": "currentCycle",
						"nodeType": "VariableDeclaration",
						"overrides": null,
						"scope": 536,
						"src": "1053:27:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 39,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "1053:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": null,
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "2eb4a7ab",
						"id": 42,
						"mutability": "mutable",
						"name": "merkleRoot",
						"nodeType": "VariableDeclaration",
						"overrides": null,
						"scope": 536,
						"src": "1086:25:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_bytes32",
							"typeString": "bytes32"
						},
						"typeName": {
							"id": 41,
							"name": "bytes32",
							"nodeType": "ElementaryTypeName",
							"src": "1086:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_bytes32",
								"typeString": "bytes32"
							}
						},
						"value": null,
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "1fe065ad",
						"id": 44,
						"mutability": "mutable",
						"name": "merkleContentHash",
						"nodeType": "VariableDeclaration",
						"overrides": null,
						"scope": 536,
						"src": "1117:32:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_bytes32",
							"typeString": "bytes32"
						},
						"typeName": {
							"id": 43,
							"name": "bytes32",
							"nodeType": "ElementaryTypeName",
							"src": "1117:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_bytes32",
								"typeString": "bytes32"
							}
						},
						"value": null,
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "96f7cd57",
						"id": 46,
						"mutability": "mutable",
						"name": "lastPublishTimestamp",
						"nodeType": "VariableDeclaration",
						"overrides": null,
						"scope": 536,
						"src": "1155:35:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 45,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "1155:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": null,
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "8270d87b",
						"id": 48,
						"mutability": "mutable",
						"name": "lastPublishBlockNumber",
						"nodeType": "VariableDeclaration",
						"overrides": null,
						"scope": 536,
						"src": "1196:37:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 47,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "1196:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": null,
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "a155285f",
						"id": 50,
						"mutability": "mutable",
						"name": "pendingCycle",
						"nodeType": "VariableDeclaration",
						"overrides": null,
						"scope": 536,
						"src": "1240:27:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 49,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "1240:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": null,
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "9637f475",
						"id": 52,
						"mutability": "mutable",
						"name": "pendingMerkleRoot",
						"nodeType": "VariableDeclaration",
						"overrides": null,
						"scope": 536,
						"src": "1273:32:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_bytes32",
							"typeString": "bytes32"
						},
						"typeName": {
							"id": 51,
							"name": "bytes32",
							"nodeType": "ElementaryTypeName",
							"src": "1273:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_bytes32",
								"typeString": "bytes32"
							}
						},
						"value": null,
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "fe0317ef",
						"id": 54,
						"mutability": "mutable",
						"name": "pendingMerkleContentHash",
						"nodeType": "VariableDeclaration",
						"overrides": null,
						"scope": 536,
						"src": "1311:39:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_bytes32",
							"typeString": "bytes32"
						},
						"typeName": {
							"id": 53,
							"name": "bytes32",
							"nodeType": "ElementaryTypeName",
							"src": "1311:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_bytes32",
								"typeString": "bytes32"
							}
						},
						"value": null,
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "8cbc762e",
						"id": 56,
						"mutability": "mutable",
						"name": "lastProposeTimestamp",
						"nodeType": "VariableDeclaration",
						"overrides": null,
						"scope": 536,
						"src": "1356:35:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 55,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "1356:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": null,
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "97c9c12f",
						"id": 58,
						"mutability": "mutable",
						"name": "lastProposeBlockNumber",
						"nodeType": "VariableDeclaration",
						"overrides": null,
						"scope": 536,
						"src": "1397:37:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_uint256",
							"typeString": "uint256"
						},
						"typeName": {
							"id": 57,
							"name": "uint256",
							"nodeType": "ElementaryTypeName",
							"src": "1397:7:0",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							}
						},
						"value": null,
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "0c9cbf0e",
						"id": 64,
						"mutability": "mutable",
						"name": "claimed",
						"nodeType": "VariableDeclaration",
						"overrides": null,
						"scope": 536,
						"src": "1441:62:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
							"typeString": "mapping(address => mapping(address => uint256))"
						},
						"typeName": {
							"id": 63,
							"keyType": {
								"id": 59,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1449:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "1441:47:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
								"typeString": "mapping(address => mapping(address => uint256))"
							},
							"valueType": {
								"id": 62,
								"keyType": {
									"id": 60,
									"name": "address",
									"nodeType": "ElementaryTypeName",
									"src": "1468:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									}
								},
								"nodeType": "Mapping",
								"src": "1460:27:0",
								"typeDescriptions": {
									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
									"typeString": "mapping(address => uint256)"
								},
								"valueType": {
									"id": 61,
									"name": "uint256",
									"nodeType": "ElementaryTypeName",
									"src": "1479:7:0",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									}
								}
							}
						},
						"value": null,
						"visibility": "public"
					},
					{
						"constant": false,
						"functionSelector": "ef5d9ae8",
						"id": 68,
						"mutability": "mutable",
						"name": "totalClaimed",
						"nodeType": "VariableDeclaration",
						"overrides": null,
						"scope": 536,
						"src": "1509:47:0",
						"stateVariable": true,
						"storageLocation": "default",
						"typeDescriptions": {
							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
							"typeString": "mapping(address => uint256)"
						},
						"typeName": {
							"id": 67,
							"keyType": {
								"id": 65,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "1517:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"nodeType": "Mapping",
							"src": "1509:27:0",
							"typeDescriptions": {
								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
								"typeString": "mapping(address => uint256)"
							},
							"valueType": {
								"id": 66,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "1528:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							}
						},
						"value": null,
						"visibility": "public"
					},
					{
						"body": {
							"id": 100,
							"nodeType": "Block",
							"src": "1696:274:0",
							"statements": [
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 79,
											"name": "__AccessControl_init",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 559,
											"src": "1706:20:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
												"typeString": "function ()"
											}
										},
										"id": 80,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1706:22:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 81,
									"nodeType": "ExpressionStatement",
									"src": "1706:22:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 82,
											"name": "__Pausable_init_unchained",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1233,
											"src": "1738:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
												"typeString": "function ()"
											}
										},
										"id": 83,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1738:27:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 84,
									"nodeType": "ExpressionStatement",
									"src": "1738:27:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 86,
												"name": "DEFAULT_ADMIN_ROLE",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 583,
												"src": "1787:18:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											{
												"argumentTypes": null,
												"id": 87,
												"name": "admin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 70,
												"src": "1807:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 85,
											"name": "_setupRole",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 766,
											"src": "1776:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
												"typeString": "function (bytes32,address)"
											}
										},
										"id": 88,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1776:37:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 89,
									"nodeType": "ExpressionStatement",
									"src": "1776:37:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 91,
												"name": "ROOT_UPDATER_ROLE",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 33,
												"src": "1877:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											{
												"argumentTypes": null,
												"id": 92,
												"name": "initialUpdater",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 72,
												"src": "1896:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 90,
											"name": "_setupRole",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 766,
											"src": "1866:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
												"typeString": "function (bytes32,address)"
											}
										},
										"id": 93,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1866:45:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 94,
									"nodeType": "ExpressionStatement",
									"src": "1866:45:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 96,
												"name": "GUARDIAN_ROLE",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 38,
												"src": "1932:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											{
												"argumentTypes": null,
												"id": 97,
												"name": "initialGuardian",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 74,
												"src": "1947:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 95,
											"name": "_setupRole",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 766,
											"src": "1921:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
												"typeString": "function (bytes32,address)"
											}
										},
										"id": 98,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1921:42:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 99,
									"nodeType": "ExpressionStatement",
									"src": "1921:42:0"
								}
							]
						},
						"documentation": null,
						"functionSelector": "c0c53b8b",
						"id": 101,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"arguments": null,
								"id": 77,
								"modifierName": {
									"argumentTypes": null,
									"id": 76,
									"name": "initializer",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 1439,
									"src": "1684:11:0",
									"typeDescriptions": {
										"typeIdentifier": "t_modifier$__$",
										"typeString": "modifier ()"
									}
								},
								"nodeType": "ModifierInvocation",
								"src": "1684:11:0"
							}
						],
						"name": "initialize",
						"nodeType": "FunctionDefinition",
						"overrides": null,
						"parameters": {
							"id": 75,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 70,
									"mutability": "mutable",
									"name": "admin",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 101,
									"src": "1592:13:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 69,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1592:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 72,
									"mutability": "mutable",
									"name": "initialUpdater",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 101,
									"src": "1615:22:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 71,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1615:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 74,
									"mutability": "mutable",
									"name": "initialGuardian",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 101,
									"src": "1647:23:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 73,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1647:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"src": "1582:94:0"
						},
						"returnParameters": {
							"id": 78,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "1696:0:0"
						},
						"scope": 536,
						"src": "1563:407:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 114,
							"nodeType": "Block",
							"src": "2106:78:0",
							"statements": [
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"id": 107,
														"name": "DEFAULT_ADMIN_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "2132:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													{
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 108,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "2152:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2152:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														{
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													],
													"id": 106,
													"name": "hasRole",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 629,
													"src": "2124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
														"typeString": "function (bytes32,address) view returns (bool)"
													}
												},
												"id": 110,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "2124:39:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"argumentTypes": null,
												"hexValue": "6f6e6c7941646d696e",
												"id": 111,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2165:11:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_039db013133dbf66b5d1e321f15c20328d8e71e9ffa5eb545dd2d96b4bf96c5f",
													"typeString": "literal_string \"onlyAdmin\""
												},
												"value": "onlyAdmin"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_039db013133dbf66b5d1e321f15c20328d8e71e9ffa5eb545dd2d96b4bf96c5f",
													"typeString": "literal_string \"onlyAdmin\""
												}
											],
											"id": 105,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [
												-18,
												-18
											],
											"referencedDeclaration": -18,
											"src": "2116:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 112,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2116:61:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 113,
									"nodeType": "ExpressionStatement",
									"src": "2116:61:0"
								}
							]
						},
						"documentation": {
							"id": 102,
							"nodeType": "StructuredDocumentation",
							"src": "2007:58:0",
							"text": "@notice Admins can approve new root updaters or admins"
						},
						"id": 115,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_onlyAdmin",
						"nodeType": "FunctionDefinition",
						"overrides": null,
						"parameters": {
							"id": 103,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2089:2:0"
						},
						"returnParameters": {
							"id": 104,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2106:0:0"
						},
						"scope": 536,
						"src": "2070:114:0",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 128,
							"nodeType": "Block",
							"src": "2282:83:0",
							"statements": [
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"id": 121,
														"name": "ROOT_UPDATER_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "2308:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													{
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 122,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "2327:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2327:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														{
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													],
													"id": 120,
													"name": "hasRole",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 629,
													"src": "2300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
														"typeString": "function (bytes32,address) view returns (bool)"
													}
												},
												"id": 124,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "2300:38:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"argumentTypes": null,
												"hexValue": "6f6e6c79526f6f7455706461746572",
												"id": 125,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2340:17:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_7a8d305c4de642faa0e8a5aedb9068f510997f8e52b550482bd85b19b9f51685",
													"typeString": "literal_string \"onlyRootUpdater\""
												},
												"value": "onlyRootUpdater"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_7a8d305c4de642faa0e8a5aedb9068f510997f8e52b550482bd85b19b9f51685",
													"typeString": "literal_string \"onlyRootUpdater\""
												}
											],
											"id": 119,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [
												-18,
												-18
											],
											"referencedDeclaration": -18,
											"src": "2292:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 126,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2292:66:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 127,
									"nodeType": "ExpressionStatement",
									"src": "2292:66:0"
								}
							]
						},
						"documentation": {
							"id": 116,
							"nodeType": "StructuredDocumentation",
							"src": "2190:45:0",
							"text": "@notice Root updaters can update the root"
						},
						"id": 129,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_onlyRootUpdater",
						"nodeType": "FunctionDefinition",
						"overrides": null,
						"parameters": {
							"id": 117,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2265:2:0"
						},
						"returnParameters": {
							"id": 118,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2282:0:0"
						},
						"scope": 536,
						"src": "2240:125:0",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 141,
							"nodeType": "Block",
							"src": "2410:76:0",
							"statements": [
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"id": 134,
														"name": "GUARDIAN_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "2436:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													{
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 135,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "2451:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2451:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														{
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													],
													"id": 133,
													"name": "hasRole",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 629,
													"src": "2428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
														"typeString": "function (bytes32,address) view returns (bool)"
													}
												},
												"id": 137,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "2428:34:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"argumentTypes": null,
												"hexValue": "6f6e6c79477561726469616e",
												"id": 138,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2464:14:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b4db1c03411b71d657f07ad3769a21d0f801a65525dbdf23f4bd03a648eabd0d",
													"typeString": "literal_string \"onlyGuardian\""
												},
												"value": "onlyGuardian"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_b4db1c03411b71d657f07ad3769a21d0f801a65525dbdf23f4bd03a648eabd0d",
													"typeString": "literal_string \"onlyGuardian\""
												}
											],
											"id": 132,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [
												-18,
												-18
											],
											"referencedDeclaration": -18,
											"src": "2420:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 139,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2420:59:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 140,
									"nodeType": "ExpressionStatement",
									"src": "2420:59:0"
								}
							]
						},
						"documentation": null,
						"id": 142,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "_onlyGuardian",
						"nodeType": "FunctionDefinition",
						"overrides": null,
						"parameters": {
							"id": 130,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2393:2:0"
						},
						"returnParameters": {
							"id": 131,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2410:0:0"
						},
						"scope": 536,
						"src": "2371:115:0",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "internal"
					},
					{
						"body": {
							"id": 154,
							"nodeType": "Block",
							"src": "2566:111:0",
							"statements": [
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 148,
												"name": "merkleRoot",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 42,
												"src": "2594:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											{
												"argumentTypes": null,
												"id": 149,
												"name": "merkleContentHash",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 44,
												"src": "2606:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											{
												"argumentTypes": null,
												"id": 150,
												"name": "lastPublishTimestamp",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 46,
												"src": "2625:20:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											{
												"argumentTypes": null,
												"id": 151,
												"name": "lastProposeBlockNumber",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "2647:22:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 147,
											"name": "MerkleData",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 28,
											"src": "2583:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_struct$_MerkleData_$28_storage_ptr_$",
												"typeString": "type(struct BadgerTree.MerkleData storage pointer)"
											}
										},
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "structConstructorCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2583:87:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_MerkleData_$28_memory_ptr",
											"typeString": "struct BadgerTree.MerkleData memory"
										}
									},
									"functionReturnParameters": 146,
									"id": 153,
									"nodeType": "Return",
									"src": "2576:94:0"
								}
							]
						},
						"documentation": null,
						"functionSelector": "b20cd555",
						"id": 155,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "getCurrentMerkleData",
						"nodeType": "FunctionDefinition",
						"overrides": null,
						"parameters": {
							"id": 143,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2521:2:0"
						},
						"returnParameters": {
							"id": 146,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 145,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 155,
									"src": "2547:17:0",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_MerkleData_$28_memory_ptr",
										"typeString": "struct BadgerTree.MerkleData"
									},
									"typeName": {
										"contractScope": null,
										"id": 144,
										"name": "MerkleData",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 28,
										"src": "2547:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_MerkleData_$28_storage_ptr",
											"typeString": "struct BadgerTree.MerkleData"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"src": "2546:19:0"
						},
						"scope": 536,
						"src": "2492:185:0",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "external"
					},
					{
						"body": {
							"id": 167,
							"nodeType": "Block",
							"src": "2757:125:0",
							"statements": [
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 161,
												"name": "pendingMerkleRoot",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 52,
												"src": "2785:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											{
												"argumentTypes": null,
												"id": 162,
												"name": "pendingMerkleContentHash",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 54,
												"src": "2804:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											{
												"argumentTypes": null,
												"id": 163,
												"name": "lastProposeTimestamp",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 56,
												"src": "2830:20:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											{
												"argumentTypes": null,
												"id": 164,
												"name": "lastProposeBlockNumber",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "2852:22:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 160,
											"name": "MerkleData",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 28,
											"src": "2774:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_struct$_MerkleData_$28_storage_ptr_$",
												"typeString": "type(struct BadgerTree.MerkleData storage pointer)"
											}
										},
										"id": 165,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "structConstructorCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2774:101:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_MerkleData_$28_memory_ptr",
											"typeString": "struct BadgerTree.MerkleData memory"
										}
									},
									"functionReturnParameters": 159,
									"id": 166,
									"nodeType": "Return",
									"src": "2767:108:0"
								}
							]
						},
						"documentation": null,
						"functionSelector": "0d4202ce",
						"id": 168,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "getPendingMerkleData",
						"nodeType": "FunctionDefinition",
						"overrides": null,
						"parameters": {
							"id": 156,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2712:2:0"
						},
						"returnParameters": {
							"id": 159,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 168,
									"src": "2738:17:0",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_MerkleData_$28_memory_ptr",
										"typeString": "struct BadgerTree.MerkleData"
									},
									"typeName": {
										"contractScope": null,
										"id": 157,
										"name": "MerkleData",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 28,
										"src": "2738:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_MerkleData_$28_storage_ptr",
											"typeString": "struct BadgerTree.MerkleData"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"src": "2737:19:0"
						},
						"scope": 536,
						"src": "2683:199:0",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "external"
					},
					{
						"body": {
							"id": 180,
							"nodeType": "Block",
							"src": "2943:59:0",
							"statements": [
								{
									"expression": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 178,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 173,
											"name": "pendingCycle",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 50,
											"src": "2960:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "==",
										"rightExpression": {
											"argumentTypes": null,
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "31",
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2993:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													}
												],
												"expression": {
													"argumentTypes": null,
													"id": 174,
													"name": "currentCycle",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 40,
													"src": "2976:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 175,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "add",
												"nodeType": "MemberAccess",
												"referencedDeclaration": 944,
												"src": "2976:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
													"typeString": "function (uint256,uint256) pure returns (uint256)"
												}
											},
											"id": 177,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "2976:19:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "2960:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"functionReturnParameters": 172,
									"id": 179,
									"nodeType": "Return",
									"src": "2953:42:0"
								}
							]
						},
						"documentation": null,
						"functionSelector": "2f37a774",
						"id": 181,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "hasPendingRoot",
						"nodeType": "FunctionDefinition",
						"overrides": null,
						"parameters": {
							"id": 169,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "2911:2:0"
						},
						"returnParameters": {
							"id": 172,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 181,
									"src": "2937:4:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 170,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2937:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"src": "2936:6:0"
						},
						"scope": 536,
						"src": "2888:114:0",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "external"
					},
					{
						"body": {
							"id": 236,
							"nodeType": "Block",
							"src": "3126:233:0",
							"statements": [
								{
									"assignments": [
										199
									],
									"declarations": [
										{
											"constant": false,
											"id": 199,
											"mutability": "mutable",
											"name": "userClaimed",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 236,
											"src": "3136:28:0",
											"stateVariable": false,
											"storageLocation": "memory",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "3136:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"id": 206,
									"initialValue": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"expression": {
													"argumentTypes": null,
													"id": 203,
													"name": "tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 186,
													"src": "3181:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 204,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "length",
												"nodeType": "MemberAccess",
												"referencedDeclaration": null,
												"src": "3181:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 202,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "NewExpression",
											"src": "3167:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
												"typeString": "function (uint256) pure returns (uint256[] memory)"
											},
											"typeName": {
												"baseType": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 201,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "3171:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											}
										},
										"id": 205,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3167:28:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
											"typeString": "uint256[] memory"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "3136:59:0"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "3249:66:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 218,
															"name": "userClaimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "3263:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 220,
														"indexExpression": {
															"argumentTypes": null,
															"id": 219,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3275:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3263:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 221,
																"name": "claimed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "3280:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 223,
															"indexExpression": {
																"argumentTypes": null,
																"id": 222,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "3288:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3280:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 227,
														"indexExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 224,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "3294:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 226,
															"indexExpression": {
																"argumentTypes": null,
																"id": 225,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "3301:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3294:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3280:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3263:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "3263:41:0"
											}
										]
									},
									"condition": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 214,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 211,
											"name": "i",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 208,
											"src": "3225:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<",
										"rightExpression": {
											"argumentTypes": null,
											"expression": {
												"argumentTypes": null,
												"id": 212,
												"name": "tokens",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 186,
												"src": "3229:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[] memory"
												}
											},
											"id": 213,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "length",
											"nodeType": "MemberAccess",
											"referencedDeclaration": null,
											"src": "3229:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "3225:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 231,
									"initializationExpression": {
										"assignments": [
											208
										],
										"declarations": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "i",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "3210:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"id": 210,
										"initialValue": {
											"argumentTypes": null,
											"hexValue": "30",
											"id": 209,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3222:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "3210:13:0"
									},
									"loopExpression": {
										"expression": {
											"argumentTypes": null,
											"id": 216,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "UnaryOperation",
											"operator": "++",
											"prefix": false,
											"src": "3244:3:0",
											"subExpression": {
												"argumentTypes": null,
												"id": 215,
												"name": "i",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 208,
												"src": "3244:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 217,
										"nodeType": "ExpressionStatement",
										"src": "3244:3:0"
									},
									"nodeType": "ForStatement",
									"src": "3205:110:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"components": [
											{
												"argumentTypes": null,
												"id": 232,
												"name": "tokens",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 186,
												"src": "3332:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[] memory"
												}
											},
											{
												"argumentTypes": null,
												"id": 233,
												"name": "userClaimed",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 199,
												"src": "3340:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[] memory"
												}
											}
										],
										"id": 234,
										"isConstant": false,
										"isInlineArray": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "3331:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
											"typeString": "tuple(address[] memory,uint256[] memory)"
										}
									},
									"functionReturnParameters": 194,
									"id": 235,
									"nodeType": "Return",
									"src": "3324:28:0"
								}
							]
						},
						"documentation": null,
						"functionSelector": "a2fcfd68",
						"id": 237,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "getClaimedFor",
						"nodeType": "FunctionDefinition",
						"overrides": null,
						"parameters": {
							"id": 187,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 183,
									"mutability": "mutable",
									"name": "user",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 237,
									"src": "3031:12:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 182,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3031:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 186,
									"mutability": "mutable",
									"name": "tokens",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 237,
									"src": "3045:23:0",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 184,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3045:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 185,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "3045:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"src": "3030:39:0"
						},
						"returnParameters": {
							"id": 194,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 190,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 237,
									"src": "3090:16:0",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 188,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3090:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 189,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "3090:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 193,
									"mutability": "mutable",
									"name": "",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 237,
									"src": "3108:16:0",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 191,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3108:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 192,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "3108:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"src": "3089:36:0"
						},
						"scope": 536,
						"src": "3008:351:0",
						"stateMutability": "view",
						"virtual": false,
						"visibility": "public"
					},
					{
						"body": {
							"id": 391,
							"nodeType": "Block",
							"src": "3662:950:0",
							"statements": [
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 259,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"argumentTypes": null,
													"id": 257,
													"name": "cycle",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 248,
													"src": "3680:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"argumentTypes": null,
													"id": 258,
													"name": "currentCycle",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 40,
													"src": "3689:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "3680:21:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"argumentTypes": null,
												"hexValue": "496e76616c6964206379636c65",
												"id": 260,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3703:15:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9c4c7d9bebda701f2fcd16356c77c9a5aa95223eabaa1a028b403305e84282aa",
													"typeString": "literal_string \"Invalid cycle\""
												},
												"value": "Invalid cycle"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_9c4c7d9bebda701f2fcd16356c77c9a5aa95223eabaa1a028b403305e84282aa",
													"typeString": "literal_string \"Invalid cycle\""
												}
											],
											"id": 256,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [
												-18,
												-18
											],
											"referencedDeclaration": -18,
											"src": "3672:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 261,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3672:47:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 262,
									"nodeType": "ExpressionStatement",
									"src": "3672:47:0"
								},
								{
									"assignments": [
										264
									],
									"declarations": [
										{
											"constant": false,
											"id": 264,
											"mutability": "mutable",
											"name": "node",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 391,
											"src": "3766:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 263,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "3766:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"id": 276,
									"initialValue": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"id": 268,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3808:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													{
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 269,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "3815:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3815:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													{
														"argumentTypes": null,
														"id": 271,
														"name": "cycle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3827:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													{
														"argumentTypes": null,
														"id": 272,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "3834:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													{
														"argumentTypes": null,
														"id": 273,
														"name": "cumulativeAmounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "3842:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														{
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														{
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														{
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														},
														{
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													],
													"expression": {
														"argumentTypes": null,
														"id": 266,
														"name": "abi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -1,
														"src": "3791:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_abi",
															"typeString": "abi"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "encodePacked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3791:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
														"typeString": "function () pure returns (bytes memory)"
													}
												},
												"id": 274,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "3791:69:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											],
											"id": 265,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "3781:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 275,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3781:80:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"nodeType": "VariableDeclarationStatement",
									"src": "3766:95:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"arguments": [
													{
														"argumentTypes": null,
														"id": 280,
														"name": "merkleProof",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "3909:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
															"typeString": "bytes32[] calldata"
														}
													},
													{
														"argumentTypes": null,
														"id": 281,
														"name": "merkleRoot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "3922:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													{
														"argumentTypes": null,
														"id": 282,
														"name": "node",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "3934:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
															"typeString": "bytes32[] calldata"
														},
														{
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														{
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													],
													"expression": {
														"argumentTypes": null,
														"id": 278,
														"name": "MerkleProofUpgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3879:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_MerkleProofUpgradeable_$915_$",
															"typeString": "type(library MerkleProofUpgradeable)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "verify",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 914,
													"src": "3879:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
														"typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
													}
												},
												"id": 283,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "3879:60:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"argumentTypes": null,
												"hexValue": "496e76616c69642070726f6f66",
												"id": 284,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3941:15:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639",
													"typeString": "literal_string \"Invalid proof\""
												},
												"value": "Invalid proof"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639",
													"typeString": "literal_string \"Invalid proof\""
												}
											],
											"id": 277,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [
												-18,
												-18
											],
											"referencedDeclaration": -18,
											"src": "3871:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 285,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3871:86:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 286,
									"nodeType": "ExpressionStatement",
									"src": "3871:86:0"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "4040:566:0",
										"statements": [
											{
												"assignments": [
													299
												],
												"declarations": [
													{
														"constant": false,
														"id": 299,
														"mutability": "mutable",
														"name": "claimable",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 389,
														"src": "4054:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 298,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4054:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 313,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 304,
																	"name": "claimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "4099:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 307,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 305,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "4107:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4107:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4099:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 311,
															"indexExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 308,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4119:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 310,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 309,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "4126:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4119:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4099:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 300,
																"name": "cumulativeAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "4074:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																	"typeString": "uint256[] calldata"
																}
															},
															"id": 302,
															"indexExpression": {
																"argumentTypes": null,
																"id": 301,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "4092:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4074:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 961,
														"src": "4074:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4074:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4054:76:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 315,
																"name": "claimable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "4153:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4165:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4153:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45786365737369766520636c61696d",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4168:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae94eeaccf67edc9293bcf08afa4f4e20ad5da22f751f9be43e81866e9cb23d8",
																"typeString": "literal_string \"Excessive claim\""
															},
															"value": "Excessive claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae94eeaccf67edc9293bcf08afa4f4e20ad5da22f751f9be43e81866e9cb23d8",
																"typeString": "literal_string \"Excessive claim\""
															}
														],
														"id": 314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4145:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4145:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "4145:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 321,
																"name": "claimed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "4201:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 327,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 322,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "4209:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4209:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4201:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 328,
														"indexExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 324,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "4221:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															},
															"id": 326,
															"indexExpression": {
																"argumentTypes": null,
																"id": 325,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "4228:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4221:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4201:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 338,
																"name": "claimable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "4269:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 329,
																		"name": "claimed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "4234:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 332,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 330,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "4242:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4242:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4234:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 336,
																"indexExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 333,
																		"name": "tokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "4254:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 335,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 334,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "4261:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4254:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4234:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 944,
															"src": "4234:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4234:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4201:78:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "4201:78:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 343,
																		"name": "claimed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "4302:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 346,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 344,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "4310:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4310:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4302:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 350,
																"indexExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 347,
																		"name": "tokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "4322:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 349,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 348,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "4329:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4322:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4302:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 351,
																	"name": "cumulativeAmounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "4336:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 353,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 352,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "4354:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4336:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4302:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436c61696d656420616d6f756e74206d69736d61746368",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4358:25:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aca2a1919cac7fb3e35321d054e7a06239661d463b5ea9cc2ed77bbe6e0f8ec9",
																"typeString": "literal_string \"Claimed amount mismatch\""
															},
															"value": "Claimed amount mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aca2a1919cac7fb3e35321d054e7a06239661d463b5ea9cc2ed77bbe6e0f8ec9",
																"typeString": "literal_string \"Claimed amount mismatch\""
															}
														],
														"id": 342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "4294:90:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 365,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "4444:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4444:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 367,
																		"name": "cumulativeAmounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "4456:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 369,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 368,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "4474:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4456:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 360,
																				"name": "tokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 241,
																				"src": "4424:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 362,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 361,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "4431:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4424:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 359,
																		"name": "IERC20Upgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "4406:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1189_$",
																			"typeString": "type(contract IERC20Upgradeable)"
																		}
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4406:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1189",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1138,
																"src": "4406:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4406:71:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5472616e73666572206661696c6564",
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4479:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "4398:99:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 375,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4525:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4525:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 377,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "4537:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															},
															"id": 379,
															"indexExpression": {
																"argumentTypes": null,
																"id": 378,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "4544:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4537:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 380,
																"name": "cumulativeAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "4548:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																	"typeString": "uint256[] calldata"
																}
															},
															"id": 382,
															"indexExpression": {
																"argumentTypes": null,
																"id": 381,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "4566:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4548:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 383,
															"name": "cycle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4570:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 384,
															"name": "now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -17,
															"src": "4577:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 385,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "4582:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4582:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "4517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4517:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "EmitStatement",
												"src": "4512:83:0"
											}
										]
									},
									"condition": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 294,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"id": 291,
											"name": "i",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 288,
											"src": "4016:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<",
										"rightExpression": {
											"argumentTypes": null,
											"expression": {
												"argumentTypes": null,
												"id": 292,
												"name": "tokens",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 241,
												"src": "4020:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[] calldata"
												}
											},
											"id": 293,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "length",
											"nodeType": "MemberAccess",
											"referencedDeclaration": null,
											"src": "4020:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "4016:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"id": 390,
									"initializationExpression": {
										"assignments": [
											288
										],
										"declarations": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "i",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 390,
												"src": "4001:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"id": 290,
										"initialValue": {
											"argumentTypes": null,
											"hexValue": "30",
											"id": 289,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4013:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_0_by_1",
												"typeString": "int_const 0"
											},
											"value": "0"
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "4001:13:0"
									},
									"loopExpression": {
										"expression": {
											"argumentTypes": null,
											"id": 296,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "UnaryOperation",
											"operator": "++",
											"prefix": false,
											"src": "4035:3:0",
											"subExpression": {
												"argumentTypes": null,
												"id": 295,
												"name": "i",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 288,
												"src": "4035:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 297,
										"nodeType": "ExpressionStatement",
										"src": "4035:3:0"
									},
									"nodeType": "ForStatement",
									"src": "3996:610:0"
								}
							]
						},
						"documentation": {
							"id": 238,
							"nodeType": "StructuredDocumentation",
							"src": "3365:81:0",
							"text": "@notice Claim accumulated rewards for a set of tokens at a given cycle number"
						},
						"functionSelector": "f6162b01",
						"id": 392,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"arguments": null,
								"id": 254,
								"modifierName": {
									"argumentTypes": null,
									"id": 253,
									"name": "whenNotPaused",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 1253,
									"src": "3648:13:0",
									"typeDescriptions": {
										"typeIdentifier": "t_modifier$__$",
										"typeString": "modifier ()"
									}
								},
								"nodeType": "ModifierInvocation",
								"src": "3648:13:0"
							}
						],
						"name": "claim",
						"nodeType": "FunctionDefinition",
						"overrides": null,
						"parameters": {
							"id": 252,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 241,
									"mutability": "mutable",
									"name": "tokens",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 392,
									"src": "3475:25:0",
									"stateVariable": false,
									"storageLocation": "calldata",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 239,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3475:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 240,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "3475:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 244,
									"mutability": "mutable",
									"name": "cumulativeAmounts",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 392,
									"src": "3510:36:0",
									"stateVariable": false,
									"storageLocation": "calldata",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 242,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3510:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 243,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "3510:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 246,
									"mutability": "mutable",
									"name": "index",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 392,
									"src": "3556:13:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 245,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3556:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "cycle",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 392,
									"src": "3579:13:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3579:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 251,
									"mutability": "mutable",
									"name": "merkleProof",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 392,
									"src": "3602:30:0",
									"stateVariable": false,
									"storageLocation": "calldata",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
										"typeString": "bytes32[]"
									},
									"typeName": {
										"baseType": {
											"id": 249,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "3602:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"id": 250,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "3602:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
											"typeString": "bytes32[]"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"src": "3465:173:0"
						},
						"returnParameters": {
							"id": 255,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "3662:0:0"
						},
						"scope": 536,
						"src": "3451:1161:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"body": {
							"id": 447,
							"nodeType": "Block",
							"src": "4886:396:0",
							"statements": [
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 404,
											"name": "_onlyRootUpdater",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 129,
											"src": "4896:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_view$__$returns$__$",
												"typeString": "function () view"
											}
										},
										"id": 405,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "4896:18:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 406,
									"nodeType": "ExpressionStatement",
									"src": "4896:18:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 413,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"argumentTypes": null,
													"id": 408,
													"name": "cycle",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 399,
													"src": "4932:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4958:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 409,
															"name": "currentCycle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4941:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "4941:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "4932:28:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"argumentTypes": null,
												"hexValue": "496e636f7272656374206379636c65",
												"id": 414,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4962:17:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_df91c877e81d371b8f389547fe55885b4eea50f24fef9f1e58a47314aabb5f99",
													"typeString": "literal_string \"Incorrect cycle\""
												},
												"value": "Incorrect cycle"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_df91c877e81d371b8f389547fe55885b4eea50f24fef9f1e58a47314aabb5f99",
													"typeString": "literal_string \"Incorrect cycle\""
												}
											],
											"id": 407,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [
												-18,
												-18
											],
											"referencedDeclaration": -18,
											"src": "4924:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 415,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "4924:56:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 416,
									"nodeType": "ExpressionStatement",
									"src": "4924:56:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 419,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"id": 417,
											"name": "pendingCycle",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 50,
											"src": "4991:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"id": 418,
											"name": "cycle",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 399,
											"src": "5006:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "4991:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 420,
									"nodeType": "ExpressionStatement",
									"src": "4991:20:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 423,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"id": 421,
											"name": "pendingMerkleRoot",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 52,
											"src": "5021:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"id": 422,
											"name": "root",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 395,
											"src": "5041:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"src": "5021:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"id": 424,
									"nodeType": "ExpressionStatement",
									"src": "5021:24:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 427,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"id": 425,
											"name": "pendingMerkleContentHash",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 54,
											"src": "5055:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"id": 426,
											"name": "contentHash",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 397,
											"src": "5082:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"src": "5055:38:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"id": 428,
									"nodeType": "ExpressionStatement",
									"src": "5055:38:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 431,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"id": 429,
											"name": "lastProposeTimestamp",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 56,
											"src": "5103:20:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"id": 430,
											"name": "now",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -17,
											"src": "5126:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "5103:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 432,
									"nodeType": "ExpressionStatement",
									"src": "5103:26:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 436,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"id": 433,
											"name": "lastProposeBlockNumber",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 58,
											"src": "5139:22:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"expression": {
												"argumentTypes": null,
												"id": 434,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": -4,
												"src": "5164:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 435,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "number",
											"nodeType": "MemberAccess",
											"referencedDeclaration": null,
											"src": "5164:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "5139:37:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 437,
									"nodeType": "ExpressionStatement",
									"src": "5139:37:0"
								},
								{
									"eventCall": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 439,
												"name": "cycle",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 399,
												"src": "5205:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											{
												"argumentTypes": null,
												"id": 440,
												"name": "pendingMerkleRoot",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 52,
												"src": "5212:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											{
												"argumentTypes": null,
												"id": 441,
												"name": "pendingMerkleContentHash",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 54,
												"src": "5231:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											{
												"argumentTypes": null,
												"id": 442,
												"name": "now",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": -17,
												"src": "5257:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											{
												"argumentTypes": null,
												"expression": {
													"argumentTypes": null,
													"id": 443,
													"name": "block",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -4,
													"src": "5262:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_block",
														"typeString": "block"
													}
												},
												"id": 444,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "number",
												"nodeType": "MemberAccess",
												"referencedDeclaration": null,
												"src": "5262:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 438,
											"name": "RootProposed",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1319,
											"src": "5192:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
												"typeString": "function (uint256,bytes32,bytes32,uint256,uint256)"
											}
										},
										"id": 445,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5192:83:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 446,
									"nodeType": "EmitStatement",
									"src": "5187:88:0"
								}
							]
						},
						"documentation": {
							"id": 393,
							"nodeType": "StructuredDocumentation",
							"src": "4662:95:0",
							"text": "@notice Propose a new root and content hash, which will be stored as pending until approved"
						},
						"functionSelector": "66739d3b",
						"id": 448,
						"implemented": true,
						"kind": "function",
						"modifiers": [
							{
								"arguments": null,
								"id": 402,
								"modifierName": {
									"argumentTypes": null,
									"id": 401,
									"name": "whenNotPaused",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 1253,
									"src": "4872:13:0",
									"typeDescriptions": {
										"typeIdentifier": "t_modifier$__$",
										"typeString": "modifier ()"
									}
								},
								"nodeType": "ModifierInvocation",
								"src": "4872:13:0"
							}
						],
						"name": "proposeRoot",
						"nodeType": "FunctionDefinition",
						"overrides": null,
						"parameters": {
							"id": 400,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 395,
									"mutability": "mutable",
									"name": "root",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "4792:12:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 394,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4792:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 397,
									"mutability": "mutable",
									"name": "contentHash",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "4814:19:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 396,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4814:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 399,
									"mutability": "mutable",
									"name": "cycle",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 448,
									"src": "4843:13:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 398,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4843:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"src": "4782:80:0"
						},
						"returnParameters": {
							"id": 403,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "4886:0:0"
						},
						"scope": 536,
						"src": "4762:520:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"body": {
							"id": 512,
							"nodeType": "Block",
							"src": "5505:487:0",
							"statements": [
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"id": 461,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"argumentTypes": null,
													"id": 459,
													"name": "root",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 451,
													"src": "5523:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"argumentTypes": null,
													"id": 460,
													"name": "pendingMerkleRoot",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 52,
													"src": "5531:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"src": "5523:25:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"argumentTypes": null,
												"hexValue": "496e636f727265637420726f6f74",
												"id": 462,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5550:16:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_45789f097ae782df46a41952630c1087e5f3647a71ba4ec6c835557a55f7a620",
													"typeString": "literal_string \"Incorrect root\""
												},
												"value": "Incorrect root"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_45789f097ae782df46a41952630c1087e5f3647a71ba4ec6c835557a55f7a620",
													"typeString": "literal_string \"Incorrect root\""
												}
											],
											"id": 458,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [
												-18,
												-18
											],
											"referencedDeclaration": -18,
											"src": "5515:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 463,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5515:52:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 464,
									"nodeType": "ExpressionStatement",
									"src": "5515:52:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"id": 468,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"argumentTypes": null,
													"id": 466,
													"name": "contentHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 453,
													"src": "5585:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"argumentTypes": null,
													"id": 467,
													"name": "pendingMerkleContentHash",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "5600:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"src": "5585:39:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"argumentTypes": null,
												"hexValue": "496e636f727265637420636f6e74656e742068617368",
												"id": 469,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5626:24:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6897eb764aa45995aafe9b0cd582e23bcd11b067ee63e046ddd512870883b950",
													"typeString": "literal_string \"Incorrect content hash\""
												},
												"value": "Incorrect content hash"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_6897eb764aa45995aafe9b0cd582e23bcd11b067ee63e046ddd512870883b950",
													"typeString": "literal_string \"Incorrect content hash\""
												}
											],
											"id": 465,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [
												-18,
												-18
											],
											"referencedDeclaration": -18,
											"src": "5577:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 470,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5577:74:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 471,
									"nodeType": "ExpressionStatement",
									"src": "5577:74:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 475,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"argumentTypes": null,
													"id": 473,
													"name": "cycle",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 455,
													"src": "5669:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "==",
												"rightExpression": {
													"argumentTypes": null,
													"id": 474,
													"name": "pendingCycle",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 50,
													"src": "5678:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "5669:21:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											{
												"argumentTypes": null,
												"hexValue": "496e636f7272656374206379636c65",
												"id": 476,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "5692:17:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_df91c877e81d371b8f389547fe55885b4eea50f24fef9f1e58a47314aabb5f99",
													"typeString": "literal_string \"Incorrect cycle\""
												},
												"value": "Incorrect cycle"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												{
													"typeIdentifier": "t_stringliteral_df91c877e81d371b8f389547fe55885b4eea50f24fef9f1e58a47314aabb5f99",
													"typeString": "literal_string \"Incorrect cycle\""
												}
											],
											"id": 472,
											"name": "require",
											"nodeType": "Identifier",
											"overloadedDeclarations": [
												-18,
												-18
											],
											"referencedDeclaration": -18,
											"src": "5661:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
												"typeString": "function (bool,string memory) pure"
											}
										},
										"id": 477,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5661:49:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 478,
									"nodeType": "ExpressionStatement",
									"src": "5661:49:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 484,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"id": 479,
											"name": "currentCycle",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 40,
											"src": "5721:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "31",
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5753:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													}
												],
												"expression": {
													"argumentTypes": null,
													"id": 480,
													"name": "currentCycle",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 40,
													"src": "5736:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 481,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "add",
												"nodeType": "MemberAccess",
												"referencedDeclaration": 944,
												"src": "5736:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
													"typeString": "function (uint256,uint256) pure returns (uint256)"
												}
											},
											"id": 483,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "5736:19:0",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "5721:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 485,
									"nodeType": "ExpressionStatement",
									"src": "5721:34:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 488,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"id": 486,
											"name": "merkleRoot",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 42,
											"src": "5765:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"id": 487,
											"name": "root",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 451,
											"src": "5778:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"src": "5765:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"id": 489,
									"nodeType": "ExpressionStatement",
									"src": "5765:17:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 492,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"id": 490,
											"name": "merkleContentHash",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 44,
											"src": "5792:17:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"id": 491,
											"name": "contentHash",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 453,
											"src": "5812:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"src": "5792:31:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"id": 493,
									"nodeType": "ExpressionStatement",
									"src": "5792:31:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 496,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"id": 494,
											"name": "lastPublishTimestamp",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 46,
											"src": "5833:20:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"id": 495,
											"name": "now",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -17,
											"src": "5856:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "5833:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 497,
									"nodeType": "ExpressionStatement",
									"src": "5833:26:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"id": 501,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftHandSide": {
											"argumentTypes": null,
											"id": 498,
											"name": "lastPublishBlockNumber",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 48,
											"src": "5869:22:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Assignment",
										"operator": "=",
										"rightHandSide": {
											"argumentTypes": null,
											"expression": {
												"argumentTypes": null,
												"id": 499,
												"name": "block",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": -4,
												"src": "5894:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_block",
													"typeString": "block"
												}
											},
											"id": 500,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "number",
											"nodeType": "MemberAccess",
											"referencedDeclaration": null,
											"src": "5894:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "5869:37:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"id": 502,
									"nodeType": "ExpressionStatement",
									"src": "5869:37:0"
								},
								{
									"eventCall": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 504,
												"name": "currentCycle",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 40,
												"src": "5934:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											{
												"argumentTypes": null,
												"id": 505,
												"name": "root",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 451,
												"src": "5948:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											{
												"argumentTypes": null,
												"id": 506,
												"name": "contentHash",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 453,
												"src": "5954:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											{
												"argumentTypes": null,
												"id": 507,
												"name": "now",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": -17,
												"src": "5967:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											{
												"argumentTypes": null,
												"expression": {
													"argumentTypes": null,
													"id": 508,
													"name": "block",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -4,
													"src": "5972:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_block",
														"typeString": "block"
													}
												},
												"id": 509,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "number",
												"nodeType": "MemberAccess",
												"referencedDeclaration": null,
												"src": "5972:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 503,
											"name": "RootUpdated",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1331,
											"src": "5922:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
												"typeString": "function (uint256,bytes32,bytes32,uint256,uint256)"
											}
										},
										"id": 510,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "5922:63:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 511,
									"nodeType": "EmitStatement",
									"src": "5917:68:0"
								}
							]
						},
						"documentation": {
							"id": 449,
							"nodeType": "StructuredDocumentation",
							"src": "5329:61:0",
							"text": "@notice Approve the current pending root and content hash"
						},
						"functionSelector": "116037cc",
						"id": 513,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "approveRoot",
						"nodeType": "FunctionDefinition",
						"overrides": null,
						"parameters": {
							"id": 456,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 451,
									"mutability": "mutable",
									"name": "root",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 513,
									"src": "5425:12:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 450,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5425:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 453,
									"mutability": "mutable",
									"name": "contentHash",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 513,
									"src": "5447:19:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 452,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5447:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 455,
									"mutability": "mutable",
									"name": "cycle",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 513,
									"src": "5476:13:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 454,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5476:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"src": "5415:80:0"
						},
						"returnParameters": {
							"id": 457,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "5505:0:0"
						},
						"scope": 536,
						"src": "5395:597:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"body": {
							"id": 523,
							"nodeType": "Block",
							"src": "6070:50:0",
							"statements": [
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 517,
											"name": "_onlyGuardian",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 142,
											"src": "6080:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_view$__$returns$__$",
												"typeString": "function () view"
											}
										},
										"id": 518,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6080:15:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 519,
									"nodeType": "ExpressionStatement",
									"src": "6080:15:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 520,
											"name": "_pause",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1279,
											"src": "6105:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
												"typeString": "function ()"
											}
										},
										"id": 521,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6105:8:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 522,
									"nodeType": "ExpressionStatement",
									"src": "6105:8:0"
								}
							]
						},
						"documentation": {
							"id": 514,
							"nodeType": "StructuredDocumentation",
							"src": "5998:41:0",
							"text": "@notice Pause publishing of new roots"
						},
						"functionSelector": "8456cb59",
						"id": 524,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "pause",
						"nodeType": "FunctionDefinition",
						"overrides": null,
						"parameters": {
							"id": 515,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "6058:2:0"
						},
						"returnParameters": {
							"id": 516,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "6070:0:0"
						},
						"scope": 536,
						"src": "6044:76:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					},
					{
						"body": {
							"id": 534,
							"nodeType": "Block",
							"src": "6202:52:0",
							"statements": [
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 528,
											"name": "_onlyGuardian",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 142,
											"src": "6212:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_view$__$returns$__$",
												"typeString": "function () view"
											}
										},
										"id": 529,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6212:15:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 530,
									"nodeType": "ExpressionStatement",
									"src": "6212:15:0"
								},
								{
									"expression": {
										"argumentTypes": null,
										"arguments": [],
										"expression": {
											"argumentTypes": [],
											"id": 531,
											"name": "_unpause",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1295,
											"src": "6237:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
												"typeString": "function ()"
											}
										},
										"id": 532,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "6237:10:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_tuple$__$",
											"typeString": "tuple()"
										}
									},
									"id": 533,
									"nodeType": "ExpressionStatement",
									"src": "6237:10:0"
								}
							]
						},
						"documentation": {
							"id": 525,
							"nodeType": "StructuredDocumentation",
							"src": "6126:43:0",
							"text": "@notice Unpause publishing of new roots"
						},
						"functionSelector": "3f4ba83a",
						"id": 535,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "unpause",
						"nodeType": "FunctionDefinition",
						"overrides": null,
						"parameters": {
							"id": 526,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "6190:2:0"
						},
						"returnParameters": {
							"id": 527,
							"nodeType": "ParameterList",
							"parameters": [],
							"src": "6202:0:0"
						},
						"scope": 536,
						"src": "6174:80:0",
						"stateMutability": "nonpayable",
						"virtual": false,
						"visibility": "external"
					}
				],
				"scope": 537,
				"src": "588:5668:0"
			}
		],
		"src": "33:6224:0"
	},
	"bytecode": "608060405234801561001057600080fd5b50611df6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80639010d07c1161011a578063b20cd555116100ad578063d547741f1161007c578063d547741f146103a6578063d9ab2c5c146103b9578063ef5d9ae8146103c1578063f6162b01146103d4578063fe0317ef146103e7576101fb565b8063b20cd55514610370578063bab2f55214610378578063c0c53b8b14610380578063ca15c87314610393576101fb565b806397c9c12f116100e957806397c9c12f14610337578063a155285f1461033f578063a217fddf14610347578063a2fcfd681461034f576101fb565b80639010d07c146102f457806391d14854146103145780639637f4751461032757806396f7cd571461032f576101fb565b80632f37a7741161019257806366739d3b1161016157806366739d3b146102c95780638270d87b146102dc5780638456cb59146102e45780638cbc762e146102ec576101fb565b80632f37a7741461029157806336568abe146102a65780633f4ba83a146102b95780635c975abb146102c1576101fb565b8063248a9ca3116101ce578063248a9ca31461025b57806324ea54f41461026e5780632eb4a7ab146102765780632f2ff15d1461027e576101fb565b80630c9cbf0e146102005780630d4202ce14610229578063116037cc1461023e5780631fe065ad14610253575b600080fd5b61021361020e366004611528565b6103ef565b6040516102209190611928565b60405180910390f35b61023161040c565b6040516102209190611d38565b61025161024c36600461176d565b610442565b005b61021361051a565b61021361026936600461171b565b610520565b610213610535565b610213610559565b61025161028c366004611733565b61055f565b6102996105a7565b604051610220919061191d565b6102516102b4366004611733565b6105c1565b610251610603565b610299610615565b6102516102d736600461176d565b61061e565b6102136106c6565b6102516106cc565b6102136106dc565b610307610302366004611798565b6106e2565b6040516102209190611862565b610299610322366004611733565b610703565b61021361071b565b610213610721565b610213610727565b61021361072d565b610213610733565b61036261035d3660046115a1565b610738565b60405161022092919061188f565b61023161080d565b610213610843565b61025161038e36600461155c565b610849565b6102136103a136600461171b565b61093d565b6102516103b4366004611733565b610954565b61021361098e565b6102136103cf36600461150d565b6109b1565b6102516103e2366004611652565b6109c3565b610213610dc4565b60a160209081526000928352604080842090915290825290205481565b61041461148d565b6040518060800160405280609d548152602001609e548152602001609f54815260200160a054815250905090565b609d54831461046c5760405162461bcd60e51b815260040161046390611aa3565b60405180910390fd5b609e54821461048d5760405162461bcd60e51b815260040161046390611b45565b609c5481146104ae5760405162461bcd60e51b815260040161046390611cc0565b6097546104bc906001610dca565b60978190556098849055609983905542609a81905543609b8190556040518593879390927f03934c24f0815369800391139ad44a2b4ac75e07cbbf74bdae8c3d9ab0caca159261050d9291906117ce565b60405180910390a4505050565b60995481565b60009081526033602052604090206002015490565b7f55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a504181565b60985481565b60008281526033602052604090206002015461057d90610322610def565b6105995760405162461bcd60e51b8152600401610463906119c6565b6105a38282610df3565b5050565b6097546000906105b8906001610dca565b609c5414905090565b6105c9610def565b6001600160a01b0316816001600160a01b0316146105f95760405162461bcd60e51b815260040161046390611ce9565b6105a38282610e5c565b61060b610ec5565b610613610f0b565b565b60655460ff1690565b60655460ff16156106415760405162461bcd60e51b815260040161046390611b1b565b610649610f77565b609754610657906001610dca565b81146106755760405162461bcd60e51b815260040161046390611cc0565b609c819055609d839055609e82905542609f8190554360a08190556040518492869285927fdb07d3ace4eb8cb6d13437eec22aee8fceb4200c6b31945a3fcd75758d9bd34b9261050d9290916117ce565b609b5481565b6106d4610ec5565b610613610fbc565b609f5481565b60008281526033602052604081206106fa9083611015565b90505b92915050565b60008281526033602052604081206106fa9083611021565b609d5481565b609a5481565b60a05481565b609c5481565b600081565b6060806060835167ffffffffffffffff8111801561075557600080fd5b5060405190808252806020026020018201604052801561077f578160200160208202803683370190505b50905060005b84518110156107ff576001600160a01b038616600090815260a16020526040812086519091908790849081106107b757fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020548282815181106107ec57fe5b6020908102919091010152600101610785565b5083925090505b9250929050565b61081561148d565b604051806080016040528060985481526020016099548152602001609a54815260200160a054815250905090565b60975481565b600054610100900460ff16806108625750610862611036565b80610870575060005460ff16155b61088c5760405162461bcd60e51b815260040161046390611b75565b600054610100900460ff161580156108b7576000805460ff1961ff0019909116610100171660011790555b6108bf61103c565b6108c76110cf565b6108d2600085610599565b6108fb7e9ab23a1010d07a0450a1fbea1d84169b57d2c2273b54bff0f20c3e90199b5d84610599565b6109257f55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a504183610599565b8015610937576000805461ff00191690555b50505050565b60008181526033602052604081206106fd9061115b565b60008281526033602052604090206002015461097290610322610def565b6105f95760405162461bcd60e51b815260040161046390611acb565b7e9ab23a1010d07a0450a1fbea1d84169b57d2c2273b54bff0f20c3e90199b5d81565b60a26020526000908152604090205481565b60655460ff16156109e65760405162461bcd60e51b815260040161046390611b1b565b6097548314610a075760405162461bcd60e51b815260040161046390611bec565b60008433858b8b8b8b604051602001610a2697969594939291906117dc565b604051602081830303815290604052805190602001209050610a7f838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506098549150849050611166565b610a9b5760405162461bcd60e51b815260040161046390611c99565b60005b88811015610db85733600090815260a160205260408120610b1d90828d8d86818110610ac657fe5b9050602002016020810190610adb919061150d565b6001600160a01b03166001600160a01b03168152602001908152602001600020548a8a85818110610b0857fe5b9050602002013561120390919063ffffffff16565b905060008111610b3f5760405162461bcd60e51b815260040161046390611c4a565b33600090815260a160205260408120610b96918391908e8e87818110610b6157fe5b9050602002016020810190610b76919061150d565b6001600160a01b0316815260208101919091526040016000205490610dca565b33600090815260a160205260408120908d8d86818110610bb257fe5b9050602002016020810190610bc7919061150d565b6001600160a01b03168152602081019190915260400160002055888883818110610bed57fe5b33600090815260a160209081526040822092029390930135929091508d8d86818110610c1557fe5b9050602002016020810190610c2a919061150d565b6001600160a01b03166001600160a01b031681526020019081526020016000205414610c685760405162461bcd60e51b815260040161046390611c13565b8a8a83818110610c7457fe5b9050602002016020810190610c89919061150d565b6001600160a01b031663a9059cbb338b8b86818110610ca457fe5b905060200201356040518363ffffffff1660e01b8152600401610cc8929190611876565b602060405180830381600087803b158015610ce257600080fd5b505af1158015610cf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1a91906116fb565b610d365760405162461bcd60e51b815260040161046390611a43565b858b8b84818110610d4357fe5b9050602002016020810190610d58919061150d565b6001600160a01b0316337f6f9c9826be5976f3f82a3490c52a83328ce2ec7be9e62dcb39c26da5148d7c768c8c87818110610d8f57fe5b905060200201354243604051610da793929190611d63565b60405180910390a450600101610a9e565b50505050505050505050565b609e5481565b6000828201838110156106fa5760405162461bcd60e51b815260040161046390611a6c565b3390565b6000828152603360205260409020610e0b9082611245565b156105a357610e18610def565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152603360205260409020610e74908261125a565b156105a357610e81610def565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b610eef7f55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a504133610703565b6106135760405162461bcd60e51b815260040161046390611c73565b60655460ff16610f2d5760405162461bcd60e51b815260040161046390611a15565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610f60610def565b604051610f6d9190611862565b60405180910390a1565b610fa07e9ab23a1010d07a0450a1fbea1d84169b57d2c2273b54bff0f20c3e90199b5d33610703565b6106135760405162461bcd60e51b815260040161046390611bc3565b60655460ff1615610fdf5760405162461bcd60e51b815260040161046390611b1b565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f60610def565b60006106fa838361126f565b60006106fa836001600160a01b0384166112b4565b303b1590565b600054610100900460ff16806110555750611055611036565b80611063575060005460ff16155b61107f5760405162461bcd60e51b815260040161046390611b75565b600054610100900460ff161580156110aa576000805460ff1961ff0019909116610100171660011790555b6110b26112cc565b6110ba6112cc565b80156110cc576000805461ff00191690555b50565b600054610100900460ff16806110e857506110e8611036565b806110f6575060005460ff16155b6111125760405162461bcd60e51b815260040161046390611b75565b600054610100900460ff1615801561113d576000805460ff1961ff0019909116610100171660011790555b6065805460ff1916905580156110cc576000805461ff001916905550565b60006106fd8261134d565b600081815b85518110156111f857600086828151811061118257fe5b602002602001015190508083116111c35782816040516020016111a69291906117ce565b6040516020818303038152906040528051906020012092506111ef565b80836040516020016111d69291906117ce565b6040516020818303038152906040528051906020012092505b5060010161116b565b509092149392505050565b60006106fa83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611351565b60006106fa836001600160a01b03841661137d565b60006106fa836001600160a01b0384166113c7565b815460009082106112925760405162461bcd60e51b815260040161046390611984565b8260000182815481106112a157fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b600054610100900460ff16806112e557506112e5611036565b806112f3575060005460ff16155b61130f5760405162461bcd60e51b815260040161046390611b75565b600054610100900460ff161580156110ba576000805460ff1961ff00199091166101001716600117905580156110cc576000805461ff001916905550565b5490565b600081848411156113755760405162461bcd60e51b81526004016104639190611931565b505050900390565b600061138983836112b4565b6113bf575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556106fd565b5060006106fd565b6000818152600183016020526040812054801561148357835460001980830191908101906000908790839081106113fa57fe5b906000526020600020015490508087600001848154811061141757fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061144757fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506106fd565b60009150506106fd565b60408051608081018252600080825260208201819052918101829052606081019190915290565b80356001600160a01b03811681146106fd57600080fd5b60008083601f8401126114dc578182fd5b50813567ffffffffffffffff8111156114f3578182fd5b602083019150836020808302850101111561080657600080fd5b60006020828403121561151e578081fd5b6106fa83836114b4565b6000806040838503121561153a578081fd5b61154484846114b4565b915061155384602085016114b4565b90509250929050565b600080600060608486031215611570578081fd5b61157a85856114b4565b925061158985602086016114b4565b915061159885604086016114b4565b90509250925092565b600080604083850312156115b3578182fd5b6115bd84846114b4565b915060208084013567ffffffffffffffff8111156115d9578283fd5b8401601f810186136115e9578283fd5b80356115fc6115f782611da0565b611d79565b81815283810190838501858402850186018a1015611618578687fd5b8694505b838510156116425761162e8a826114b4565b83526001949094019391850191850161161c565b5080955050505050509250929050565b60008060008060008060008060a0898b03121561166d578384fd5b883567ffffffffffffffff80821115611684578586fd5b6116908c838d016114cb565b909a50985060208b01359150808211156116a8578586fd5b6116b48c838d016114cb565b909850965060408b0135955060608b0135945060808b01359150808211156116da578384fd5b506116e78b828c016114cb565b999c989b5096995094979396929594505050565b60006020828403121561170c578081fd5b815180151581146106fa578182fd5b60006020828403121561172c578081fd5b5035919050565b60008060408385031215611745578182fd5b8235915060208301356001600160a01b0381168114611762578182fd5b809150509250929050565b600080600060608486031215611781578283fd5b505081359360208301359350604090920135919050565b600080604083850312156117aa578182fd5b50508035926020909101359150565b815260200190565b6001600160a01b03169052565b918252602082015260400190565b600088825260206bffffffffffffffffffffffff198960601b16818401528760348401526054830187835b88811015611835578184016001600160a01b0361182482856114b4565b168452928401929150600101611807565b50506001600160fb1b0385111561184a578283fd5b90840290818682370190815298975050505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b604080825283519082018190526000906020906060840190828701845b828110156118cf576118bf8483516117c1565b92840192908401906001016118ac565b505050838103828501528085516118e68184611928565b91508387019250845b81811015611910576119028385516117b9565b9385019392506001016118ef565b5090979650505050505050565b901515815260200190565b90815260200190565b6000602080835283518082850152825b8181101561195d57858101830151858201604001528201611941565b8181111561196e5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252600e908201526d125b98dbdc9c9958dd081c9bdbdd60921b604082015260600190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b602080825260169082015275092dcc6dee4e4cac6e840c6dedce8cadce840d0c2e6d60531b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252600f908201526e37b7363ca937b7ba2ab83230ba32b960891b604082015260600190565b6020808252600d908201526c496e76616c6964206379636c6560981b604082015260600190565b60208082526017908201527f436c61696d656420616d6f756e74206d69736d61746368000000000000000000604082015260600190565b6020808252600f908201526e45786365737369766520636c61696d60881b604082015260600190565b6020808252600c908201526b37b7363ca3bab0b93234b0b760a11b604082015260600190565b6020808252600d908201526c24b73b30b634b210383937b7b360991b604082015260600190565b6020808252600f908201526e496e636f7272656374206379636c6560881b604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b8151815260208083015190820152604080830151908201526060918201519181019190915260800190565b9283526020830191909152604082015260600190565b60405181810167ffffffffffffffff81118282101715611d9857600080fd5b604052919050565b600067ffffffffffffffff821115611db6578081fd5b506020908102019056fea2646970667358221220f77557becf618c992b252e27a8b433c066853124736ede03d80413bafcae132a64736f6c634300060c0033",
	"bytecodeSha1": "f1a306424a77ddfb81455df7858e71adf0d146fa",
	"compiler": {
		"evm_version": "istanbul",
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"version": "0.6.12"
	},
	"contractName": "BadgerTree",
	"coverageMap": {
		"branches": {
			"0": {
				"BadgerTree._onlyGuardian": {
					"98": [
						2428,
						2462,
						true
					]
				},
				"BadgerTree._onlyRootUpdater": {
					"99": [
						2300,
						2338,
						true
					]
				},
				"BadgerTree.approveRoot": {
					"89": [
						5523,
						5548,
						true
					],
					"90": [
						5585,
						5624,
						true
					],
					"91": [
						5669,
						5690,
						true
					]
				},
				"BadgerTree.claim": {
					"93": [
						3680,
						3701,
						true
					],
					"94": [
						3879,
						3939,
						true
					],
					"95": [
						4153,
						4166,
						true
					],
					"96": [
						4302,
						4356,
						true
					],
					"97": [
						4406,
						4477,
						true
					]
				},
				"BadgerTree.proposeRoot": {
					"92": [
						4932,
						4960,
						true
					]
				}
			},
			"1": {},
			"10": {},
			"2": {
				"AccessControlUpgradeable._grantRole": {
					"103": [
						7458,
						7491,
						false
					]
				},
				"AccessControlUpgradeable._revokeRole": {
					"104": [
						7649,
						7685,
						false
					]
				},
				"AccessControlUpgradeable.grantRole": {
					"100": [
						5087,
						5132,
						true
					]
				},
				"AccessControlUpgradeable.renounceRole": {
					"101": [
						6264,
						6287,
						true
					]
				},
				"AccessControlUpgradeable.revokeRole": {
					"102": [
						5545,
						5590,
						true
					]
				}
			},
			"3": {
				"MerkleProofUpgradeable.verify": {
					"111": [
						760,
						788,
						false
					]
				}
			},
			"4": {
				"SafeMathUpgradeable.add": {
					"113": [
						997,
						1003,
						true
					]
				},
				"SafeMathUpgradeable.sub": {
					"114": [
						1870,
						1876,
						true
					]
				}
			},
			"5": {
				"ContextUpgradeable.__Context_init_unchained": {
					"108": [
						1426,
						1439,
						true
					],
					"109": [
						1443,
						1459,
						true
					],
					"110": [
						1464,
						1476,
						true
					]
				}
			},
			"7": {},
			"8": {
				"EnumerableSetUpgradeable._add": {
					"106": [
						1706,
						1727,
						false
					]
				},
				"EnumerableSetUpgradeable._at": {
					"105": [
						4528,
						4554,
						true
					]
				},
				"EnumerableSetUpgradeable._remove": {
					"107": [
						2431,
						2446,
						false
					]
				}
			},
			"9": {
				"PausableUpgradeable._unpause": {
					"112": [
						1863,
						1870,
						true
					]
				}
			}
		},
		"statements": {
			"0": {
				"BadgerTree._onlyGuardian": {
					"54": [
						2420,
						2479
					]
				},
				"BadgerTree._onlyRootUpdater": {
					"57": [
						2292,
						2358
					]
				},
				"BadgerTree.approveRoot": {
					"1": [
						5515,
						5567
					],
					"2": [
						5577,
						5651
					],
					"3": [
						5661,
						5710
					],
					"4": [
						5721,
						5755
					],
					"5": [
						5765,
						5782
					],
					"6": [
						5792,
						5823
					],
					"7": [
						5833,
						5859
					],
					"8": [
						5869,
						5906
					],
					"9": [
						5917,
						5985
					]
				},
				"BadgerTree.claim": {
					"42": [
						3672,
						3719
					],
					"43": [
						3871,
						3957
					],
					"44": [
						4145,
						4186
					],
					"45": [
						4201,
						4279
					],
					"46": [
						4294,
						4384
					],
					"47": [
						4398,
						4497
					],
					"48": [
						4512,
						4595
					],
					"49": [
						4035,
						4038
					]
				},
				"BadgerTree.getClaimedFor": {
					"31": [
						3263,
						3304
					],
					"32": [
						3244,
						3247
					],
					"33": [
						3324,
						3352
					]
				},
				"BadgerTree.getCurrentMerkleData": {
					"34": [
						2576,
						2670
					]
				},
				"BadgerTree.getPendingMerkleData": {
					"0": [
						2767,
						2875
					]
				},
				"BadgerTree.hasPendingRoot": {
					"13": [
						2953,
						2995
					]
				},
				"BadgerTree.initialize": {
					"35": [
						1706,
						1728
					],
					"36": [
						1738,
						1765
					],
					"37": [
						1776,
						1813
					],
					"38": [
						1866,
						1911
					],
					"39": [
						1921,
						1963
					]
				},
				"BadgerTree.pause": {
					"27": [
						6080,
						6095
					],
					"28": [
						6105,
						6113
					]
				},
				"BadgerTree.proposeRoot": {
					"19": [
						4896,
						4914
					],
					"20": [
						4924,
						4980
					],
					"21": [
						4991,
						5011
					],
					"22": [
						5021,
						5045
					],
					"23": [
						5055,
						5093
					],
					"24": [
						5103,
						5129
					],
					"25": [
						5139,
						5176
					],
					"26": [
						5187,
						5275
					]
				},
				"BadgerTree.unpause": {
					"16": [
						6212,
						6227
					],
					"17": [
						6237,
						6247
					]
				}
			},
			"1": {
				"ContextUpgradeable._msgSender": {
					"51": [
						900,
						917
					]
				}
			},
			"10": {},
			"2": {
				"AccessControlUpgradeable.__AccessControl_init": {
					"63": [
						1652,
						1678
					],
					"64": [
						1688,
						1720
					]
				},
				"AccessControlUpgradeable._grantRole": {
					"52": [
						7507,
						7552
					]
				},
				"AccessControlUpgradeable._revokeRole": {
					"53": [
						7701,
						7746
					]
				},
				"AccessControlUpgradeable.getRoleAdmin": {
					"10": [
						4718,
						4747
					]
				},
				"AccessControlUpgradeable.getRoleMember": {
					"29": [
						4417,
						4454
					]
				},
				"AccessControlUpgradeable.getRoleMemberCount": {
					"40": [
						3697,
						3733
					]
				},
				"AccessControlUpgradeable.grantRole": {
					"11": [
						5079,
						5184
					],
					"12": [
						5195,
						5220
					]
				},
				"AccessControlUpgradeable.hasRole": {
					"30": [
						3395,
						3440
					]
				},
				"AccessControlUpgradeable.renounceRole": {
					"14": [
						6256,
						6339
					],
					"15": [
						6350,
						6376
					]
				},
				"AccessControlUpgradeable.revokeRole": {
					"41": [
						5537,
						5643
					]
				}
			},
			"3": {
				"MerkleProofUpgradeable.verify": {
					"67": [
						886,
						956
					],
					"68": [
						1073,
						1143
					],
					"69": [
						691,
						694
					],
					"70": [
						1253,
						1280
					]
				}
			},
			"4": {
				"SafeMathUpgradeable.add": {
					"50": [
						989,
						1035
					]
				},
				"SafeMathUpgradeable.sub": {
					"71": [
						1409,
						1459
					],
					"78": [
						1862,
						1891
					]
				}
			},
			"5": {
				"Initializable._isConstructor": {
					"62": [
						2438,
						2452
					]
				}
			},
			"7": {},
			"8": {
				"EnumerableSetUpgradeable._add": {
					"79": [
						1743,
						1766
					],
					"80": [
						1901,
						1941
					],
					"81": [
						1955,
						1966
					],
					"82": [
						1997,
						2009
					]
				},
				"EnumerableSetUpgradeable._at": {
					"74": [
						4520,
						4593
					],
					"75": [
						4603,
						4628
					]
				},
				"EnumerableSetUpgradeable._contains": {
					"76": [
						3876,
						3907
					]
				},
				"EnumerableSetUpgradeable._length": {
					"77": [
						4070,
						4095
					]
				},
				"EnumerableSetUpgradeable._remove": {
					"83": [
						3256,
						3294
					],
					"84": [
						3360,
						3403
					],
					"85": [
						3509,
						3526
					],
					"86": [
						3594,
						3620
					],
					"87": [
						3635,
						3646
					],
					"88": [
						3677,
						3689
					]
				},
				"EnumerableSetUpgradeable.add": {
					"72": [
						4961,
						5009
					]
				},
				"EnumerableSetUpgradeable.at": {
					"60": [
						6189,
						6236
					]
				},
				"EnumerableSetUpgradeable.contains": {
					"61": [
						5508,
						5561
					]
				},
				"EnumerableSetUpgradeable.length": {
					"66": [
						5731,
						5757
					]
				},
				"EnumerableSetUpgradeable.remove": {
					"73": [
						5273,
						5324
					]
				}
			},
			"9": {
				"PausableUpgradeable.__Pausable_init_unchained": {
					"65": [
						1176,
						1191
					]
				},
				"PausableUpgradeable._pause": {
					"58": [
						2107,
						2121
					],
					"59": [
						2131,
						2156
					]
				},
				"PausableUpgradeable._unpause": {
					"55": [
						2353,
						2368
					],
					"56": [
						2378,
						2405
					]
				},
				"PausableUpgradeable.paused": {
					"18": [
						1348,
						1362
					]
				}
			}
		}
	},
	"dependencies": [
		"AccessControlUpgradeable",
		"AddressUpgradeable",
		"ContextUpgradeable",
		"EnumerableSetUpgradeable",
		"ICumulativeMultiTokenMerkleDistributor",
		"Initializable",
		"MerkleProofUpgradeable",
		"PausableUpgradeable",
		"SafeMathUpgradeable"
	],
	"deployedBytecode": "608060405234801561001057600080fd5b50600436106101fb5760003560e01c80639010d07c1161011a578063b20cd555116100ad578063d547741f1161007c578063d547741f146103a6578063d9ab2c5c146103b9578063ef5d9ae8146103c1578063f6162b01146103d4578063fe0317ef146103e7576101fb565b8063b20cd55514610370578063bab2f55214610378578063c0c53b8b14610380578063ca15c87314610393576101fb565b806397c9c12f116100e957806397c9c12f14610337578063a155285f1461033f578063a217fddf14610347578063a2fcfd681461034f576101fb565b80639010d07c146102f457806391d14854146103145780639637f4751461032757806396f7cd571461032f576101fb565b80632f37a7741161019257806366739d3b1161016157806366739d3b146102c95780638270d87b146102dc5780638456cb59146102e45780638cbc762e146102ec576101fb565b80632f37a7741461029157806336568abe146102a65780633f4ba83a146102b95780635c975abb146102c1576101fb565b8063248a9ca3116101ce578063248a9ca31461025b57806324ea54f41461026e5780632eb4a7ab146102765780632f2ff15d1461027e576101fb565b80630c9cbf0e146102005780630d4202ce14610229578063116037cc1461023e5780631fe065ad14610253575b600080fd5b61021361020e366004611528565b6103ef565b6040516102209190611928565b60405180910390f35b61023161040c565b6040516102209190611d38565b61025161024c36600461176d565b610442565b005b61021361051a565b61021361026936600461171b565b610520565b610213610535565b610213610559565b61025161028c366004611733565b61055f565b6102996105a7565b604051610220919061191d565b6102516102b4366004611733565b6105c1565b610251610603565b610299610615565b6102516102d736600461176d565b61061e565b6102136106c6565b6102516106cc565b6102136106dc565b610307610302366004611798565b6106e2565b6040516102209190611862565b610299610322366004611733565b610703565b61021361071b565b610213610721565b610213610727565b61021361072d565b610213610733565b61036261035d3660046115a1565b610738565b60405161022092919061188f565b61023161080d565b610213610843565b61025161038e36600461155c565b610849565b6102136103a136600461171b565b61093d565b6102516103b4366004611733565b610954565b61021361098e565b6102136103cf36600461150d565b6109b1565b6102516103e2366004611652565b6109c3565b610213610dc4565b60a160209081526000928352604080842090915290825290205481565b61041461148d565b6040518060800160405280609d548152602001609e548152602001609f54815260200160a054815250905090565b609d54831461046c5760405162461bcd60e51b815260040161046390611aa3565b60405180910390fd5b609e54821461048d5760405162461bcd60e51b815260040161046390611b45565b609c5481146104ae5760405162461bcd60e51b815260040161046390611cc0565b6097546104bc906001610dca565b60978190556098849055609983905542609a81905543609b8190556040518593879390927f03934c24f0815369800391139ad44a2b4ac75e07cbbf74bdae8c3d9ab0caca159261050d9291906117ce565b60405180910390a4505050565b60995481565b60009081526033602052604090206002015490565b7f55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a504181565b60985481565b60008281526033602052604090206002015461057d90610322610def565b6105995760405162461bcd60e51b8152600401610463906119c6565b6105a38282610df3565b5050565b6097546000906105b8906001610dca565b609c5414905090565b6105c9610def565b6001600160a01b0316816001600160a01b0316146105f95760405162461bcd60e51b815260040161046390611ce9565b6105a38282610e5c565b61060b610ec5565b610613610f0b565b565b60655460ff1690565b60655460ff16156106415760405162461bcd60e51b815260040161046390611b1b565b610649610f77565b609754610657906001610dca565b81146106755760405162461bcd60e51b815260040161046390611cc0565b609c819055609d839055609e82905542609f8190554360a08190556040518492869285927fdb07d3ace4eb8cb6d13437eec22aee8fceb4200c6b31945a3fcd75758d9bd34b9261050d9290916117ce565b609b5481565b6106d4610ec5565b610613610fbc565b609f5481565b60008281526033602052604081206106fa9083611015565b90505b92915050565b60008281526033602052604081206106fa9083611021565b609d5481565b609a5481565b60a05481565b609c5481565b600081565b6060806060835167ffffffffffffffff8111801561075557600080fd5b5060405190808252806020026020018201604052801561077f578160200160208202803683370190505b50905060005b84518110156107ff576001600160a01b038616600090815260a16020526040812086519091908790849081106107b757fe5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020548282815181106107ec57fe5b6020908102919091010152600101610785565b5083925090505b9250929050565b61081561148d565b604051806080016040528060985481526020016099548152602001609a54815260200160a054815250905090565b60975481565b600054610100900460ff16806108625750610862611036565b80610870575060005460ff16155b61088c5760405162461bcd60e51b815260040161046390611b75565b600054610100900460ff161580156108b7576000805460ff1961ff0019909116610100171660011790555b6108bf61103c565b6108c76110cf565b6108d2600085610599565b6108fb7e9ab23a1010d07a0450a1fbea1d84169b57d2c2273b54bff0f20c3e90199b5d84610599565b6109257f55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a504183610599565b8015610937576000805461ff00191690555b50505050565b60008181526033602052604081206106fd9061115b565b60008281526033602052604090206002015461097290610322610def565b6105f95760405162461bcd60e51b815260040161046390611acb565b7e9ab23a1010d07a0450a1fbea1d84169b57d2c2273b54bff0f20c3e90199b5d81565b60a26020526000908152604090205481565b60655460ff16156109e65760405162461bcd60e51b815260040161046390611b1b565b6097548314610a075760405162461bcd60e51b815260040161046390611bec565b60008433858b8b8b8b604051602001610a2697969594939291906117dc565b604051602081830303815290604052805190602001209050610a7f838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506098549150849050611166565b610a9b5760405162461bcd60e51b815260040161046390611c99565b60005b88811015610db85733600090815260a160205260408120610b1d90828d8d86818110610ac657fe5b9050602002016020810190610adb919061150d565b6001600160a01b03166001600160a01b03168152602001908152602001600020548a8a85818110610b0857fe5b9050602002013561120390919063ffffffff16565b905060008111610b3f5760405162461bcd60e51b815260040161046390611c4a565b33600090815260a160205260408120610b96918391908e8e87818110610b6157fe5b9050602002016020810190610b76919061150d565b6001600160a01b0316815260208101919091526040016000205490610dca565b33600090815260a160205260408120908d8d86818110610bb257fe5b9050602002016020810190610bc7919061150d565b6001600160a01b03168152602081019190915260400160002055888883818110610bed57fe5b33600090815260a160209081526040822092029390930135929091508d8d86818110610c1557fe5b9050602002016020810190610c2a919061150d565b6001600160a01b03166001600160a01b031681526020019081526020016000205414610c685760405162461bcd60e51b815260040161046390611c13565b8a8a83818110610c7457fe5b9050602002016020810190610c89919061150d565b6001600160a01b031663a9059cbb338b8b86818110610ca457fe5b905060200201356040518363ffffffff1660e01b8152600401610cc8929190611876565b602060405180830381600087803b158015610ce257600080fd5b505af1158015610cf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1a91906116fb565b610d365760405162461bcd60e51b815260040161046390611a43565b858b8b84818110610d4357fe5b9050602002016020810190610d58919061150d565b6001600160a01b0316337f6f9c9826be5976f3f82a3490c52a83328ce2ec7be9e62dcb39c26da5148d7c768c8c87818110610d8f57fe5b905060200201354243604051610da793929190611d63565b60405180910390a450600101610a9e565b50505050505050505050565b609e5481565b6000828201838110156106fa5760405162461bcd60e51b815260040161046390611a6c565b3390565b6000828152603360205260409020610e0b9082611245565b156105a357610e18610def565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152603360205260409020610e74908261125a565b156105a357610e81610def565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b610eef7f55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a504133610703565b6106135760405162461bcd60e51b815260040161046390611c73565b60655460ff16610f2d5760405162461bcd60e51b815260040161046390611a15565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610f60610def565b604051610f6d9190611862565b60405180910390a1565b610fa07e9ab23a1010d07a0450a1fbea1d84169b57d2c2273b54bff0f20c3e90199b5d33610703565b6106135760405162461bcd60e51b815260040161046390611bc3565b60655460ff1615610fdf5760405162461bcd60e51b815260040161046390611b1b565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f60610def565b60006106fa838361126f565b60006106fa836001600160a01b0384166112b4565b303b1590565b600054610100900460ff16806110555750611055611036565b80611063575060005460ff16155b61107f5760405162461bcd60e51b815260040161046390611b75565b600054610100900460ff161580156110aa576000805460ff1961ff0019909116610100171660011790555b6110b26112cc565b6110ba6112cc565b80156110cc576000805461ff00191690555b50565b600054610100900460ff16806110e857506110e8611036565b806110f6575060005460ff16155b6111125760405162461bcd60e51b815260040161046390611b75565b600054610100900460ff1615801561113d576000805460ff1961ff0019909116610100171660011790555b6065805460ff1916905580156110cc576000805461ff001916905550565b60006106fd8261134d565b600081815b85518110156111f857600086828151811061118257fe5b602002602001015190508083116111c35782816040516020016111a69291906117ce565b6040516020818303038152906040528051906020012092506111ef565b80836040516020016111d69291906117ce565b6040516020818303038152906040528051906020012092505b5060010161116b565b509092149392505050565b60006106fa83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611351565b60006106fa836001600160a01b03841661137d565b60006106fa836001600160a01b0384166113c7565b815460009082106112925760405162461bcd60e51b815260040161046390611984565b8260000182815481106112a157fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b600054610100900460ff16806112e557506112e5611036565b806112f3575060005460ff16155b61130f5760405162461bcd60e51b815260040161046390611b75565b600054610100900460ff161580156110ba576000805460ff1961ff00199091166101001716600117905580156110cc576000805461ff001916905550565b5490565b600081848411156113755760405162461bcd60e51b81526004016104639190611931565b505050900390565b600061138983836112b4565b6113bf575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556106fd565b5060006106fd565b6000818152600183016020526040812054801561148357835460001980830191908101906000908790839081106113fa57fe5b906000526020600020015490508087600001848154811061141757fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061144757fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506106fd565b60009150506106fd565b60408051608081018252600080825260208201819052918101829052606081019190915290565b80356001600160a01b03811681146106fd57600080fd5b60008083601f8401126114dc578182fd5b50813567ffffffffffffffff8111156114f3578182fd5b602083019150836020808302850101111561080657600080fd5b60006020828403121561151e578081fd5b6106fa83836114b4565b6000806040838503121561153a578081fd5b61154484846114b4565b915061155384602085016114b4565b90509250929050565b600080600060608486031215611570578081fd5b61157a85856114b4565b925061158985602086016114b4565b915061159885604086016114b4565b90509250925092565b600080604083850312156115b3578182fd5b6115bd84846114b4565b915060208084013567ffffffffffffffff8111156115d9578283fd5b8401601f810186136115e9578283fd5b80356115fc6115f782611da0565b611d79565b81815283810190838501858402850186018a1015611618578687fd5b8694505b838510156116425761162e8a826114b4565b83526001949094019391850191850161161c565b5080955050505050509250929050565b60008060008060008060008060a0898b03121561166d578384fd5b883567ffffffffffffffff80821115611684578586fd5b6116908c838d016114cb565b909a50985060208b01359150808211156116a8578586fd5b6116b48c838d016114cb565b909850965060408b0135955060608b0135945060808b01359150808211156116da578384fd5b506116e78b828c016114cb565b999c989b5096995094979396929594505050565b60006020828403121561170c578081fd5b815180151581146106fa578182fd5b60006020828403121561172c578081fd5b5035919050565b60008060408385031215611745578182fd5b8235915060208301356001600160a01b0381168114611762578182fd5b809150509250929050565b600080600060608486031215611781578283fd5b505081359360208301359350604090920135919050565b600080604083850312156117aa578182fd5b50508035926020909101359150565b815260200190565b6001600160a01b03169052565b918252602082015260400190565b600088825260206bffffffffffffffffffffffff198960601b16818401528760348401526054830187835b88811015611835578184016001600160a01b0361182482856114b4565b168452928401929150600101611807565b50506001600160fb1b0385111561184a578283fd5b90840290818682370190815298975050505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b604080825283519082018190526000906020906060840190828701845b828110156118cf576118bf8483516117c1565b92840192908401906001016118ac565b505050838103828501528085516118e68184611928565b91508387019250845b81811015611910576119028385516117b9565b9385019392506001016118ef565b5090979650505050505050565b901515815260200190565b90815260200190565b6000602080835283518082850152825b8181101561195d57858101830151858201604001528201611941565b8181111561196e5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252600e908201526d125b98dbdc9c9958dd081c9bdbdd60921b604082015260600190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b602080825260169082015275092dcc6dee4e4cac6e840c6dedce8cadce840d0c2e6d60531b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252600f908201526e37b7363ca937b7ba2ab83230ba32b960891b604082015260600190565b6020808252600d908201526c496e76616c6964206379636c6560981b604082015260600190565b60208082526017908201527f436c61696d656420616d6f756e74206d69736d61746368000000000000000000604082015260600190565b6020808252600f908201526e45786365737369766520636c61696d60881b604082015260600190565b6020808252600c908201526b37b7363ca3bab0b93234b0b760a11b604082015260600190565b6020808252600d908201526c24b73b30b634b210383937b7b360991b604082015260600190565b6020808252600f908201526e496e636f7272656374206379636c6560881b604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b8151815260208083015190820152604080830151908201526060918201519181019190915260800190565b9283526020830191909152604082015260600190565b60405181810167ffffffffffffffff81118282101715611d9857600080fd5b604052919050565b600067ffffffffffffffff821115611db6578081fd5b506020908102019056fea2646970667358221220f77557becf618c992b252e27a8b433c066853124736ede03d80413bafcae132a64736f6c634300060c0033",
	"deployedSourceMap": "588:5668:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1441:62;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2683:199;;;:::i;:::-;;;;;;;:::i;5395:597::-;;;;;;:::i;:::-;;:::i;:::-;;1117:32;;;:::i;4642:112:2:-;;;;;;:::i;:::-;;:::i;980:66:0:-;;;:::i;1086:25::-;;;:::i;5004:223:2:-;;;;;;:::i;:::-;;:::i;2888:114:0:-;;;:::i;:::-;;;;;;;:::i;6178:205:2:-;;;;;;:::i;:::-;;:::i;6174:80:0:-;;;:::i;1293:76:9:-;;;:::i;4762:520:0:-;;;;;;:::i;:::-;;:::i;1196:37::-;;;:::i;6044:76::-;;;:::i;1356:35::-;;;:::i;4325:136:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3310:137::-;;;;;;:::i;:::-;;:::i;1273:32:0:-;;;:::i;1155:35::-;;;:::i;1397:37::-;;;:::i;1240:27::-;;;:::i;2087:49:2:-;;;:::i;3008:351:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2492:185::-;;;:::i;1053:27::-;;;:::i;1563:407::-;;;;;;:::i;:::-;;:::i;3615:125:2:-;;;;;;:::i;:::-;;:::i;5461:226::-;;;;;;:::i;:::-;;:::i;900:74:0:-;;;:::i;1509:47::-;;;;;;:::i;:::-;;:::i;3451:1161::-;;;;;;:::i;:::-;;:::i;1311:39::-;;;:::i;1441:62::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;2683:199::-;2738:17;;:::i;:::-;2774:101;;;;;;;;2785:17;;2774:101;;;;2804:24;;2774:101;;;;2830:20;;2774:101;;;;2852:22;;2774:101;;;2767:108;;2683:199;:::o;5395:597::-;5531:17;;5523:4;:25;5515:52;;;;-1:-1:-1;;;5515:52:0;;;;;;;:::i;:::-;;;;;;;;;5600:24;;5585:11;:39;5577:74;;;;-1:-1:-1;;;5577:74:0;;;;;;;:::i;:::-;5678:12;;5669:5;:21;5661:49;;;;-1:-1:-1;;;5661:49:0;;;;;;;:::i;:::-;5736:12;;:19;;5753:1;5736:16;:19::i;:::-;5721:12;:34;;;5765:10;:17;;;5792;:31;;;5856:3;5833:20;:26;;;5894:12;5869:22;:37;;;5922:63;;5812:11;;5778:4;;5721:34;;5922:63;;;;5856:3;5894:12;5922:63;:::i;:::-;;;;;;;;5395:597;;;:::o;1117:32::-;;;;:::o;4642:112:2:-;4699:7;4725:12;;;:6;:12;;;;;:22;;;;4642:112::o;980:66:0:-;1020:26;980:66;:::o;1086:25::-;;;;:::o;5004:223:2:-;5095:12;;;;:6;:12;;;;;:22;;;5087:45;;5119:12;:10;:12::i;5087:45::-;5079:105;;;;-1:-1:-1;;;5079:105:2;;;;;;;:::i;:::-;5195:25;5206:4;5212:7;5195:10;:25::i;:::-;5004:223;;:::o;2888:114:0:-;2976:12;;2937:4;;2976:19;;2993:1;2976:16;:19::i;:::-;2960:12;;:35;2953:42;;2888:114;:::o;6178:205:2:-;6275:12;:10;:12::i;:::-;-1:-1:-1;;;;;6264:23:2;:7;-1:-1:-1;;;;;6264:23:2;;6256:83;;;;-1:-1:-1;;;6256:83:2;;;;;;;:::i;:::-;6350:26;6362:4;6368:7;6350:11;:26::i;6174:80:0:-;6212:15;:13;:15::i;:::-;6237:10;:8;:10::i;:::-;6174:80::o;1293:76:9:-;1355:7;;;;1293:76;:::o;4762:520:0:-;1599:7:9;;;;1598:8;1590:37;;;;-1:-1:-1;;;1590:37:9;;;;;;;:::i;:::-;4896:18:0::1;:16;:18::i;:::-;4941:12;::::0;:19:::1;::::0;4958:1:::1;4941:16;:19::i;:::-;4932:5;:28;4924:56;;;;-1:-1:-1::0;;;4924:56:0::1;;;;;;;:::i;:::-;4991:12;:20:::0;;;5021:17:::1;:24:::0;;;5055::::1;:38:::0;;;5126:3:::1;5103:20;:26:::0;;;5164:12:::1;5139:22;:37:::0;;;5192:83:::1;::::0;5082:11;;5041:4;;5006:5;;5192:83:::1;::::0;::::1;::::0;5126:3;;5192:83:::1;:::i;1196:37::-:0;;;;:::o;6044:76::-;6080:15;:13;:15::i;:::-;6105:8;:6;:8::i;1356:35::-;;;;:::o;4325:136:2:-;4398:7;4424:12;;;:6;:12;;;;;:30;;4448:5;4424:23;:30::i;:::-;4417:37;;4325:136;;;;;:::o;3310:137::-;3379:4;3402:12;;;:6;:12;;;;;:38;;3432:7;3402:29;:38::i;1273:32:0:-;;;;:::o;1155:35::-;;;;:::o;1397:37::-;;;;:::o;1240:27::-;;;;:::o;2087:49:2:-;2132:4;2087:49;:::o;3008:351:0:-;3090:16;3108;3136:28;3181:6;:13;3167:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3167:28:0;;3136:59;;3210:9;3205:110;3229:6;:13;3225:1;:17;3205:110;;;-1:-1:-1;;;;;3280:13:0;;;;;;:7;:13;;;;;3294:9;;3280:13;;;3294:6;;3301:1;;3294:9;;;;;;;;;;;;-1:-1:-1;;;;;3280:24:0;-1:-1:-1;;;;;3280:24:0;;;;;;;;;;;;;3263:11;3275:1;3263:14;;;;;;;;;;;;;;;;;:41;3244:3;;3205:110;;;-1:-1:-1;3332:6:0;;-1:-1:-1;3340:11:0;-1:-1:-1;3008:351:0;;;;;;:::o;2492:185::-;2547:17;;:::i;:::-;2583:87;;;;;;;;2594:10;;2583:87;;;;2606:17;;2583:87;;;;2625:20;;2583:87;;;;2647:22;;2583:87;;;2576:94;;2492:185;:::o;1053:27::-;;;;:::o;1563:407::-;1426:13:5;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:5;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:5;;;;;;;:::i;:::-;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:5;;;;;1652:19;1634:4;1652:19;;;1584:98;1706:22:0::1;:20;:22::i;:::-;1738:27;:25;:27::i;:::-;1776:37;2132:4:2;1807:5:0::0;1776:10:::1;:37::i;:::-;1866:45;944:30;1896:14;1866:10;:45::i;:::-;1921:42;1020:26;1947:15;1921:10;:42::i;:::-;1708:14:5::0;1704:66;;;1754:5;1738:21;;-1:-1:-1;;1738:21:5;;;1704:66;1563:407:0;;;;:::o;3615:125:2:-;3678:7;3704:12;;;:6;:12;;;;;:29;;:27;:29::i;5461:226::-;5553:12;;;;:6;:12;;;;;:22;;;5545:45;;5577:12;:10;:12::i;5545:45::-;5537:106;;;;-1:-1:-1;;;5537:106:2;;;;;;;:::i;900:74:0:-;944:30;900:74;:::o;1509:47::-;;;;;;;;;;;;;:::o;3451:1161::-;1599:7:9;;;;1598:8;1590:37;;;;-1:-1:-1;;;1590:37:9;;;;;;;:::i;:::-;3689:12:0::1;;3680:5;:21;3672:47;;;;-1:-1:-1::0;;;3672:47:0::1;;;;;;;:::i;:::-;3766:12;3808:5;3815:10;3827:5;3834:6;;3842:17;;3791:69;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3781:80;;;;;;3766:95;;3879:60;3909:11;;3879:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;3922:10:0::1;::::0;;-1:-1:-1;3934:4:0;;-1:-1:-1;3879:29:0::1;:60::i;:::-;3871:86;;;;-1:-1:-1::0;;;3871:86:0::1;;;;;;;:::i;:::-;4001:9;3996:610;4016:17:::0;;::::1;3996:610;;;4107:10;4054:17;4099:19:::0;;;:7:::1;:19;::::0;;;;4074:56:::1;::::0;4054:17;4119:6;;4126:1;4119:9;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4099:30:0::1;-1:-1:-1::0;;;;;4099:30:0::1;;;;;;;;;;;;;4074:17;;4092:1;4074:20;;;;;;;;;;;;;:24;;:56;;;;:::i;:::-;4054:76;;4165:1;4153:9;:13;4145:41;;;;-1:-1:-1::0;;;4145:41:0::1;;;;;;;:::i;:::-;4242:10;4234:19;::::0;;;:7:::1;:19;::::0;;;;:45:::1;::::0;4269:9;;4234:19;4254:6;;4261:1;4254:9;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4234:30:0::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;4234:30:0;;;:34:::1;:45::i;:::-;4209:10;4201:19;::::0;;;:7:::1;:19;::::0;;;;;4221:6;;4228:1;4221:9;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4201:30:0::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;4201:30:0;:78;4336:17;;4354:1;4336:20;;::::1;;;;;4310:10;4302:19;::::0;;;:7:::1;4336:20;4302:19:::0;;;;;;4336:20;::::1;::::0;;;::::1;;::::0;4302:19;;-1:-1:-1;4322:6:0;;4329:1;4322:9;;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4302:30:0::1;-1:-1:-1::0;;;;;4302:30:0::1;;;;;;;;;;;;;:54;4294:90;;;;-1:-1:-1::0;;;4294:90:0::1;;;;;;;:::i;:::-;4424:6;;4431:1;4424:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4406:37:0::1;;4444:10;4456:17;;4474:1;4456:20;;;;;;;;;;;;;4406:71;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4398:99;;;;-1:-1:-1::0;;;4398:99:0::1;;;;;;;:::i;:::-;4570:5;4537:6;;4544:1;4537:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4517:78:0::1;4525:10;4517:78;4548:17:::0;;4566:1;4548:20;;::::1;;;;;;;;;;;4577:3;4582:12;4517:78;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;4035:3:0::1;;3996:610;;;;1637:1:9;3451:1161:0::0;;;;;;;;:::o;1311:39::-;;;;:::o;885:176:4:-;943:7;974:5;;;997:6;;;;989:46;;;;-1:-1:-1;;;989:46:4;;;;;;;:::i;820:104:1:-;907:10;820:104;:::o;7385:184:2:-;7458:12;;;;:6;:12;;;;;:33;;7483:7;7458:24;:33::i;:::-;7454:109;;;7539:12;:10;:12::i;:::-;-1:-1:-1;;;;;7512:40:2;7530:7;-1:-1:-1;;;;;7512:40:2;7524:4;7512:40;;;;;;;;;;7385:184;;:::o;7575:188::-;7649:12;;;;:6;:12;;;;;:36;;7677:7;7649:27;:36::i;:::-;7645:112;;;7733:12;:10;:12::i;:::-;-1:-1:-1;;;;;7706:40:2;7724:7;-1:-1:-1;;;;;7706:40:2;7718:4;7706:40;;;;;;;;;;7575:188;;:::o;2371:115:0:-;2428:34;1020:26;2451:10;2428:7;:34::i;:::-;2420:59;;;;-1:-1:-1;;;2420:59:0;;;;;;;:::i;2295:117:9:-;1863:7;;;;1855:40;;;;-1:-1:-1;;;1855:40:9;;;;;;;:::i;:::-;2353:7:::1;:15:::0;;-1:-1:-1;;2353:15:9::1;::::0;;2383:22:::1;2392:12;:10;:12::i;:::-;2383:22;;;;;;:::i;:::-;;;;;;;;2295:117::o:0;2240:125:0:-;2300:38;944:30;2327:10;2300:7;:38::i;:::-;2292:66;;;;-1:-1:-1;;;2292:66:0;;;;;;;:::i;2048:115:9:-;1599:7;;;;1598:8;1590:37;;;;-1:-1:-1;;;1590:37:9;;;;;;;:::i;:::-;2107:7:::1;:14:::0;;-1:-1:-1;;2107:14:9::1;2117:4;2107:14;::::0;;2136:20:::1;2143:12;:10;:12::i;6096:147:8:-:0;6170:7;6212:22;6216:3;6228:5;6212:3;:22::i;5412:156::-;5492:4;5515:46;5525:3;-1:-1:-1;;;;;5545:14:8;;5515:9;:46::i;1866:593:5:-;2302:4;2410:17;2445:7;1866:593;:::o;1589:138:2:-;1426:13:5;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:5;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:5;;;;;;;:::i;:::-;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:5;;;;;1652:19;1634:4;1652:19;;;1584:98;1652:26:2::1;:24;:26::i;:::-;1688:32;:30;:32::i;:::-;1708:14:5::0;1704:66;;;1754:5;1738:21;;-1:-1:-1;;1738:21:5;;;1704:66;1589:138:2;:::o;1108:90:9:-;1426:13:5;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:5;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:5;;;;;;;:::i;:::-;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:5;;;;;1652:19;1634:4;1652:19;;;1584:98;1176:7:9::1;:15:::0;;-1:-1:-1;;1176:15:9::1;::::0;;1704:66:5;;;;1754:5;1738:21;;-1:-1:-1;;1738:21:5;;;1108:90:9;:::o;5649:115:8:-;5712:7;5738:19;5746:3;5738:7;:19::i;508:779:3:-;599:4;638;599;653:515;677:5;:12;673:1;:16;653:515;;;710:20;733:5;739:1;733:8;;;;;;;;;;;;;;710:31;;776:12;760;:28;756:402;;928:12;942;911:44;;;;;;;;;:::i;:::-;;;;;;;;;;;;;901:55;;;;;;886:70;;756:402;;;1115:12;1129;1098:44;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1088:55;;;;;;1073:70;;756:402;-1:-1:-1;691:3:3;;653:515;;;-1:-1:-1;1260:20:3;;;;508:779;-1:-1:-1;;;508:779:3:o;1332:134:4:-;1390:7;1416:43;1420:1;1423;1416:43;;;;;;;;;;;;;;;;;:3;:43::i;4875:141:8:-;4945:4;4968:41;4973:3;-1:-1:-1;;;;;4993:14:8;;4968:4;:41::i;5184:147::-;5257:4;5280:44;5288:3;-1:-1:-1;;;;;5308:14:8;;5280:7;:44::i;4434:201::-;4528:18;;4501:7;;4528:26;-1:-1:-1;4520:73:8;;;;-1:-1:-1;;;4520:73:8;;;;;;;:::i;:::-;4610:3;:11;;4622:5;4610:18;;;;;;;;;;;;;;;;4603:25;;4434:201;;;;:::o;3787:127::-;3860:4;3883:19;;;:12;;;;;:19;;;;;;:24;;;3787:127::o;751:64:1:-;1426:13:5;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:5;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:5;;;;;;;:::i;:::-;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:5;;;;;1652:19;1634:4;1652:19;;;1708:14;1704:66;;;1754:5;1738:21;;-1:-1:-1;;1738:21:5;;;751:64:1;:::o;3995:107:8:-;4077:18;;3995:107::o;1757:187:4:-;1843:7;1878:12;1870:6;;;;1862:29;;;;-1:-1:-1;;;1862:29:4;;;;;;;;:::i;:::-;-1:-1:-1;;;1913:5:4;;;1757:187::o;1622:404:8:-;1685:4;1706:21;1716:3;1721:5;1706:9;:21::i;:::-;1701:319;;-1:-1:-1;1743:23:8;;;;;;;;:11;:23;;;;;;;;;;;;;1923:18;;1901:19;;;:12;;;:19;;;;;;:40;;;;1955:11;;1701:319;-1:-1:-1;2004:5:8;1997:12;;2194:1512;2260:4;2397:19;;;:12;;;:19;;;;;;2431:15;;2427:1273;;2860:18;;-1:-1:-1;;2812:14:8;;;;2860:22;;;;2788:21;;2860:3;;:22;;3142;;;;;;;;;;;;;;3122:42;;3285:9;3256:3;:11;;3268:13;3256:26;;;;;;;;;;;;;;;;;;;:38;;;;3360:23;;;3402:1;3360:12;;;:23;;;;;;3386:17;;;3360:43;;3509:17;;3360:3;;3509:17;;;;;;;;;;;;;;;;;;;;;;3601:3;:12;;:19;3614:5;3601:19;;;;;;;;;;;3594:26;;;3642:4;3635:11;;;;;;;;2427:1273;3684:5;3677:12;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;72:20;;-1:-1;;;;;35205:54;;36794:35;;36784:2;;36843:1;;36833:12;160:352;;;290:3;283:4;275:6;271:17;267:27;257:2;;-1:-1;;298:12;257:2;-1:-1;328:20;;368:18;357:30;;354:2;;;-1:-1;;390:12;354:2;434:4;426:6;422:17;410:29;;485:3;434:4;;469:6;465:17;426:6;451:32;;448:41;445:2;;;502:1;;492:12;2418:241;;2522:2;2510:9;2501:7;2497:23;2493:32;2490:2;;;-1:-1;;2528:12;2490:2;2590:53;2635:7;2611:22;2590:53;:::i;2666:366::-;;;2787:2;2775:9;2766:7;2762:23;2758:32;2755:2;;;-1:-1;;2793:12;2755:2;2855:53;2900:7;2876:22;2855:53;:::i;:::-;2845:63;;2963:53;3008:7;2945:2;2988:9;2984:22;2963:53;:::i;:::-;2953:63;;2749:283;;;;;:::o;3039:491::-;;;;3177:2;3165:9;3156:7;3152:23;3148:32;3145:2;;;-1:-1;;3183:12;3145:2;3245:53;3290:7;3266:22;3245:53;:::i;:::-;3235:63;;3353:53;3398:7;3335:2;3378:9;3374:22;3353:53;:::i;:::-;3343:63;;3461:53;3506:7;3443:2;3486:9;3482:22;3461:53;:::i;:::-;3451:63;;3139:391;;;;;:::o;3537:502::-;;;3683:2;3671:9;3662:7;3658:23;3654:32;3651:2;;;-1:-1;;3689:12;3651:2;3751:53;3796:7;3772:22;3751:53;:::i;:::-;3741:63;;3869:2;;3858:9;3854:18;3841:32;3893:18;3885:6;3882:30;3879:2;;;-1:-1;;3915:12;3879:2;3991:22;;648:4;636:17;;632:27;-1:-1;622:2;;-1:-1;;663:12;622:2;710:6;697:20;732:80;747:64;804:6;747:64;:::i;:::-;732:80;:::i;:::-;840:21;;;897:14;;;;872:17;;;986;;;977:27;;;;974:36;-1:-1;971:2;;;-1:-1;;1013:12;971:2;-1:-1;1039:10;;1033:206;1058:6;1055:1;1052:13;1033:206;;;1138:37;1171:3;1159:10;1138:37;:::i;:::-;1126:50;;1080:1;1073:9;;;;;1190:14;;;;1218;;1033:206;;;1037:14;3935:88;;;;;;;;3645:394;;;;;:::o;4046:1211::-;;;;;;;;;4323:3;4311:9;4302:7;4298:23;4294:33;4291:2;;;-1:-1;;4330:12;4291:2;4388:17;4375:31;4426:18;;4418:6;4415:30;4412:2;;;-1:-1;;4448:12;4412:2;4486:80;4558:7;4549:6;4538:9;4534:22;4486:80;:::i;:::-;4468:98;;-1:-1;4468:98;-1:-1;4631:2;4616:18;;4603:32;;-1:-1;4644:30;;;4641:2;;;-1:-1;;4677:12;4641:2;4715:80;4787:7;4778:6;4767:9;4763:22;4715:80;:::i;:::-;4697:98;;-1:-1;4697:98;-1:-1;4832:2;4871:22;;2348:20;;-1:-1;4940:2;4979:22;;2348:20;;-1:-1;5076:3;5061:19;;5048:33;;-1:-1;5090:30;;;5087:2;;;-1:-1;;5123:12;5087:2;;5161:80;5233:7;5224:6;5213:9;5209:22;5161:80;:::i;:::-;4285:972;;;;-1:-1;4285:972;;-1:-1;4285:972;;;;;;5143:98;-1:-1;;;4285:972::o;5264:257::-;;5376:2;5364:9;5355:7;5351:23;5347:32;5344:2;;;-1:-1;;5382:12;5344:2;2090:6;2084:13;36940:5;35038:13;35031:21;36918:5;36915:32;36905:2;;-1:-1;;36951:12;5528:241;;5632:2;5620:9;5611:7;5607:23;5603:32;5600:2;;;-1:-1;;5638:12;5600:2;-1:-1;2211:20;;5594:175;-1:-1;5594:175::o;5776:366::-;;;5897:2;5885:9;5876:7;5872:23;5868:32;5865:2;;;-1:-1;;5903:12;5865:2;2211:20;;;-1:-1;6055:2;6094:22;;72:20;-1:-1;;;;;35205:54;;36794:35;;36784:2;;-1:-1;;36833:12;36784:2;6063:63;;;;5859:283;;;;;:::o;6149:491::-;;;;6287:2;6275:9;6266:7;6262:23;6258:32;6255:2;;;-1:-1;;6293:12;6255:2;-1:-1;;2211:20;;;6445:2;6484:22;;2211:20;;-1:-1;6553:2;6592:22;;;2348:20;;6249:391;-1:-1;6249:391::o;6647:366::-;;;6768:2;6756:9;6747:7;6743:23;6739:32;6736:2;;;-1:-1;;6774:12;6736:2;-1:-1;;2211:20;;;6926:2;6965:22;;;2348:20;;-1:-1;6730:283::o;7401:173::-;11190:37;;7563:4;7554:14;;7481:93::o;7922:103::-;-1:-1;;;;;35205:54;7983:37;;7977:48::o;19329:392::-;11190:37;;;19582:2;19573:12;;11190:37;19684:12;;;19473:248::o;19728:1045::-;;11220:5;11197:3;11190:37;20201:2;36703:14;;7902:5;36707:2;36703:14;;20201:2;20196:3;20192:12;7836:74;11220:5;20319:12;20196:3;20319:12;11190:37;20430:12;20196:3;20430:12;8662:21;-1:-1;8689:299;8714:6;8711:1;8708:13;8689:299;;;34741:12;;;-1:-1;;;;;34715:39;34741:12;8810:6;34715:39;:::i;:::-;35205:54;7983:37;;7174:14;;;;8909:72;-1:-1;8736:1;8729:9;8689:299;;;-1:-1;;;;;;;10062:78;;10059:2;;;-1:-1;;10143:12;10059:2;10174:17;;;;;35806:3;35801;35788:30;35849:16;35842:27;;;35849:16;20092:681;-1:-1;;;;;;;;20092:681::o;20780:222::-;-1:-1;;;;;35205:54;;;;7983:37;;20907:2;20892:18;;20878:124::o;21254:349::-;-1:-1;;;;;35205:54;;;;7661:58;;21589:2;21574:18;;11190:37;21417:2;21402:18;;21388:215::o;21610:629::-;21865:2;21879:47;;;33095:12;;21850:18;;;33875:19;;;21610:629;;33924:4;;33915:14;;;;32791;;;21610:629;9457:260;9482:6;9479:1;9476:13;9457:260;;;7108:46;7150:3;9549:6;9543:13;7108:46;:::i;:::-;7174:14;;;;33500;;;;9504:1;9497:9;9457:260;;;9461:14;;;22096:9;22090:4;22086:20;33924:4;22070:9;22066:18;22059:48;22121:108;10513:5;33095:12;10532:86;10611:6;10606:3;10532:86;:::i;:::-;10525:93;;33924:4;10689:5;32791:14;10701:21;;-1:-1;10728:260;10753:6;10750:1;10747:13;10728:260;;;10841:63;10900:3;10820:6;10814:13;10841:63;:::i;:::-;33500:14;;;;10834:70;-1:-1;9504:1;10768:9;10728:260;;;-1:-1;22113:116;;21836:403;-1:-1;;;;;;;21836:403::o;22246:210::-;35038:13;;35031:21;11083:34;;22367:2;22352:18;;22338:118::o;22463:222::-;11190:37;;;22590:2;22575:18;;22561:124::o;22692:310::-;;22839:2;;22860:17;22853:47;11663:5;33095:12;33887:6;22839:2;22828:9;22824:18;33875:19;-1:-1;35956:101;35970:6;35967:1;35964:13;35956:101;;;36037:11;;;;;36031:18;36018:11;;;33915:14;36018:11;36011:39;35985:10;;35956:101;;;36072:6;36069:1;36066:13;36063:2;;;-1:-1;33915:14;36128:6;22828:9;36119:16;;36112:27;36063:2;-1:-1;36612:7;36596:14;-1:-1;;36592:28;11821:39;;;;33915:14;11821:39;;22810:192;-1:-1;;;22810:192::o;23009:416::-;23209:2;23223:47;;;12097:2;23194:18;;;33875:19;12133:34;33915:14;;;12113:55;-1:-1;;;12188:12;;;12181:26;12226:12;;;23180:245::o;23432:416::-;23632:2;23646:47;;;12477:2;23617:18;;;33875:19;12513:34;33915:14;;;12493:55;-1:-1;;;12568:12;;;12561:39;12619:12;;;23603:245::o;23855:416::-;24055:2;24069:47;;;12870:2;24040:18;;;33875:19;-1:-1;;;33915:14;;;12886:43;12948:12;;;24026:245::o;24278:416::-;24478:2;24492:47;;;13199:2;24463:18;;;33875:19;-1:-1;;;33915:14;;;13215:38;13272:12;;;24449:245::o;24701:416::-;24901:2;24915:47;;;13523:2;24886:18;;;33875:19;13559:29;33915:14;;;13539:50;13608:12;;;24872:245::o;25124:416::-;25324:2;25338:47;;;13859:2;25309:18;;;33875:19;-1:-1;;;33915:14;;;13875:37;13931:12;;;25295:245::o;25547:416::-;25747:2;25761:47;;;14182:2;25732:18;;;33875:19;14218:34;33915:14;;;14198:55;-1:-1;;;14273:12;;;14266:40;14325:12;;;25718:245::o;25970:416::-;26170:2;26184:47;;;14576:2;26155:18;;;33875:19;-1:-1;;;33915:14;;;14592:39;14650:12;;;26141:245::o;26393:416::-;26593:2;26607:47;;;14901:2;26578:18;;;33875:19;-1:-1;;;33915:14;;;14917:45;14981:12;;;26564:245::o;26816:416::-;27016:2;27030:47;;;15232:2;27001:18;;;33875:19;15268:34;33915:14;;;15248:55;-1:-1;;;15323:12;;;15316:38;15373:12;;;26987:245::o;27239:416::-;27439:2;27453:47;;;15624:2;27424:18;;;33875:19;-1:-1;;;33915:14;;;15640:38;15697:12;;;27410:245::o;27662:416::-;27862:2;27876:47;;;15948:2;27847:18;;;33875:19;-1:-1;;;33915:14;;;15964:36;16019:12;;;27833:245::o;28085:416::-;28285:2;28299:47;;;16270:2;28270:18;;;33875:19;16306:25;33915:14;;;16286:46;16351:12;;;28256:245::o;28508:416::-;28708:2;28722:47;;;16602:2;28693:18;;;33875:19;-1:-1;;;33915:14;;;16618:38;16675:12;;;28679:245::o;28931:416::-;29131:2;29145:47;;;16926:2;29116:18;;;33875:19;-1:-1;;;33915:14;;;16942:35;16996:12;;;29102:245::o;29354:416::-;29554:2;29568:47;;;17247:2;29539:18;;;33875:19;-1:-1;;;33915:14;;;17263:36;17318:12;;;29525:245::o;29777:416::-;29977:2;29991:47;;;17569:2;29962:18;;;33875:19;-1:-1;;;33915:14;;;17585:38;17642:12;;;29948:245::o;30200:416::-;30400:2;30414:47;;;17893:2;30385:18;;;33875:19;17929:34;33915:14;;;17909:55;-1:-1;;;17984:12;;;17977:39;18035:12;;;30371:245::o;30623:327::-;18339:23;;11190:37;;18517:4;18506:16;;;18500:23;18577:14;;;11190:37;18676:4;18665:16;;;18659:23;18736:14;;;11190:37;18837:4;18826:16;;;18820:23;18897:14;;;11190:37;;;;30802:3;30787:19;;30773:177::o;31526:444::-;11190:37;;;31873:2;31858:18;;11190:37;;;;31956:2;31941:18;;11190:37;31709:2;31694:18;;31680:290::o;31977:256::-;32039:2;32033:9;32065:17;;;32140:18;32125:34;;32161:22;;;32122:62;32119:2;;;32197:1;;32187:12;32119:2;32039;32206:22;32017:216;;-1:-1;32017:216::o;32240:304::-;;32399:18;32391:6;32388:30;32385:2;;;-1:-1;;32421:12;32385:2;-1:-1;32466:4;32454:17;;;32519:15;;32322:222::o",
	"language": "Solidity",
	"natspec": {
		"events": {
			"InsufficientFundsForRoot(bytes32)": {
				"notice": "Emit when insufficient funds to handle incoming root totals"
			}
		},
		"kind": "dev",
		"methods": {
			"approveRoot(bytes32,bytes32,uint256)": {
				"notice": "Approve the current pending root and content hash"
			},
			"claim(address[],uint256[],uint256,uint256,bytes32[])": {
				"notice": "Claim accumulated rewards for a set of tokens at a given cycle number"
			},
			"getRoleAdmin(bytes32)": {
				"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
			},
			"getRoleMember(bytes32,uint256)": {
				"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
			},
			"getRoleMemberCount(bytes32)": {
				"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
			},
			"grantRole(bytes32,address)": {
				"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
			},
			"hasRole(bytes32,address)": {
				"details": "Returns `true` if `account` has been granted `role`."
			},
			"pause()": {
				"notice": "Pause publishing of new roots"
			},
			"paused()": {
				"details": "Returns true if the contract is paused, and false otherwise."
			},
			"proposeRoot(bytes32,bytes32,uint256)": {
				"notice": "Propose a new root and content hash, which will be stored as pending until approved"
			},
			"renounceRole(bytes32,address)": {
				"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
			},
			"revokeRole(bytes32,address)": {
				"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
			},
			"unpause()": {
				"notice": "Unpause publishing of new roots"
			}
		},
		"version": 1
	},
	"offset": [
		588,
		6256
	],
	"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9010D07C GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xB20CD555 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xD9AB2C5C EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xEF5D9AE8 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xF6162B01 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0xFE0317EF EQ PUSH2 0x3E7 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xB20CD555 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xBAB2F552 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x393 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x97C9C12F GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x97C9C12F EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xA155285F EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xA2FCFD68 EQ PUSH2 0x34F JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x9010D07C EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x9637F475 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x96F7CD57 EQ PUSH2 0x32F JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x2F37A774 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x66739D3B GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x66739D3B EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x8270D87B EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x8CBC762E EQ PUSH2 0x2EC JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x2F37A774 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2C1 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x24EA54F4 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x27E JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xC9CBF0E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xD4202CE EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x116037CC EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x1FE065AD EQ PUSH2 0x253 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1D38 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x176D JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x213 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x535 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x559 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x1733 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH2 0x299 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x191D JUMP JUMPDEST PUSH2 0x251 PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1733 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x615 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x176D JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x213 PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x213 PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x307 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x1798 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x1733 JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x213 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x213 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x362 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP3 SWAP2 SWAP1 PUSH2 0x188F JUMP JUMPDEST PUSH2 0x231 PUSH2 0x80D JUMP JUMPDEST PUSH2 0x213 PUSH2 0x843 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x155C JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST PUSH2 0x251 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1733 JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x98E JUMP JUMPDEST PUSH2 0x213 PUSH2 0x3CF CALLDATASIZE PUSH1 0x4 PUSH2 0x150D JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x213 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0xA1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x414 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9D SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9E SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9F SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA0 SLOAD DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9D SLOAD DUP4 EQ PUSH2 0x46C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9E SLOAD DUP3 EQ PUSH2 0x48D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1B45 JUMP JUMPDEST PUSH1 0x9C SLOAD DUP2 EQ PUSH2 0x4AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH2 0x4BC SWAP1 PUSH1 0x1 PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x97 DUP2 SWAP1 SSTORE PUSH1 0x98 DUP5 SWAP1 SSTORE PUSH1 0x99 DUP4 SWAP1 SSTORE TIMESTAMP PUSH1 0x9A DUP2 SWAP1 SSTORE NUMBER PUSH1 0x9B DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP6 SWAP4 DUP8 SWAP4 SWAP1 SWAP3 PUSH32 0x3934C24F0815369800391139AD44A2B4AC75E07CBBF74BDAE8C3D9AB0CACA15 SWAP3 PUSH2 0x50D SWAP3 SWAP2 SWAP1 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x55435DD261A4B9B3364963F7738A7A662AD9C84396D64BE3365284BB7F0A5041 DUP2 JUMP JUMPDEST PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x57D SWAP1 PUSH2 0x322 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST PUSH2 0x5A3 DUP3 DUP3 PUSH2 0xDF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x5B8 SWAP1 PUSH1 0x1 PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x9C SLOAD EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5C9 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x5A3 DUP3 DUP3 PUSH2 0xE5C JUMP JUMPDEST PUSH2 0x60B PUSH2 0xEC5 JUMP JUMPDEST PUSH2 0x613 PUSH2 0xF0B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x641 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH2 0x649 PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH2 0x657 SWAP1 PUSH1 0x1 PUSH2 0xDCA JUMP JUMPDEST DUP2 EQ PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH1 0x9C DUP2 SWAP1 SSTORE PUSH1 0x9D DUP4 SWAP1 SSTORE PUSH1 0x9E DUP3 SWAP1 SSTORE TIMESTAMP PUSH1 0x9F DUP2 SWAP1 SSTORE NUMBER PUSH1 0xA0 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP5 SWAP3 DUP7 SWAP3 DUP6 SWAP3 PUSH32 0xDB07D3ACE4EB8CB6D13437EEC22AEE8FCEB4200C6B31945A3FCD75758D9BD34B SWAP3 PUSH2 0x50D SWAP3 SWAP1 SWAP2 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x9B SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6D4 PUSH2 0xEC5 JUMP JUMPDEST PUSH2 0x613 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x9F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6FA SWAP1 DUP4 PUSH2 0x1015 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6FA SWAP1 DUP4 PUSH2 0x1021 JUMP JUMPDEST PUSH1 0x9D SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9A SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x77F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x7FF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP7 MLOAD SWAP1 SWAP2 SWAP1 DUP8 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x7B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7EC JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x785 JUMP JUMPDEST POP DUP4 SWAP3 POP SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x815 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x98 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x99 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9A SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA0 SLOAD DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x862 JUMPI POP PUSH2 0x862 PUSH2 0x1036 JUMP JUMPDEST DUP1 PUSH2 0x870 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x8BF PUSH2 0x103C JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x10CF JUMP JUMPDEST PUSH2 0x8D2 PUSH1 0x0 DUP6 PUSH2 0x599 JUMP JUMPDEST PUSH2 0x8FB PUSH31 0x9AB23A1010D07A0450A1FBEA1D84169B57D2C2273B54BFF0F20C3E90199B5D DUP5 PUSH2 0x599 JUMP JUMPDEST PUSH2 0x925 PUSH32 0x55435DD261A4B9B3364963F7738A7A662AD9C84396D64BE3365284BB7F0A5041 DUP4 PUSH2 0x599 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x937 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6FD SWAP1 PUSH2 0x115B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x972 SWAP1 PUSH2 0x322 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x5F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1ACB JUMP JUMPDEST PUSH31 0x9AB23A1010D07A0450A1FBEA1D84169B57D2C2273B54BFF0F20C3E90199B5D DUP2 JUMP JUMPDEST PUSH1 0xA2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x97 SLOAD DUP4 EQ PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x0 DUP5 CALLER DUP6 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA26 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xA7F DUP4 DUP4 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x98 SLOAD SWAP2 POP DUP5 SWAP1 POP PUSH2 0x1166 JUMP JUMPDEST PUSH2 0xA9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0xDB8 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xB1D SWAP1 DUP3 DUP14 DUP14 DUP7 DUP2 DUP2 LT PUSH2 0xAC6 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xADB SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP11 DUP11 DUP6 DUP2 DUP2 LT PUSH2 0xB08 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1203 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xB3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1C4A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xB96 SWAP2 DUP4 SWAP2 SWAP1 DUP15 DUP15 DUP8 DUP2 DUP2 LT PUSH2 0xB61 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB76 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH2 0xDCA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP14 DUP14 DUP7 DUP2 DUP2 LT PUSH2 0xBB2 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xBC7 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0xBED JUMPI INVALID JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 MUL SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP1 SWAP2 POP DUP14 DUP14 DUP7 DUP2 DUP2 LT PUSH2 0xC15 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC2A SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0xC68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1C13 JUMP JUMPDEST DUP11 DUP11 DUP4 DUP2 DUP2 LT PUSH2 0xC74 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC89 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER DUP12 DUP12 DUP7 DUP2 DUP2 LT PUSH2 0xCA4 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC8 SWAP3 SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x16FB JUMP JUMPDEST PUSH2 0xD36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1A43 JUMP JUMPDEST DUP6 DUP12 DUP12 DUP5 DUP2 DUP2 LT PUSH2 0xD43 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD58 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH32 0x6F9C9826BE5976F3F82A3490C52A83328CE2EC7BE9E62DCB39C26DA5148D7C76 DUP13 DUP13 DUP8 DUP2 DUP2 LT PUSH2 0xD8F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD TIMESTAMP NUMBER PUSH1 0x40 MLOAD PUSH2 0xDA7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 ADD PUSH2 0xA9E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9E SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1A6C JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xE0B SWAP1 DUP3 PUSH2 0x1245 JUMP JUMPDEST ISZERO PUSH2 0x5A3 JUMPI PUSH2 0xE18 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xE74 SWAP1 DUP3 PUSH2 0x125A JUMP JUMPDEST ISZERO PUSH2 0x5A3 JUMPI PUSH2 0xE81 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xEEF PUSH32 0x55435DD261A4B9B3364963F7738A7A662AD9C84396D64BE3365284BB7F0A5041 CALLER PUSH2 0x703 JUMP JUMPDEST PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1A15 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xF60 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6D SWAP2 SWAP1 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xFA0 PUSH31 0x9AB23A1010D07A0450A1FBEA1D84169B57D2C2273B54BFF0F20C3E90199B5D CALLER PUSH2 0x703 JUMP JUMPDEST PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF60 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA DUP4 DUP4 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x12B4 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1055 JUMPI POP PUSH2 0x1055 PUSH2 0x1036 JUMP JUMPDEST DUP1 PUSH2 0x1063 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x107F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x10AA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x10B2 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x10BA PUSH2 0x12CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10CC JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x10E8 JUMPI POP PUSH2 0x10E8 PUSH2 0x1036 JUMP JUMPDEST DUP1 PUSH2 0x10F6 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1112 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x113D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 ISZERO PUSH2 0x10CC JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD DUP3 PUSH2 0x134D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x11F8 JUMPI PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1182 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x11C3 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11A6 SWAP3 SWAP2 SWAP1 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x11EF JUMP JUMPDEST DUP1 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11D6 SWAP3 SWAP2 SWAP1 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x116B JUMP JUMPDEST POP SWAP1 SWAP3 EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1351 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x137D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x13C7 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x1292 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1984 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12A1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x12E5 JUMPI POP PUSH2 0x12E5 PUSH2 0x1036 JUMP JUMPDEST DUP1 PUSH2 0x12F3 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x130F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x10BA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x10CC JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1375 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1389 DUP4 DUP4 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x13BF JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x6FD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1483 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x13FA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1417 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x1447 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14DC JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14F3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6FA DUP4 DUP4 PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x153A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1544 DUP5 DUP5 PUSH2 0x14B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1553 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x14B4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1570 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x157A DUP6 DUP6 PUSH2 0x14B4 JUMP JUMPDEST SWAP3 POP PUSH2 0x1589 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1598 DUP6 PUSH1 0x40 DUP7 ADD PUSH2 0x14B4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15B3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x15BD DUP5 DUP5 PUSH2 0x14B4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D9 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x15E9 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x15FC PUSH2 0x15F7 DUP3 PUSH2 0x1DA0 JUMP JUMPDEST PUSH2 0x1D79 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD DUP6 DUP5 MUL DUP6 ADD DUP7 ADD DUP11 LT ISZERO PUSH2 0x1618 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1642 JUMPI PUSH2 0x162E DUP11 DUP3 PUSH2 0x14B4 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x161C JUMP JUMPDEST POP DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x166D JUMPI DUP4 DUP5 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1684 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x1690 DUP13 DUP4 DUP14 ADD PUSH2 0x14CB JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16A8 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x16B4 DUP13 DUP4 DUP14 ADD PUSH2 0x14CB JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16DA JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x16E7 DUP12 DUP3 DUP13 ADD PUSH2 0x14CB JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x170C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6FA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x172C JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1745 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1762 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1781 JUMPI DUP3 DUP4 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17AA JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP3 MSTORE PUSH1 0x20 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP10 PUSH1 0x60 SHL AND DUP2 DUP5 ADD MSTORE DUP8 PUSH1 0x34 DUP5 ADD MSTORE PUSH1 0x54 DUP4 ADD DUP8 DUP4 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x1835 JUMPI DUP2 DUP5 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1824 DUP3 DUP6 PUSH2 0x14B4 JUMP JUMPDEST AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 POP PUSH1 0x1 ADD PUSH2 0x1807 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP6 GT ISZERO PUSH2 0x184A JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP1 DUP5 MUL SWAP1 DUP2 DUP7 DUP3 CALLDATACOPY ADD SWAP1 DUP2 MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x18CF JUMPI PUSH2 0x18BF DUP5 DUP4 MLOAD PUSH2 0x17C1 JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x18AC JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP1 DUP6 MLOAD PUSH2 0x18E6 DUP2 DUP5 PUSH2 0x1928 JUMP JUMPDEST SWAP2 POP DUP4 DUP8 ADD SWAP3 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1910 JUMPI PUSH2 0x1902 DUP4 DUP6 MLOAD PUSH2 0x17B9 JUMP JUMPDEST SWAP4 DUP6 ADD SWAP4 SWAP3 POP PUSH1 0x1 ADD PUSH2 0x18EF JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x195D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1941 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x196E JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x6473 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x818591B5A5B881D1BC819DC985B9D PUSH1 0x8A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x125B98DBDC9C9958DD081C9BDBDD PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x2061646D696E20746F207265766F6B65 PUSH1 0x80 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x92DCC6DEE4E4CAC6E840C6DEDCE8CADCE840D0C2E6D PUSH1 0x53 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x37B7363CA937B7BA2AB83230BA32B9 PUSH1 0x89 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x496E76616C6964206379636C65 PUSH1 0x98 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x436C61696D656420616D6F756E74206D69736D61746368000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x45786365737369766520636C61696D PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x37B7363CA3BAB0B93234B0B7 PUSH1 0xA1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B210383937B7B3 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x496E636F7272656374206379636C65 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1D98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DB6 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 PUSH22 0x57BECF618C992B252E27A8B433C066853124736EDE03 0xD8 DIV SGT 0xBA 0xFC 0xAE SGT 0x2A PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
	"pcMap": {
		"0": {
			"offset": [
				588,
				6256
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x80"
		},
		"2": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"4": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "MSTORE",
			"path": "0"
		},
		"5": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "CALLVALUE",
			"path": "0"
		},
		"6": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"7": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "ISZERO",
			"path": "0"
		},
		"8": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x10"
		},
		"11": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"12": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"14": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"15": {
			"dev": "Cannot send ether to nonpayable function",
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "REVERT",
			"path": "0"
		},
		"16": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"17": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "POP",
			"path": "0"
		},
		"18": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"20": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "CALLDATASIZE",
			"path": "0"
		},
		"21": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "LT",
			"path": "0"
		},
		"22": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1FB"
		},
		"25": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"26": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"28": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "CALLDATALOAD",
			"path": "0"
		},
		"29": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0xE0"
		},
		"31": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "SHR",
			"path": "0"
		},
		"32": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"33": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x9010D07C"
		},
		"38": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "GT",
			"path": "0"
		},
		"39": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x11A"
		},
		"42": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"43": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"44": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xB20CD555"
		},
		"49": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "GT",
			"path": "0"
		},
		"50": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xAD"
		},
		"53": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"54": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"55": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xD547741F"
		},
		"60": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "GT",
			"path": "0"
		},
		"61": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x7C"
		},
		"64": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"65": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"66": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xD547741F"
		},
		"71": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"72": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x3A6"
		},
		"75": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"76": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"77": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xD9AB2C5C"
		},
		"82": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"83": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x3B9"
		},
		"86": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"87": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"88": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xEF5D9AE8"
		},
		"93": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"94": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x3C1"
		},
		"97": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"98": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"99": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xF6162B01"
		},
		"104": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"105": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x3D4"
		},
		"108": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"109": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"110": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xFE0317EF"
		},
		"115": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"116": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x3E7"
		},
		"119": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"120": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1FB"
		},
		"123": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMP",
			"path": "0"
		},
		"124": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"125": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"126": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xB20CD555"
		},
		"131": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"132": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x370"
		},
		"135": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"136": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"137": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xBAB2F552"
		},
		"142": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"143": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x378"
		},
		"146": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"147": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"148": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xC0C53B8B"
		},
		"153": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"154": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x380"
		},
		"157": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"158": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"159": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xCA15C873"
		},
		"164": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"165": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x393"
		},
		"168": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"169": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1FB"
		},
		"172": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMP",
			"path": "0"
		},
		"173": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"174": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"175": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x97C9C12F"
		},
		"180": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "GT",
			"path": "0"
		},
		"181": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xE9"
		},
		"184": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"185": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"186": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x97C9C12F"
		},
		"191": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"192": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x337"
		},
		"195": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"196": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"197": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xA155285F"
		},
		"202": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"203": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x33F"
		},
		"206": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"207": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"208": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xA217FDDF"
		},
		"213": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"214": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x347"
		},
		"217": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"218": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"219": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xA2FCFD68"
		},
		"224": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"225": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x34F"
		},
		"228": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"229": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1FB"
		},
		"232": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMP",
			"path": "0"
		},
		"233": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"234": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"235": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x9010D07C"
		},
		"240": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"241": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x2F4"
		},
		"244": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"245": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"246": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x91D14854"
		},
		"251": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"252": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x314"
		},
		"255": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"256": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"257": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x9637F475"
		},
		"262": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"263": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x327"
		},
		"266": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"267": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"268": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x96F7CD57"
		},
		"273": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"274": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x32F"
		},
		"277": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"278": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1FB"
		},
		"281": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMP",
			"path": "0"
		},
		"282": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"283": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"284": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x2F37A774"
		},
		"289": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "GT",
			"path": "0"
		},
		"290": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x192"
		},
		"293": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"294": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"295": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x66739D3B"
		},
		"300": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "GT",
			"path": "0"
		},
		"301": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x161"
		},
		"304": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"305": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"306": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x66739D3B"
		},
		"311": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"312": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x2C9"
		},
		"315": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"316": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"317": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x8270D87B"
		},
		"322": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"323": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x2DC"
		},
		"326": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"327": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"328": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x8456CB59"
		},
		"333": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"334": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x2E4"
		},
		"337": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"338": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"339": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x8CBC762E"
		},
		"344": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"345": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x2EC"
		},
		"348": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"349": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1FB"
		},
		"352": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMP",
			"path": "0"
		},
		"353": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"354": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"355": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x2F37A774"
		},
		"360": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"361": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x291"
		},
		"364": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"365": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"366": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x36568ABE"
		},
		"371": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"372": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x2A6"
		},
		"375": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"376": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"377": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x3F4BA83A"
		},
		"382": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"383": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x2B9"
		},
		"386": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"387": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"388": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x5C975ABB"
		},
		"393": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"394": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x2C1"
		},
		"397": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"398": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1FB"
		},
		"401": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMP",
			"path": "0"
		},
		"402": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"403": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"404": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x248A9CA3"
		},
		"409": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "GT",
			"path": "0"
		},
		"410": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1CE"
		},
		"413": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"414": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"415": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x248A9CA3"
		},
		"420": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"421": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x25B"
		},
		"424": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"425": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"426": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x24EA54F4"
		},
		"431": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"432": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x26E"
		},
		"435": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"436": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"437": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x2EB4A7AB"
		},
		"442": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"443": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x276"
		},
		"446": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"447": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"448": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x2F2FF15D"
		},
		"453": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"454": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x27E"
		},
		"457": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"458": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1FB"
		},
		"461": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMP",
			"path": "0"
		},
		"462": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"463": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"464": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xC9CBF0E"
		},
		"469": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"470": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x200"
		},
		"473": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"474": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"475": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xD4202CE"
		},
		"480": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"481": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x229"
		},
		"484": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"485": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"486": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x116037CC"
		},
		"491": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"492": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x23E"
		},
		"495": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"496": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"497": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0x1FE065AD"
		},
		"502": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "EQ",
			"path": "0"
		},
		"503": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x253"
		},
		"506": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPI",
			"path": "0"
		},
		"507": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"508": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"510": {
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "DUP1",
			"path": "0"
		},
		"511": {
			"first_revert": true,
			"fn": null,
			"offset": [
				588,
				6256
			],
			"op": "REVERT",
			"path": "0"
		},
		"512": {
			"offset": [
				1441,
				1503
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"513": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x213"
		},
		"516": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x20E"
		},
		"519": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "CALLDATASIZE",
			"path": "0"
		},
		"520": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"522": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1528"
		},
		"525": {
			"fn": null,
			"jump": "i",
			"offset": [
				1441,
				1503
			],
			"op": "JUMP",
			"path": "0"
		},
		"526": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"527": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x3EF"
		},
		"530": {
			"fn": null,
			"jump": "i",
			"offset": [
				1441,
				1503
			],
			"op": "JUMP",
			"path": "0"
		},
		"531": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"532": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"534": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "MLOAD",
			"path": "0"
		},
		"535": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x220"
		},
		"538": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "SWAP2",
			"path": "0"
		},
		"539": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "SWAP1",
			"path": "0"
		},
		"540": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1928"
		},
		"543": {
			"fn": null,
			"jump": "i",
			"offset": [
				1441,
				1503
			],
			"op": "JUMP",
			"path": "0"
		},
		"544": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"545": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"547": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "MLOAD",
			"path": "0"
		},
		"548": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "DUP1",
			"path": "0"
		},
		"549": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "SWAP2",
			"path": "0"
		},
		"550": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "SUB",
			"path": "0"
		},
		"551": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "SWAP1",
			"path": "0"
		},
		"552": {
			"fn": null,
			"offset": [
				1441,
				1503
			],
			"op": "RETURN",
			"path": "0"
		},
		"553": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2683,
				2882
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"554": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2683,
				2882
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x231"
		},
		"557": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2683,
				2882
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x40C"
		},
		"560": {
			"fn": "BadgerTree.getPendingMerkleData",
			"jump": "i",
			"offset": [
				2683,
				2882
			],
			"op": "JUMP",
			"path": "0"
		},
		"561": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2683,
				2882
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"562": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2683,
				2882
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"564": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2683,
				2882
			],
			"op": "MLOAD",
			"path": "0"
		},
		"565": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2683,
				2882
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x220"
		},
		"568": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2683,
				2882
			],
			"op": "SWAP2",
			"path": "0"
		},
		"569": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2683,
				2882
			],
			"op": "SWAP1",
			"path": "0"
		},
		"570": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2683,
				2882
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1D38"
		},
		"573": {
			"fn": "BadgerTree.getPendingMerkleData",
			"jump": "i",
			"offset": [
				2683,
				2882
			],
			"op": "JUMP",
			"path": "0"
		},
		"574": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5395,
				5992
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"575": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5395,
				5992
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x251"
		},
		"578": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5395,
				5992
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x24C"
		},
		"581": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5395,
				5992
			],
			"op": "CALLDATASIZE",
			"path": "0"
		},
		"582": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5395,
				5992
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"584": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5395,
				5992
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x176D"
		},
		"587": {
			"fn": "BadgerTree.approveRoot",
			"jump": "i",
			"offset": [
				5395,
				5992
			],
			"op": "JUMP",
			"path": "0"
		},
		"588": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5395,
				5992
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"589": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5395,
				5992
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x442"
		},
		"592": {
			"fn": "BadgerTree.approveRoot",
			"jump": "i",
			"offset": [
				5395,
				5992
			],
			"op": "JUMP",
			"path": "0"
		},
		"593": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5395,
				5992
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"594": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5395,
				5992
			],
			"op": "STOP",
			"path": "0"
		},
		"595": {
			"offset": [
				1117,
				1149
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"596": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				1117,
				1149
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x213"
		},
		"599": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				1117,
				1149
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x51A"
		},
		"602": {
			"fn": "BadgerTree.approveRoot",
			"jump": "i",
			"offset": [
				1117,
				1149
			],
			"op": "JUMP",
			"path": "0"
		},
		"603": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4642,
				4754
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"604": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4642,
				4754
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x213"
		},
		"607": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4642,
				4754
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x269"
		},
		"610": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4642,
				4754
			],
			"op": "CALLDATASIZE",
			"path": "2"
		},
		"611": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4642,
				4754
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x4"
		},
		"613": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4642,
				4754
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x171B"
		},
		"616": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"jump": "i",
			"offset": [
				4642,
				4754
			],
			"op": "JUMP",
			"path": "2"
		},
		"617": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4642,
				4754
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"618": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4642,
				4754
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x520"
		},
		"621": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"jump": "i",
			"offset": [
				4642,
				4754
			],
			"op": "JUMP",
			"path": "2"
		},
		"622": {
			"offset": [
				980,
				1046
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"623": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				980,
				1046
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x213"
		},
		"626": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				980,
				1046
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x535"
		},
		"629": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"jump": "i",
			"offset": [
				980,
				1046
			],
			"op": "JUMP",
			"path": "0"
		},
		"630": {
			"offset": [
				1086,
				1111
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"631": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				1086,
				1111
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x213"
		},
		"634": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				1086,
				1111
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x559"
		},
		"637": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"jump": "i",
			"offset": [
				1086,
				1111
			],
			"op": "JUMP",
			"path": "0"
		},
		"638": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5004,
				5227
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"639": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5004,
				5227
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x251"
		},
		"642": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5004,
				5227
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x28C"
		},
		"645": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5004,
				5227
			],
			"op": "CALLDATASIZE",
			"path": "2"
		},
		"646": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5004,
				5227
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x4"
		},
		"648": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5004,
				5227
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x1733"
		},
		"651": {
			"fn": "AccessControlUpgradeable.grantRole",
			"jump": "i",
			"offset": [
				5004,
				5227
			],
			"op": "JUMP",
			"path": "2"
		},
		"652": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5004,
				5227
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"653": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5004,
				5227
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x55F"
		},
		"656": {
			"fn": "AccessControlUpgradeable.grantRole",
			"jump": "i",
			"offset": [
				5004,
				5227
			],
			"op": "JUMP",
			"path": "2"
		},
		"657": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2888,
				3002
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"658": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2888,
				3002
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x299"
		},
		"661": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2888,
				3002
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x5A7"
		},
		"664": {
			"fn": "BadgerTree.hasPendingRoot",
			"jump": "i",
			"offset": [
				2888,
				3002
			],
			"op": "JUMP",
			"path": "0"
		},
		"665": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2888,
				3002
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"666": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2888,
				3002
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"668": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2888,
				3002
			],
			"op": "MLOAD",
			"path": "0"
		},
		"669": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2888,
				3002
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x220"
		},
		"672": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2888,
				3002
			],
			"op": "SWAP2",
			"path": "0"
		},
		"673": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2888,
				3002
			],
			"op": "SWAP1",
			"path": "0"
		},
		"674": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2888,
				3002
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x191D"
		},
		"677": {
			"fn": "BadgerTree.hasPendingRoot",
			"jump": "i",
			"offset": [
				2888,
				3002
			],
			"op": "JUMP",
			"path": "0"
		},
		"678": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6178,
				6383
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"679": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6178,
				6383
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x251"
		},
		"682": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6178,
				6383
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x2B4"
		},
		"685": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6178,
				6383
			],
			"op": "CALLDATASIZE",
			"path": "2"
		},
		"686": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6178,
				6383
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x4"
		},
		"688": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6178,
				6383
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x1733"
		},
		"691": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"jump": "i",
			"offset": [
				6178,
				6383
			],
			"op": "JUMP",
			"path": "2"
		},
		"692": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6178,
				6383
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"693": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6178,
				6383
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x5C1"
		},
		"696": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"jump": "i",
			"offset": [
				6178,
				6383
			],
			"op": "JUMP",
			"path": "2"
		},
		"697": {
			"fn": "BadgerTree.unpause",
			"offset": [
				6174,
				6254
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"698": {
			"fn": "BadgerTree.unpause",
			"offset": [
				6174,
				6254
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x251"
		},
		"701": {
			"fn": "BadgerTree.unpause",
			"offset": [
				6174,
				6254
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x603"
		},
		"704": {
			"fn": "BadgerTree.unpause",
			"jump": "i",
			"offset": [
				6174,
				6254
			],
			"op": "JUMP",
			"path": "0"
		},
		"705": {
			"fn": "PausableUpgradeable.paused",
			"offset": [
				1293,
				1369
			],
			"op": "JUMPDEST",
			"path": "9"
		},
		"706": {
			"fn": "PausableUpgradeable.paused",
			"offset": [
				1293,
				1369
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0x299"
		},
		"709": {
			"fn": "PausableUpgradeable.paused",
			"offset": [
				1293,
				1369
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0x615"
		},
		"712": {
			"fn": "PausableUpgradeable.paused",
			"jump": "i",
			"offset": [
				1293,
				1369
			],
			"op": "JUMP",
			"path": "9"
		},
		"713": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4762,
				5282
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"714": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4762,
				5282
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x251"
		},
		"717": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4762,
				5282
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x2D7"
		},
		"720": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4762,
				5282
			],
			"op": "CALLDATASIZE",
			"path": "0"
		},
		"721": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4762,
				5282
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"723": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4762,
				5282
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x176D"
		},
		"726": {
			"fn": "BadgerTree.proposeRoot",
			"jump": "i",
			"offset": [
				4762,
				5282
			],
			"op": "JUMP",
			"path": "0"
		},
		"727": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4762,
				5282
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"728": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4762,
				5282
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x61E"
		},
		"731": {
			"fn": "BadgerTree.proposeRoot",
			"jump": "i",
			"offset": [
				4762,
				5282
			],
			"op": "JUMP",
			"path": "0"
		},
		"732": {
			"offset": [
				1196,
				1233
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"733": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1196,
				1233
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x213"
		},
		"736": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1196,
				1233
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x6C6"
		},
		"739": {
			"fn": "BadgerTree.proposeRoot",
			"jump": "i",
			"offset": [
				1196,
				1233
			],
			"op": "JUMP",
			"path": "0"
		},
		"740": {
			"fn": "BadgerTree.pause",
			"offset": [
				6044,
				6120
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"741": {
			"fn": "BadgerTree.pause",
			"offset": [
				6044,
				6120
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x251"
		},
		"744": {
			"fn": "BadgerTree.pause",
			"offset": [
				6044,
				6120
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x6CC"
		},
		"747": {
			"fn": "BadgerTree.pause",
			"jump": "i",
			"offset": [
				6044,
				6120
			],
			"op": "JUMP",
			"path": "0"
		},
		"748": {
			"offset": [
				1356,
				1391
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"749": {
			"fn": "BadgerTree.pause",
			"offset": [
				1356,
				1391
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x213"
		},
		"752": {
			"fn": "BadgerTree.pause",
			"offset": [
				1356,
				1391
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x6DC"
		},
		"755": {
			"fn": "BadgerTree.pause",
			"jump": "i",
			"offset": [
				1356,
				1391
			],
			"op": "JUMP",
			"path": "0"
		},
		"756": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"757": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x307"
		},
		"760": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x302"
		},
		"763": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "CALLDATASIZE",
			"path": "2"
		},
		"764": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x4"
		},
		"766": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x1798"
		},
		"769": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"jump": "i",
			"offset": [
				4325,
				4461
			],
			"op": "JUMP",
			"path": "2"
		},
		"770": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"771": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x6E2"
		},
		"774": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"jump": "i",
			"offset": [
				4325,
				4461
			],
			"op": "JUMP",
			"path": "2"
		},
		"775": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"776": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"778": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "MLOAD",
			"path": "2"
		},
		"779": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x220"
		},
		"782": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "SWAP2",
			"path": "2"
		},
		"783": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "SWAP1",
			"path": "2"
		},
		"784": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x1862"
		},
		"787": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"jump": "i",
			"offset": [
				4325,
				4461
			],
			"op": "JUMP",
			"path": "2"
		},
		"788": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3310,
				3447
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"789": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3310,
				3447
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x299"
		},
		"792": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3310,
				3447
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x322"
		},
		"795": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3310,
				3447
			],
			"op": "CALLDATASIZE",
			"path": "2"
		},
		"796": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3310,
				3447
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x4"
		},
		"798": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3310,
				3447
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x1733"
		},
		"801": {
			"fn": "AccessControlUpgradeable.hasRole",
			"jump": "i",
			"offset": [
				3310,
				3447
			],
			"op": "JUMP",
			"path": "2"
		},
		"802": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3310,
				3447
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"803": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3310,
				3447
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x703"
		},
		"806": {
			"fn": "AccessControlUpgradeable.hasRole",
			"jump": "i",
			"offset": [
				3310,
				3447
			],
			"op": "JUMP",
			"path": "2"
		},
		"807": {
			"offset": [
				1273,
				1305
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"808": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1273,
				1305
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x213"
		},
		"811": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1273,
				1305
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x71B"
		},
		"814": {
			"fn": "AccessControlUpgradeable.hasRole",
			"jump": "i",
			"offset": [
				1273,
				1305
			],
			"op": "JUMP",
			"path": "0"
		},
		"815": {
			"offset": [
				1155,
				1190
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"816": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1155,
				1190
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x213"
		},
		"819": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1155,
				1190
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x721"
		},
		"822": {
			"fn": "AccessControlUpgradeable.hasRole",
			"jump": "i",
			"offset": [
				1155,
				1190
			],
			"op": "JUMP",
			"path": "0"
		},
		"823": {
			"offset": [
				1397,
				1434
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"824": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1397,
				1434
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x213"
		},
		"827": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1397,
				1434
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x727"
		},
		"830": {
			"fn": "AccessControlUpgradeable.hasRole",
			"jump": "i",
			"offset": [
				1397,
				1434
			],
			"op": "JUMP",
			"path": "0"
		},
		"831": {
			"offset": [
				1240,
				1267
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"832": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1240,
				1267
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x213"
		},
		"835": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1240,
				1267
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x72D"
		},
		"838": {
			"fn": "AccessControlUpgradeable.hasRole",
			"jump": "i",
			"offset": [
				1240,
				1267
			],
			"op": "JUMP",
			"path": "0"
		},
		"839": {
			"offset": [
				2087,
				2136
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"840": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				2087,
				2136
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x213"
		},
		"843": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				2087,
				2136
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x733"
		},
		"846": {
			"fn": "AccessControlUpgradeable.hasRole",
			"jump": "i",
			"offset": [
				2087,
				2136
			],
			"op": "JUMP",
			"path": "2"
		},
		"847": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"848": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x362"
		},
		"851": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x35D"
		},
		"854": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "CALLDATASIZE",
			"path": "0"
		},
		"855": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"857": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x15A1"
		},
		"860": {
			"fn": "BadgerTree.getClaimedFor",
			"jump": "i",
			"offset": [
				3008,
				3359
			],
			"op": "JUMP",
			"path": "0"
		},
		"861": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"862": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x738"
		},
		"865": {
			"fn": "BadgerTree.getClaimedFor",
			"jump": "i",
			"offset": [
				3008,
				3359
			],
			"op": "JUMP",
			"path": "0"
		},
		"866": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"867": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"869": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "MLOAD",
			"path": "0"
		},
		"870": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x220"
		},
		"873": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "SWAP3",
			"path": "0"
		},
		"874": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "SWAP2",
			"path": "0"
		},
		"875": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "SWAP1",
			"path": "0"
		},
		"876": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x188F"
		},
		"879": {
			"fn": "BadgerTree.getClaimedFor",
			"jump": "i",
			"offset": [
				3008,
				3359
			],
			"op": "JUMP",
			"path": "0"
		},
		"880": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2492,
				2677
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"881": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2492,
				2677
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x231"
		},
		"884": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2492,
				2677
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x80D"
		},
		"887": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"jump": "i",
			"offset": [
				2492,
				2677
			],
			"op": "JUMP",
			"path": "0"
		},
		"888": {
			"offset": [
				1053,
				1080
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"889": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				1053,
				1080
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x213"
		},
		"892": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				1053,
				1080
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x843"
		},
		"895": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"jump": "i",
			"offset": [
				1053,
				1080
			],
			"op": "JUMP",
			"path": "0"
		},
		"896": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1563,
				1970
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"897": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1563,
				1970
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x251"
		},
		"900": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1563,
				1970
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x38E"
		},
		"903": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1563,
				1970
			],
			"op": "CALLDATASIZE",
			"path": "0"
		},
		"904": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1563,
				1970
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"906": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1563,
				1970
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x155C"
		},
		"909": {
			"fn": "BadgerTree.initialize",
			"jump": "i",
			"offset": [
				1563,
				1970
			],
			"op": "JUMP",
			"path": "0"
		},
		"910": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1563,
				1970
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"911": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1563,
				1970
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x849"
		},
		"914": {
			"fn": "BadgerTree.initialize",
			"jump": "i",
			"offset": [
				1563,
				1970
			],
			"op": "JUMP",
			"path": "0"
		},
		"915": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3615,
				3740
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"916": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3615,
				3740
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x213"
		},
		"919": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3615,
				3740
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x3A1"
		},
		"922": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3615,
				3740
			],
			"op": "CALLDATASIZE",
			"path": "2"
		},
		"923": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3615,
				3740
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x4"
		},
		"925": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3615,
				3740
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x171B"
		},
		"928": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"jump": "i",
			"offset": [
				3615,
				3740
			],
			"op": "JUMP",
			"path": "2"
		},
		"929": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3615,
				3740
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"930": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3615,
				3740
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x93D"
		},
		"933": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"jump": "i",
			"offset": [
				3615,
				3740
			],
			"op": "JUMP",
			"path": "2"
		},
		"934": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5461,
				5687
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"935": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5461,
				5687
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x251"
		},
		"938": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5461,
				5687
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x3B4"
		},
		"941": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5461,
				5687
			],
			"op": "CALLDATASIZE",
			"path": "2"
		},
		"942": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5461,
				5687
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x4"
		},
		"944": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5461,
				5687
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x1733"
		},
		"947": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"jump": "i",
			"offset": [
				5461,
				5687
			],
			"op": "JUMP",
			"path": "2"
		},
		"948": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5461,
				5687
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"949": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5461,
				5687
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x954"
		},
		"952": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"jump": "i",
			"offset": [
				5461,
				5687
			],
			"op": "JUMP",
			"path": "2"
		},
		"953": {
			"offset": [
				900,
				974
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"954": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				900,
				974
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x213"
		},
		"957": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				900,
				974
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x98E"
		},
		"960": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"jump": "i",
			"offset": [
				900,
				974
			],
			"op": "JUMP",
			"path": "0"
		},
		"961": {
			"offset": [
				1509,
				1556
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"962": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x213"
		},
		"965": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x3CF"
		},
		"968": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "CALLDATASIZE",
			"path": "0"
		},
		"969": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"971": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x150D"
		},
		"974": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"jump": "i",
			"offset": [
				1509,
				1556
			],
			"op": "JUMP",
			"path": "0"
		},
		"975": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"976": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x9B1"
		},
		"979": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"jump": "i",
			"offset": [
				1509,
				1556
			],
			"op": "JUMP",
			"path": "0"
		},
		"980": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"981": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x251"
		},
		"984": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x3E2"
		},
		"987": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "CALLDATASIZE",
			"path": "0"
		},
		"988": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"990": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1652"
		},
		"993": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				3451,
				4612
			],
			"op": "JUMP",
			"path": "0"
		},
		"994": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"995": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x9C3"
		},
		"998": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				3451,
				4612
			],
			"op": "JUMP",
			"path": "0"
		},
		"999": {
			"offset": [
				1311,
				1350
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1000": {
			"fn": "BadgerTree.claim",
			"offset": [
				1311,
				1350
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x213"
		},
		"1003": {
			"fn": "BadgerTree.claim",
			"offset": [
				1311,
				1350
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xDC4"
		},
		"1006": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				1311,
				1350
			],
			"op": "JUMP",
			"path": "0"
		},
		"1007": {
			"offset": [
				1441,
				1503
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1008": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0xA1"
		},
		"1010": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"1012": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1013": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "DUP2",
			"path": "0"
		},
		"1014": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1015": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"1017": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "SWAP3",
			"path": "0"
		},
		"1018": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "DUP4",
			"path": "0"
		},
		"1019": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1020": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"1022": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "DUP1",
			"path": "0"
		},
		"1023": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "DUP5",
			"path": "0"
		},
		"1024": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "KECCAK256",
			"path": "0"
		},
		"1025": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1026": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "SWAP2",
			"path": "0"
		},
		"1027": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1028": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1029": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "DUP3",
			"path": "0"
		},
		"1030": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1031": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1032": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "KECCAK256",
			"path": "0"
		},
		"1033": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1034": {
			"fn": "BadgerTree.claim",
			"offset": [
				1441,
				1503
			],
			"op": "DUP2",
			"path": "0"
		},
		"1035": {
			"fn": "BadgerTree.claim",
			"jump": "o",
			"offset": [
				1441,
				1503
			],
			"op": "JUMP",
			"path": "0"
		},
		"1036": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2683,
				2882
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1037": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2738,
				2755
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x414"
		},
		"1040": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2738,
				2755
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x148D"
		},
		"1043": {
			"fn": "BadgerTree.getPendingMerkleData",
			"jump": "i",
			"offset": [
				2738,
				2755
			],
			"op": "JUMP",
			"path": "0"
		},
		"1044": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2738,
				2755
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1045": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 0,
			"value": "0x40"
		},
		"1047": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "MLOAD",
			"path": "0"
		},
		"1048": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "DUP1",
			"path": "0"
		},
		"1049": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x80"
		},
		"1051": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "ADD",
			"path": "0"
		},
		"1052": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"1054": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1055": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "DUP1",
			"path": "0"
		},
		"1056": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2785,
				2802
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x9D"
		},
		"1058": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2785,
				2802
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1059": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "DUP2",
			"path": "0"
		},
		"1060": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1061": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"1063": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "ADD",
			"path": "0"
		},
		"1064": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2804,
				2828
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x9E"
		},
		"1066": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2804,
				2828
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1067": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "DUP2",
			"path": "0"
		},
		"1068": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1069": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"1071": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "ADD",
			"path": "0"
		},
		"1072": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2830,
				2850
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x9F"
		},
		"1074": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2830,
				2850
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1075": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "DUP2",
			"path": "0"
		},
		"1076": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1077": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"1079": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "ADD",
			"path": "0"
		},
		"1080": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2852,
				2874
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0xA0"
		},
		"1082": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2852,
				2874
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1083": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "DUP2",
			"path": "0"
		},
		"1084": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1085": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2774,
				2875
			],
			"op": "POP",
			"path": "0"
		},
		"1086": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2767,
				2875
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1087": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2767,
				2875
			],
			"op": "POP",
			"path": "0"
		},
		"1088": {
			"fn": "BadgerTree.getPendingMerkleData",
			"offset": [
				2683,
				2882
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1089": {
			"fn": "BadgerTree.getPendingMerkleData",
			"jump": "o",
			"offset": [
				2683,
				2882
			],
			"op": "JUMP",
			"path": "0"
		},
		"1090": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5395,
				5992
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1091": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5531,
				5548
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 1,
			"value": "0x9D"
		},
		"1093": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5531,
				5548
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1094": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5523,
				5527
			],
			"op": "DUP4",
			"path": "0"
		},
		"1095": {
			"branch": 89,
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5523,
				5548
			],
			"op": "EQ",
			"path": "0"
		},
		"1096": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x46C"
		},
		"1099": {
			"branch": 89,
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "JUMPI",
			"path": "0"
		},
		"1100": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"1102": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "MLOAD",
			"path": "0"
		},
		"1103": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"1107": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"1109": {
			"op": "SHL"
		},
		"1110": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "DUP2",
			"path": "0"
		},
		"1111": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1112": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"1114": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "ADD",
			"path": "0"
		},
		"1115": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x463"
		},
		"1118": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1119": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1AA3"
		},
		"1122": {
			"fn": "BadgerTree.approveRoot",
			"jump": "i",
			"offset": [
				5515,
				5567
			],
			"op": "JUMP",
			"path": "0"
		},
		"1123": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1124": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"1126": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "MLOAD",
			"path": "0"
		},
		"1127": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "DUP1",
			"path": "0"
		},
		"1128": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "SWAP2",
			"path": "0"
		},
		"1129": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "SUB",
			"path": "0"
		},
		"1130": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1131": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "REVERT",
			"path": "0"
		},
		"1132": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5515,
				5567
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1133": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5600,
				5624
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 2,
			"value": "0x9E"
		},
		"1135": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5600,
				5624
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1136": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5585,
				5596
			],
			"op": "DUP3",
			"path": "0"
		},
		"1137": {
			"branch": 90,
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5585,
				5624
			],
			"op": "EQ",
			"path": "0"
		},
		"1138": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5577,
				5651
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x48D"
		},
		"1141": {
			"branch": 90,
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5577,
				5651
			],
			"op": "JUMPI",
			"path": "0"
		},
		"1142": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5577,
				5651
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"1144": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5577,
				5651
			],
			"op": "MLOAD",
			"path": "0"
		},
		"1145": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"1149": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"1151": {
			"op": "SHL"
		},
		"1152": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5577,
				5651
			],
			"op": "DUP2",
			"path": "0"
		},
		"1153": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5577,
				5651
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1154": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5577,
				5651
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"1156": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5577,
				5651
			],
			"op": "ADD",
			"path": "0"
		},
		"1157": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5577,
				5651
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x463"
		},
		"1160": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5577,
				5651
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1161": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5577,
				5651
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1B45"
		},
		"1164": {
			"fn": "BadgerTree.approveRoot",
			"jump": "i",
			"offset": [
				5577,
				5651
			],
			"op": "JUMP",
			"path": "0"
		},
		"1165": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5577,
				5651
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1166": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5678,
				5690
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 3,
			"value": "0x9C"
		},
		"1168": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5678,
				5690
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1169": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5669,
				5674
			],
			"op": "DUP2",
			"path": "0"
		},
		"1170": {
			"branch": 91,
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5669,
				5690
			],
			"op": "EQ",
			"path": "0"
		},
		"1171": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5661,
				5710
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x4AE"
		},
		"1174": {
			"branch": 91,
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5661,
				5710
			],
			"op": "JUMPI",
			"path": "0"
		},
		"1175": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5661,
				5710
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"1177": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5661,
				5710
			],
			"op": "MLOAD",
			"path": "0"
		},
		"1178": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"1182": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"1184": {
			"op": "SHL"
		},
		"1185": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5661,
				5710
			],
			"op": "DUP2",
			"path": "0"
		},
		"1186": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5661,
				5710
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1187": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5661,
				5710
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"1189": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5661,
				5710
			],
			"op": "ADD",
			"path": "0"
		},
		"1190": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5661,
				5710
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x463"
		},
		"1193": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5661,
				5710
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1194": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5661,
				5710
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1CC0"
		},
		"1197": {
			"fn": "BadgerTree.approveRoot",
			"jump": "i",
			"offset": [
				5661,
				5710
			],
			"op": "JUMP",
			"path": "0"
		},
		"1198": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5661,
				5710
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1199": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5736,
				5748
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 4,
			"value": "0x97"
		},
		"1201": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5736,
				5748
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1202": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5736,
				5755
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x4BC"
		},
		"1205": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5736,
				5755
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1206": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5753,
				5754
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x1"
		},
		"1208": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5736,
				5752
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xDCA"
		},
		"1211": {
			"fn": "BadgerTree.approveRoot",
			"jump": "i",
			"offset": [
				5736,
				5755
			],
			"op": "JUMP",
			"path": "0"
		},
		"1212": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5736,
				5755
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1213": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5721,
				5733
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x97"
		},
		"1215": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5721,
				5755
			],
			"op": "DUP2",
			"path": "0"
		},
		"1216": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5721,
				5755
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1217": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5721,
				5755
			],
			"op": "SSTORE",
			"path": "0"
		},
		"1218": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5765,
				5775
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 5,
			"value": "0x98"
		},
		"1220": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5765,
				5782
			],
			"op": "DUP5",
			"path": "0"
		},
		"1221": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5765,
				5782
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1222": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5765,
				5782
			],
			"op": "SSTORE",
			"path": "0"
		},
		"1223": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5792,
				5809
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 6,
			"value": "0x99"
		},
		"1225": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5792,
				5823
			],
			"op": "DUP4",
			"path": "0"
		},
		"1226": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5792,
				5823
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1227": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5792,
				5823
			],
			"op": "SSTORE",
			"path": "0"
		},
		"1228": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5856,
				5859
			],
			"op": "TIMESTAMP",
			"path": "0",
			"statement": 7
		},
		"1229": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5833,
				5853
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x9A"
		},
		"1231": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5833,
				5859
			],
			"op": "DUP2",
			"path": "0"
		},
		"1232": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5833,
				5859
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1233": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5833,
				5859
			],
			"op": "SSTORE",
			"path": "0"
		},
		"1234": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5894,
				5906
			],
			"op": "NUMBER",
			"path": "0",
			"statement": 8
		},
		"1235": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5869,
				5891
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x9B"
		},
		"1237": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5869,
				5906
			],
			"op": "DUP2",
			"path": "0"
		},
		"1238": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5869,
				5906
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1239": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5869,
				5906
			],
			"op": "SSTORE",
			"path": "0"
		},
		"1240": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5922,
				5985
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 9,
			"value": "0x40"
		},
		"1242": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5922,
				5985
			],
			"op": "MLOAD",
			"path": "0"
		},
		"1243": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5812,
				5823
			],
			"op": "DUP6",
			"path": "0"
		},
		"1244": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5812,
				5823
			],
			"op": "SWAP4",
			"path": "0"
		},
		"1245": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5778,
				5782
			],
			"op": "DUP8",
			"path": "0"
		},
		"1246": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5778,
				5782
			],
			"op": "SWAP4",
			"path": "0"
		},
		"1247": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5721,
				5755
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1248": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5721,
				5755
			],
			"op": "SWAP3",
			"path": "0"
		},
		"1249": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5922,
				5985
			],
			"op": "PUSH32",
			"path": "0",
			"value": "0x3934C24F0815369800391139AD44A2B4AC75E07CBBF74BDAE8C3D9AB0CACA15"
		},
		"1282": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5922,
				5985
			],
			"op": "SWAP3",
			"path": "0"
		},
		"1283": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5922,
				5985
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x50D"
		},
		"1286": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5922,
				5985
			],
			"op": "SWAP3",
			"path": "0"
		},
		"1287": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5856,
				5859
			],
			"op": "SWAP2",
			"path": "0"
		},
		"1288": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5894,
				5906
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1289": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5922,
				5985
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x17CE"
		},
		"1292": {
			"fn": "BadgerTree.approveRoot",
			"jump": "i",
			"offset": [
				5922,
				5985
			],
			"op": "JUMP",
			"path": "0"
		},
		"1293": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5922,
				5985
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1294": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5922,
				5985
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"1296": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5922,
				5985
			],
			"op": "MLOAD",
			"path": "0"
		},
		"1297": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5922,
				5985
			],
			"op": "DUP1",
			"path": "0"
		},
		"1298": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5922,
				5985
			],
			"op": "SWAP2",
			"path": "0"
		},
		"1299": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5922,
				5985
			],
			"op": "SUB",
			"path": "0"
		},
		"1300": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5922,
				5985
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1301": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5922,
				5985
			],
			"op": "LOG4",
			"path": "0"
		},
		"1302": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5395,
				5992
			],
			"op": "POP",
			"path": "0"
		},
		"1303": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5395,
				5992
			],
			"op": "POP",
			"path": "0"
		},
		"1304": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				5395,
				5992
			],
			"op": "POP",
			"path": "0"
		},
		"1305": {
			"fn": "BadgerTree.approveRoot",
			"jump": "o",
			"offset": [
				5395,
				5992
			],
			"op": "JUMP",
			"path": "0"
		},
		"1306": {
			"offset": [
				1117,
				1149
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1307": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				1117,
				1149
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x99"
		},
		"1309": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				1117,
				1149
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1310": {
			"fn": "BadgerTree.approveRoot",
			"offset": [
				1117,
				1149
			],
			"op": "DUP2",
			"path": "0"
		},
		"1311": {
			"fn": "BadgerTree.approveRoot",
			"jump": "o",
			"offset": [
				1117,
				1149
			],
			"op": "JUMP",
			"path": "0"
		},
		"1312": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4642,
				4754
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"1313": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4699,
				4706
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x0"
		},
		"1315": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4725,
				4737
			],
			"op": "SWAP1",
			"path": "2",
			"statement": 10
		},
		"1316": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4725,
				4737
			],
			"op": "DUP2",
			"path": "2"
		},
		"1317": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4725,
				4737
			],
			"op": "MSTORE",
			"path": "2"
		},
		"1318": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4725,
				4731
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x33"
		},
		"1320": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4725,
				4737
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x20"
		},
		"1322": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4725,
				4737
			],
			"op": "MSTORE",
			"path": "2"
		},
		"1323": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4725,
				4737
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"1325": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4725,
				4737
			],
			"op": "SWAP1",
			"path": "2"
		},
		"1326": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4725,
				4737
			],
			"op": "KECCAK256",
			"path": "2"
		},
		"1327": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4725,
				4747
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x2"
		},
		"1329": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4725,
				4747
			],
			"op": "ADD",
			"path": "2"
		},
		"1330": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4725,
				4747
			],
			"op": "SLOAD",
			"path": "2"
		},
		"1331": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				4725,
				4747
			],
			"op": "SWAP1",
			"path": "2"
		},
		"1332": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"jump": "o",
			"offset": [
				4642,
				4754
			],
			"op": "JUMP",
			"path": "2"
		},
		"1333": {
			"offset": [
				980,
				1046
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1334": {
			"offset": [
				1020,
				1046
			],
			"op": "PUSH32",
			"path": "0",
			"value": "0x55435DD261A4B9B3364963F7738A7A662AD9C84396D64BE3365284BB7F0A5041"
		},
		"1367": {
			"offset": [
				980,
				1046
			],
			"op": "DUP2",
			"path": "0"
		},
		"1368": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"jump": "o",
			"offset": [
				980,
				1046
			],
			"op": "JUMP",
			"path": "0"
		},
		"1369": {
			"offset": [
				1086,
				1111
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1370": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				1086,
				1111
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x98"
		},
		"1372": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				1086,
				1111
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1373": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"offset": [
				1086,
				1111
			],
			"op": "DUP2",
			"path": "0"
		},
		"1374": {
			"fn": "AccessControlUpgradeable.getRoleAdmin",
			"jump": "o",
			"offset": [
				1086,
				1111
			],
			"op": "JUMP",
			"path": "0"
		},
		"1375": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5004,
				5227
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"1376": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5095,
				5107
			],
			"op": "PUSH1",
			"path": "2",
			"statement": 11,
			"value": "0x0"
		},
		"1378": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5095,
				5107
			],
			"op": "DUP3",
			"path": "2"
		},
		"1379": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5095,
				5107
			],
			"op": "DUP2",
			"path": "2"
		},
		"1380": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5095,
				5107
			],
			"op": "MSTORE",
			"path": "2"
		},
		"1381": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5095,
				5101
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x33"
		},
		"1383": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5095,
				5107
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x20"
		},
		"1385": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5095,
				5107
			],
			"op": "MSTORE",
			"path": "2"
		},
		"1386": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5095,
				5107
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"1388": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5095,
				5107
			],
			"op": "SWAP1",
			"path": "2"
		},
		"1389": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5095,
				5107
			],
			"op": "KECCAK256",
			"path": "2"
		},
		"1390": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5095,
				5117
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x2"
		},
		"1392": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5095,
				5117
			],
			"op": "ADD",
			"path": "2"
		},
		"1393": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5095,
				5117
			],
			"op": "SLOAD",
			"path": "2"
		},
		"1394": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5087,
				5132
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x57D"
		},
		"1397": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5087,
				5132
			],
			"op": "SWAP1",
			"path": "2"
		},
		"1398": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5119,
				5131
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x322"
		},
		"1401": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5119,
				5129
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0xDEF"
		},
		"1404": {
			"fn": "AccessControlUpgradeable.grantRole",
			"jump": "i",
			"offset": [
				5119,
				5131
			],
			"op": "JUMP",
			"path": "2"
		},
		"1405": {
			"branch": 100,
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5087,
				5132
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"1406": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5079,
				5184
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x599"
		},
		"1409": {
			"branch": 100,
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5079,
				5184
			],
			"op": "JUMPI",
			"path": "2"
		},
		"1410": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5079,
				5184
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"1412": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5079,
				5184
			],
			"op": "MLOAD",
			"path": "2"
		},
		"1413": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"1417": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"1419": {
			"op": "SHL"
		},
		"1420": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5079,
				5184
			],
			"op": "DUP2",
			"path": "2"
		},
		"1421": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5079,
				5184
			],
			"op": "MSTORE",
			"path": "2"
		},
		"1422": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5079,
				5184
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x4"
		},
		"1424": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5079,
				5184
			],
			"op": "ADD",
			"path": "2"
		},
		"1425": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5079,
				5184
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x463"
		},
		"1428": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5079,
				5184
			],
			"op": "SWAP1",
			"path": "2"
		},
		"1429": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5079,
				5184
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x19C6"
		},
		"1432": {
			"fn": "AccessControlUpgradeable.grantRole",
			"jump": "i",
			"offset": [
				5079,
				5184
			],
			"op": "JUMP",
			"path": "2"
		},
		"1433": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5079,
				5184
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"1434": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5195,
				5220
			],
			"op": "PUSH2",
			"path": "2",
			"statement": 12,
			"value": "0x5A3"
		},
		"1437": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5206,
				5210
			],
			"op": "DUP3",
			"path": "2"
		},
		"1438": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5212,
				5219
			],
			"op": "DUP3",
			"path": "2"
		},
		"1439": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5195,
				5205
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0xDF3"
		},
		"1442": {
			"fn": "AccessControlUpgradeable.grantRole",
			"jump": "i",
			"offset": [
				5195,
				5220
			],
			"op": "JUMP",
			"path": "2"
		},
		"1443": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5195,
				5220
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"1444": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5004,
				5227
			],
			"op": "POP",
			"path": "2"
		},
		"1445": {
			"fn": "AccessControlUpgradeable.grantRole",
			"offset": [
				5004,
				5227
			],
			"op": "POP",
			"path": "2"
		},
		"1446": {
			"fn": "AccessControlUpgradeable.grantRole",
			"jump": "o",
			"offset": [
				5004,
				5227
			],
			"op": "JUMP",
			"path": "2"
		},
		"1447": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2888,
				3002
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1448": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2976,
				2988
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 13,
			"value": "0x97"
		},
		"1450": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2976,
				2988
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1451": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2937,
				2941
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"1453": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2937,
				2941
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1454": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2976,
				2995
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x5B8"
		},
		"1457": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2976,
				2995
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1458": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2993,
				2994
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x1"
		},
		"1460": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2976,
				2992
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xDCA"
		},
		"1463": {
			"fn": "BadgerTree.hasPendingRoot",
			"jump": "i",
			"offset": [
				2976,
				2995
			],
			"op": "JUMP",
			"path": "0"
		},
		"1464": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2976,
				2995
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1465": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2960,
				2972
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x9C"
		},
		"1467": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2960,
				2972
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1468": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2960,
				2995
			],
			"op": "EQ",
			"path": "0"
		},
		"1469": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2953,
				2995
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1470": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2953,
				2995
			],
			"op": "POP",
			"path": "0"
		},
		"1471": {
			"fn": "BadgerTree.hasPendingRoot",
			"offset": [
				2888,
				3002
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1472": {
			"fn": "BadgerTree.hasPendingRoot",
			"jump": "o",
			"offset": [
				2888,
				3002
			],
			"op": "JUMP",
			"path": "0"
		},
		"1473": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6178,
				6383
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"1474": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6275,
				6287
			],
			"op": "PUSH2",
			"path": "2",
			"statement": 14,
			"value": "0x5C9"
		},
		"1477": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6275,
				6285
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0xDEF"
		},
		"1480": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"jump": "i",
			"offset": [
				6275,
				6287
			],
			"op": "JUMP",
			"path": "2"
		},
		"1481": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6275,
				6287
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"1482": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"1484": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"1486": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"1488": {
			"op": "SHL"
		},
		"1489": {
			"op": "SUB"
		},
		"1490": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6264,
				6287
			],
			"op": "AND",
			"path": "2"
		},
		"1491": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6264,
				6271
			],
			"op": "DUP2",
			"path": "2"
		},
		"1492": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"1494": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"1496": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"1498": {
			"op": "SHL"
		},
		"1499": {
			"op": "SUB"
		},
		"1500": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6264,
				6287
			],
			"op": "AND",
			"path": "2"
		},
		"1501": {
			"branch": 101,
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6264,
				6287
			],
			"op": "EQ",
			"path": "2"
		},
		"1502": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6256,
				6339
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x5F9"
		},
		"1505": {
			"branch": 101,
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6256,
				6339
			],
			"op": "JUMPI",
			"path": "2"
		},
		"1506": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6256,
				6339
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"1508": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6256,
				6339
			],
			"op": "MLOAD",
			"path": "2"
		},
		"1509": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"1513": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"1515": {
			"op": "SHL"
		},
		"1516": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6256,
				6339
			],
			"op": "DUP2",
			"path": "2"
		},
		"1517": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6256,
				6339
			],
			"op": "MSTORE",
			"path": "2"
		},
		"1518": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6256,
				6339
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x4"
		},
		"1520": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6256,
				6339
			],
			"op": "ADD",
			"path": "2"
		},
		"1521": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6256,
				6339
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x463"
		},
		"1524": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6256,
				6339
			],
			"op": "SWAP1",
			"path": "2"
		},
		"1525": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6256,
				6339
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x1CE9"
		},
		"1528": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"jump": "i",
			"offset": [
				6256,
				6339
			],
			"op": "JUMP",
			"path": "2"
		},
		"1529": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6256,
				6339
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"1530": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6350,
				6376
			],
			"op": "PUSH2",
			"path": "2",
			"statement": 15,
			"value": "0x5A3"
		},
		"1533": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6362,
				6366
			],
			"op": "DUP3",
			"path": "2"
		},
		"1534": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6368,
				6375
			],
			"op": "DUP3",
			"path": "2"
		},
		"1535": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"offset": [
				6350,
				6361
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0xE5C"
		},
		"1538": {
			"fn": "AccessControlUpgradeable.renounceRole",
			"jump": "i",
			"offset": [
				6350,
				6376
			],
			"op": "JUMP",
			"path": "2"
		},
		"1539": {
			"fn": "BadgerTree.unpause",
			"offset": [
				6174,
				6254
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1540": {
			"fn": "BadgerTree.unpause",
			"offset": [
				6212,
				6227
			],
			"op": "PUSH2",
			"path": "0",
			"statement": 16,
			"value": "0x60B"
		},
		"1543": {
			"fn": "BadgerTree.unpause",
			"offset": [
				6212,
				6225
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xEC5"
		},
		"1546": {
			"fn": "BadgerTree.unpause",
			"jump": "i",
			"offset": [
				6212,
				6227
			],
			"op": "JUMP",
			"path": "0"
		},
		"1547": {
			"fn": "BadgerTree.unpause",
			"offset": [
				6212,
				6227
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1548": {
			"fn": "BadgerTree.unpause",
			"offset": [
				6237,
				6247
			],
			"op": "PUSH2",
			"path": "0",
			"statement": 17,
			"value": "0x613"
		},
		"1551": {
			"fn": "BadgerTree.unpause",
			"offset": [
				6237,
				6245
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xF0B"
		},
		"1554": {
			"fn": "BadgerTree.unpause",
			"jump": "i",
			"offset": [
				6237,
				6247
			],
			"op": "JUMP",
			"path": "0"
		},
		"1555": {
			"fn": "BadgerTree.unpause",
			"offset": [
				6237,
				6247
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1556": {
			"fn": "BadgerTree.unpause",
			"jump": "o",
			"offset": [
				6174,
				6254
			],
			"op": "JUMP",
			"path": "0"
		},
		"1557": {
			"fn": "PausableUpgradeable.paused",
			"offset": [
				1293,
				1369
			],
			"op": "JUMPDEST",
			"path": "9"
		},
		"1558": {
			"fn": "PausableUpgradeable.paused",
			"offset": [
				1355,
				1362
			],
			"op": "PUSH1",
			"path": "9",
			"statement": 18,
			"value": "0x65"
		},
		"1560": {
			"fn": "PausableUpgradeable.paused",
			"offset": [
				1355,
				1362
			],
			"op": "SLOAD",
			"path": "9"
		},
		"1561": {
			"fn": "PausableUpgradeable.paused",
			"offset": [
				1355,
				1362
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0xFF"
		},
		"1563": {
			"fn": "PausableUpgradeable.paused",
			"offset": [
				1355,
				1362
			],
			"op": "AND",
			"path": "9"
		},
		"1564": {
			"fn": "PausableUpgradeable.paused",
			"offset": [
				1293,
				1369
			],
			"op": "SWAP1",
			"path": "9"
		},
		"1565": {
			"fn": "PausableUpgradeable.paused",
			"jump": "o",
			"offset": [
				1293,
				1369
			],
			"op": "JUMP",
			"path": "9"
		},
		"1566": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4762,
				5282
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1567": {
			"offset": [
				1599,
				1606
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0x65"
		},
		"1569": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1599,
				1606
			],
			"op": "SLOAD",
			"path": "9"
		},
		"1570": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1599,
				1606
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0xFF"
		},
		"1572": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1599,
				1606
			],
			"op": "AND",
			"path": "9"
		},
		"1573": {
			"offset": [
				1598,
				1606
			],
			"op": "ISZERO",
			"path": "9"
		},
		"1574": {
			"offset": [
				1590,
				1627
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0x641"
		},
		"1577": {
			"offset": [
				1590,
				1627
			],
			"op": "JUMPI",
			"path": "9"
		},
		"1578": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1590,
				1627
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0x40"
		},
		"1580": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1590,
				1627
			],
			"op": "MLOAD",
			"path": "9"
		},
		"1581": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"1585": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"1587": {
			"op": "SHL"
		},
		"1588": {
			"offset": [
				1590,
				1627
			],
			"op": "DUP2",
			"path": "9"
		},
		"1589": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1590,
				1627
			],
			"op": "MSTORE",
			"path": "9"
		},
		"1590": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1590,
				1627
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0x4"
		},
		"1592": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1590,
				1627
			],
			"op": "ADD",
			"path": "9"
		},
		"1593": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1590,
				1627
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0x463"
		},
		"1596": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1590,
				1627
			],
			"op": "SWAP1",
			"path": "9"
		},
		"1597": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1590,
				1627
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0x1B1B"
		},
		"1600": {
			"fn": "BadgerTree.proposeRoot",
			"jump": "i",
			"offset": [
				1590,
				1627
			],
			"op": "JUMP",
			"path": "9"
		},
		"1601": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1590,
				1627
			],
			"op": "JUMPDEST",
			"path": "9"
		},
		"1602": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4896,
				4914
			],
			"op": "PUSH2",
			"path": "0",
			"statement": 19,
			"value": "0x649"
		},
		"1605": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4896,
				4912
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xF77"
		},
		"1608": {
			"fn": "BadgerTree.proposeRoot",
			"jump": "i",
			"offset": [
				4896,
				4914
			],
			"op": "JUMP",
			"path": "0"
		},
		"1609": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4896,
				4914
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1610": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4941,
				4953
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 20,
			"value": "0x97"
		},
		"1612": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4941,
				4953
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1613": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4941,
				4960
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x657"
		},
		"1616": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4941,
				4960
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1617": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4958,
				4959
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x1"
		},
		"1619": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4941,
				4957
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xDCA"
		},
		"1622": {
			"fn": "BadgerTree.proposeRoot",
			"jump": "i",
			"offset": [
				4941,
				4960
			],
			"op": "JUMP",
			"path": "0"
		},
		"1623": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4941,
				4960
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1624": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4932,
				4937
			],
			"op": "DUP2",
			"path": "0"
		},
		"1625": {
			"branch": 92,
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4932,
				4960
			],
			"op": "EQ",
			"path": "0"
		},
		"1626": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4924,
				4980
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x675"
		},
		"1629": {
			"branch": 92,
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4924,
				4980
			],
			"op": "JUMPI",
			"path": "0"
		},
		"1630": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4924,
				4980
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"1632": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4924,
				4980
			],
			"op": "MLOAD",
			"path": "0"
		},
		"1633": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"1637": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"1639": {
			"op": "SHL"
		},
		"1640": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4924,
				4980
			],
			"op": "DUP2",
			"path": "0"
		},
		"1641": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4924,
				4980
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1642": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4924,
				4980
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"1644": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4924,
				4980
			],
			"op": "ADD",
			"path": "0"
		},
		"1645": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4924,
				4980
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x463"
		},
		"1648": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4924,
				4980
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1649": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4924,
				4980
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1CC0"
		},
		"1652": {
			"fn": "BadgerTree.proposeRoot",
			"jump": "i",
			"offset": [
				4924,
				4980
			],
			"op": "JUMP",
			"path": "0"
		},
		"1653": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4924,
				4980
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1654": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4991,
				5003
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 21,
			"value": "0x9C"
		},
		"1656": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4991,
				5011
			],
			"op": "DUP2",
			"path": "0"
		},
		"1657": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4991,
				5011
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1658": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				4991,
				5011
			],
			"op": "SSTORE",
			"path": "0"
		},
		"1659": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5021,
				5038
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 22,
			"value": "0x9D"
		},
		"1661": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5021,
				5045
			],
			"op": "DUP4",
			"path": "0"
		},
		"1662": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5021,
				5045
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1663": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5021,
				5045
			],
			"op": "SSTORE",
			"path": "0"
		},
		"1664": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5055,
				5079
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 23,
			"value": "0x9E"
		},
		"1666": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5055,
				5093
			],
			"op": "DUP3",
			"path": "0"
		},
		"1667": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5055,
				5093
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1668": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5055,
				5093
			],
			"op": "SSTORE",
			"path": "0"
		},
		"1669": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5126,
				5129
			],
			"op": "TIMESTAMP",
			"path": "0",
			"statement": 24
		},
		"1670": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5103,
				5123
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x9F"
		},
		"1672": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5103,
				5129
			],
			"op": "DUP2",
			"path": "0"
		},
		"1673": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5103,
				5129
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1674": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5103,
				5129
			],
			"op": "SSTORE",
			"path": "0"
		},
		"1675": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5164,
				5176
			],
			"op": "NUMBER",
			"path": "0",
			"statement": 25
		},
		"1676": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5139,
				5161
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0xA0"
		},
		"1678": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5139,
				5176
			],
			"op": "DUP2",
			"path": "0"
		},
		"1679": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5139,
				5176
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1680": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5139,
				5176
			],
			"op": "SSTORE",
			"path": "0"
		},
		"1681": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5192,
				5275
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 26,
			"value": "0x40"
		},
		"1683": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5192,
				5275
			],
			"op": "MLOAD",
			"path": "0"
		},
		"1684": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5082,
				5093
			],
			"op": "DUP5",
			"path": "0"
		},
		"1685": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5082,
				5093
			],
			"op": "SWAP3",
			"path": "0"
		},
		"1686": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5041,
				5045
			],
			"op": "DUP7",
			"path": "0"
		},
		"1687": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5041,
				5045
			],
			"op": "SWAP3",
			"path": "0"
		},
		"1688": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5006,
				5011
			],
			"op": "DUP6",
			"path": "0"
		},
		"1689": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5006,
				5011
			],
			"op": "SWAP3",
			"path": "0"
		},
		"1690": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5192,
				5275
			],
			"op": "PUSH32",
			"path": "0",
			"value": "0xDB07D3ACE4EB8CB6D13437EEC22AEE8FCEB4200C6B31945A3FCD75758D9BD34B"
		},
		"1723": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5192,
				5275
			],
			"op": "SWAP3",
			"path": "0"
		},
		"1724": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5192,
				5275
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x50D"
		},
		"1727": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5192,
				5275
			],
			"op": "SWAP3",
			"path": "0"
		},
		"1728": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5126,
				5129
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1729": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5126,
				5129
			],
			"op": "SWAP2",
			"path": "0"
		},
		"1730": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				5192,
				5275
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x17CE"
		},
		"1733": {
			"fn": "BadgerTree.proposeRoot",
			"jump": "i",
			"offset": [
				5192,
				5275
			],
			"op": "JUMP",
			"path": "0"
		},
		"1734": {
			"offset": [
				1196,
				1233
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1735": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1196,
				1233
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x9B"
		},
		"1737": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1196,
				1233
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1738": {
			"fn": "BadgerTree.proposeRoot",
			"offset": [
				1196,
				1233
			],
			"op": "DUP2",
			"path": "0"
		},
		"1739": {
			"fn": "BadgerTree.proposeRoot",
			"jump": "o",
			"offset": [
				1196,
				1233
			],
			"op": "JUMP",
			"path": "0"
		},
		"1740": {
			"fn": "BadgerTree.pause",
			"offset": [
				6044,
				6120
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1741": {
			"fn": "BadgerTree.pause",
			"offset": [
				6080,
				6095
			],
			"op": "PUSH2",
			"path": "0",
			"statement": 27,
			"value": "0x6D4"
		},
		"1744": {
			"fn": "BadgerTree.pause",
			"offset": [
				6080,
				6093
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xEC5"
		},
		"1747": {
			"fn": "BadgerTree.pause",
			"jump": "i",
			"offset": [
				6080,
				6095
			],
			"op": "JUMP",
			"path": "0"
		},
		"1748": {
			"fn": "BadgerTree.pause",
			"offset": [
				6080,
				6095
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1749": {
			"fn": "BadgerTree.pause",
			"offset": [
				6105,
				6113
			],
			"op": "PUSH2",
			"path": "0",
			"statement": 28,
			"value": "0x613"
		},
		"1752": {
			"fn": "BadgerTree.pause",
			"offset": [
				6105,
				6111
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xFBC"
		},
		"1755": {
			"fn": "BadgerTree.pause",
			"jump": "i",
			"offset": [
				6105,
				6113
			],
			"op": "JUMP",
			"path": "0"
		},
		"1756": {
			"offset": [
				1356,
				1391
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1757": {
			"fn": "BadgerTree.pause",
			"offset": [
				1356,
				1391
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x9F"
		},
		"1759": {
			"fn": "BadgerTree.pause",
			"offset": [
				1356,
				1391
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1760": {
			"fn": "BadgerTree.pause",
			"offset": [
				1356,
				1391
			],
			"op": "DUP2",
			"path": "0"
		},
		"1761": {
			"fn": "BadgerTree.pause",
			"jump": "o",
			"offset": [
				1356,
				1391
			],
			"op": "JUMP",
			"path": "0"
		},
		"1762": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"1763": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4398,
				4405
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x0"
		},
		"1765": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4424,
				4436
			],
			"op": "DUP3",
			"path": "2",
			"statement": 29
		},
		"1766": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4424,
				4436
			],
			"op": "DUP2",
			"path": "2"
		},
		"1767": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4424,
				4436
			],
			"op": "MSTORE",
			"path": "2"
		},
		"1768": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4424,
				4430
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x33"
		},
		"1770": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4424,
				4436
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x20"
		},
		"1772": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4424,
				4436
			],
			"op": "MSTORE",
			"path": "2"
		},
		"1773": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4424,
				4436
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"1775": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4424,
				4436
			],
			"op": "DUP2",
			"path": "2"
		},
		"1776": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4424,
				4436
			],
			"op": "KECCAK256",
			"path": "2"
		},
		"1777": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4424,
				4454
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x6FA"
		},
		"1780": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4424,
				4454
			],
			"op": "SWAP1",
			"path": "2"
		},
		"1781": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4448,
				4453
			],
			"op": "DUP4",
			"path": "2"
		},
		"1782": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4424,
				4447
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x1015"
		},
		"1785": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"jump": "i",
			"offset": [
				4424,
				4454
			],
			"op": "JUMP",
			"path": "2"
		},
		"1786": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4424,
				4454
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"1787": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4417,
				4454
			],
			"op": "SWAP1",
			"path": "2"
		},
		"1788": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4417,
				4454
			],
			"op": "POP",
			"path": "2"
		},
		"1789": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"1790": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "SWAP3",
			"path": "2"
		},
		"1791": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "SWAP2",
			"path": "2"
		},
		"1792": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "POP",
			"path": "2"
		},
		"1793": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"offset": [
				4325,
				4461
			],
			"op": "POP",
			"path": "2"
		},
		"1794": {
			"fn": "AccessControlUpgradeable.getRoleMember",
			"jump": "o",
			"offset": [
				4325,
				4461
			],
			"op": "JUMP",
			"path": "2"
		},
		"1795": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3310,
				3447
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"1796": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3379,
				3383
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x0"
		},
		"1798": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3402,
				3414
			],
			"op": "DUP3",
			"path": "2",
			"statement": 30
		},
		"1799": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3402,
				3414
			],
			"op": "DUP2",
			"path": "2"
		},
		"1800": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3402,
				3414
			],
			"op": "MSTORE",
			"path": "2"
		},
		"1801": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3402,
				3408
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x33"
		},
		"1803": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3402,
				3414
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x20"
		},
		"1805": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3402,
				3414
			],
			"op": "MSTORE",
			"path": "2"
		},
		"1806": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3402,
				3414
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"1808": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3402,
				3414
			],
			"op": "DUP2",
			"path": "2"
		},
		"1809": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3402,
				3414
			],
			"op": "KECCAK256",
			"path": "2"
		},
		"1810": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3402,
				3440
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x6FA"
		},
		"1813": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3402,
				3440
			],
			"op": "SWAP1",
			"path": "2"
		},
		"1814": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3432,
				3439
			],
			"op": "DUP4",
			"path": "2"
		},
		"1815": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				3402,
				3431
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x1021"
		},
		"1818": {
			"fn": "AccessControlUpgradeable.hasRole",
			"jump": "i",
			"offset": [
				3402,
				3440
			],
			"op": "JUMP",
			"path": "2"
		},
		"1819": {
			"offset": [
				1273,
				1305
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1820": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1273,
				1305
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x9D"
		},
		"1822": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1273,
				1305
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1823": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1273,
				1305
			],
			"op": "DUP2",
			"path": "0"
		},
		"1824": {
			"fn": "AccessControlUpgradeable.hasRole",
			"jump": "o",
			"offset": [
				1273,
				1305
			],
			"op": "JUMP",
			"path": "0"
		},
		"1825": {
			"offset": [
				1155,
				1190
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1826": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1155,
				1190
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x9A"
		},
		"1828": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1155,
				1190
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1829": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1155,
				1190
			],
			"op": "DUP2",
			"path": "0"
		},
		"1830": {
			"fn": "AccessControlUpgradeable.hasRole",
			"jump": "o",
			"offset": [
				1155,
				1190
			],
			"op": "JUMP",
			"path": "0"
		},
		"1831": {
			"offset": [
				1397,
				1434
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1832": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1397,
				1434
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0xA0"
		},
		"1834": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1397,
				1434
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1835": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1397,
				1434
			],
			"op": "DUP2",
			"path": "0"
		},
		"1836": {
			"fn": "AccessControlUpgradeable.hasRole",
			"jump": "o",
			"offset": [
				1397,
				1434
			],
			"op": "JUMP",
			"path": "0"
		},
		"1837": {
			"offset": [
				1240,
				1267
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1838": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1240,
				1267
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x9C"
		},
		"1840": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1240,
				1267
			],
			"op": "SLOAD",
			"path": "0"
		},
		"1841": {
			"fn": "AccessControlUpgradeable.hasRole",
			"offset": [
				1240,
				1267
			],
			"op": "DUP2",
			"path": "0"
		},
		"1842": {
			"fn": "AccessControlUpgradeable.hasRole",
			"jump": "o",
			"offset": [
				1240,
				1267
			],
			"op": "JUMP",
			"path": "0"
		},
		"1843": {
			"offset": [
				2087,
				2136
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"1844": {
			"offset": [
				2132,
				2136
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x0"
		},
		"1846": {
			"offset": [
				2087,
				2136
			],
			"op": "DUP2",
			"path": "2"
		},
		"1847": {
			"fn": "AccessControlUpgradeable.hasRole",
			"jump": "o",
			"offset": [
				2087,
				2136
			],
			"op": "JUMP",
			"path": "2"
		},
		"1848": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1849": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3090,
				3106
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x60"
		},
		"1851": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3108,
				3124
			],
			"op": "DUP1",
			"path": "0"
		},
		"1852": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3136,
				3164
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x60"
		},
		"1854": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3181,
				3187
			],
			"op": "DUP4",
			"path": "0"
		},
		"1855": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3181,
				3194
			],
			"op": "MLOAD",
			"path": "0"
		},
		"1856": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "PUSH8",
			"path": "0",
			"value": "0xFFFFFFFFFFFFFFFF"
		},
		"1865": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "DUP2",
			"path": "0"
		},
		"1866": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "GT",
			"path": "0"
		},
		"1867": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "DUP1",
			"path": "0"
		},
		"1868": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "ISZERO",
			"path": "0"
		},
		"1869": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x755"
		},
		"1872": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "JUMPI",
			"path": "0"
		},
		"1873": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"1875": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "DUP1",
			"path": "0"
		},
		"1876": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "REVERT",
			"path": "0"
		},
		"1877": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1878": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "POP",
			"path": "0"
		},
		"1879": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"1881": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "MLOAD",
			"path": "0"
		},
		"1882": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1883": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "DUP1",
			"path": "0"
		},
		"1884": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "DUP3",
			"path": "0"
		},
		"1885": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1886": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "DUP1",
			"path": "0"
		},
		"1887": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"1889": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "MUL",
			"path": "0"
		},
		"1890": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"1892": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "ADD",
			"path": "0"
		},
		"1893": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "DUP3",
			"path": "0"
		},
		"1894": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "ADD",
			"path": "0"
		},
		"1895": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"1897": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1898": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "DUP1",
			"path": "0"
		},
		"1899": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "ISZERO",
			"path": "0"
		},
		"1900": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x77F"
		},
		"1903": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "JUMPI",
			"path": "0"
		},
		"1904": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "DUP2",
			"path": "0"
		},
		"1905": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"1907": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "ADD",
			"path": "0"
		},
		"1908": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"1910": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "DUP3",
			"path": "0"
		},
		"1911": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "MUL",
			"path": "0"
		},
		"1912": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "DUP1",
			"path": "0"
		},
		"1913": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "CALLDATASIZE",
			"path": "0"
		},
		"1914": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "DUP4",
			"path": "0"
		},
		"1915": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "CALLDATACOPY",
			"path": "0"
		},
		"1916": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "ADD",
			"path": "0"
		},
		"1917": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1918": {
			"op": "POP"
		},
		"1919": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1920": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3167,
				3195
			],
			"op": "POP",
			"path": "0"
		},
		"1921": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3136,
				3195
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1922": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3136,
				3195
			],
			"op": "POP",
			"path": "0"
		},
		"1923": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3210,
				3219
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"1925": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3205,
				3315
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1926": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3229,
				3235
			],
			"op": "DUP5",
			"path": "0"
		},
		"1927": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3229,
				3242
			],
			"op": "MLOAD",
			"path": "0"
		},
		"1928": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3225,
				3226
			],
			"op": "DUP2",
			"path": "0"
		},
		"1929": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3225,
				3242
			],
			"op": "LT",
			"path": "0"
		},
		"1930": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3205,
				3315
			],
			"op": "ISZERO",
			"path": "0"
		},
		"1931": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3205,
				3315
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x7FF"
		},
		"1934": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3205,
				3315
			],
			"op": "JUMPI",
			"path": "0"
		},
		"1935": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"1937": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"1939": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"1941": {
			"op": "SHL"
		},
		"1942": {
			"op": "SUB"
		},
		"1943": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3293
			],
			"op": "DUP7",
			"path": "0",
			"statement": 31
		},
		"1944": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3293
			],
			"op": "AND",
			"path": "0"
		},
		"1945": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3293
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"1947": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3293
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1948": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3293
			],
			"op": "DUP2",
			"path": "0"
		},
		"1949": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3293
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1950": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3287
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0xA1"
		},
		"1952": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3293
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"1954": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3293
			],
			"op": "MSTORE",
			"path": "0"
		},
		"1955": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3293
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"1957": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3293
			],
			"op": "DUP2",
			"path": "0"
		},
		"1958": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3293
			],
			"op": "KECCAK256",
			"path": "0"
		},
		"1959": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3303
			],
			"op": "DUP7",
			"path": "0"
		},
		"1960": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3303
			],
			"op": "MLOAD",
			"path": "0"
		},
		"1961": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3293
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1962": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3293
			],
			"op": "SWAP2",
			"path": "0"
		},
		"1963": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3293
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1964": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3300
			],
			"op": "DUP8",
			"path": "0"
		},
		"1965": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3300
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1966": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3301,
				3302
			],
			"op": "DUP5",
			"path": "0"
		},
		"1967": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3301,
				3302
			],
			"op": "SWAP1",
			"path": "0"
		},
		"1968": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3303
			],
			"op": "DUP2",
			"path": "0"
		},
		"1969": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3303
			],
			"op": "LT",
			"path": "0"
		},
		"1970": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3303
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x7B7"
		},
		"1973": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3303
			],
			"op": "JUMPI",
			"path": "0"
		},
		"1974": {
			"dev": "Index out of range",
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3303
			],
			"op": "INVALID",
			"path": "0"
		},
		"1975": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3303
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"1976": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3303
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"1978": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3303
			],
			"op": "MUL",
			"path": "0"
		},
		"1979": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3303
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"1981": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3303
			],
			"op": "ADD",
			"path": "0"
		},
		"1982": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3303
			],
			"op": "ADD",
			"path": "0"
		},
		"1983": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3294,
				3303
			],
			"op": "MLOAD",
			"path": "0"
		},
		"1984": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"1986": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"1988": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"1990": {
			"op": "SHL"
		},
		"1991": {
			"op": "SUB"
		},
		"1992": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3304
			],
			"op": "AND",
			"path": "0"
		},
		"1993": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"1995": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"1997": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"1999": {
			"op": "SHL"
		},
		"2000": {
			"op": "SUB"
		},
		"2001": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3304
			],
			"op": "AND",
			"path": "0"
		},
		"2002": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3304
			],
			"op": "DUP2",
			"path": "0"
		},
		"2003": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3304
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2004": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3304
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2006": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3304
			],
			"op": "ADD",
			"path": "0"
		},
		"2007": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3304
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2008": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3304
			],
			"op": "DUP2",
			"path": "0"
		},
		"2009": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3304
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2010": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3304
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2012": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3304
			],
			"op": "ADD",
			"path": "0"
		},
		"2013": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3304
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"2015": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3304
			],
			"op": "KECCAK256",
			"path": "0"
		},
		"2016": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3280,
				3304
			],
			"op": "SLOAD",
			"path": "0"
		},
		"2017": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3274
			],
			"op": "DUP3",
			"path": "0"
		},
		"2018": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3275,
				3276
			],
			"op": "DUP3",
			"path": "0"
		},
		"2019": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "DUP2",
			"path": "0"
		},
		"2020": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "MLOAD",
			"path": "0"
		},
		"2021": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "DUP2",
			"path": "0"
		},
		"2022": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "LT",
			"path": "0"
		},
		"2023": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x7EC"
		},
		"2026": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "JUMPI",
			"path": "0"
		},
		"2027": {
			"dev": "Index out of range",
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "INVALID",
			"path": "0"
		},
		"2028": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2029": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2031": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2032": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "DUP2",
			"path": "0"
		},
		"2033": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "MUL",
			"path": "0"
		},
		"2034": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "SWAP2",
			"path": "0"
		},
		"2035": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2036": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "SWAP2",
			"path": "0"
		},
		"2037": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "ADD",
			"path": "0"
		},
		"2038": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3277
			],
			"op": "ADD",
			"path": "0"
		},
		"2039": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3263,
				3304
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2040": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3244,
				3247
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 32,
			"value": "0x1"
		},
		"2042": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3244,
				3247
			],
			"op": "ADD",
			"path": "0"
		},
		"2043": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3205,
				3315
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x785"
		},
		"2046": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3205,
				3315
			],
			"op": "JUMP",
			"path": "0"
		},
		"2047": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3205,
				3315
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2048": {
			"op": "POP"
		},
		"2049": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3332,
				3338
			],
			"op": "DUP4",
			"path": "0",
			"statement": 33
		},
		"2050": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3332,
				3338
			],
			"op": "SWAP3",
			"path": "0"
		},
		"2051": {
			"op": "POP"
		},
		"2052": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3340,
				3351
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2053": {
			"op": "POP"
		},
		"2054": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2055": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "SWAP3",
			"path": "0"
		},
		"2056": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "POP",
			"path": "0"
		},
		"2057": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "SWAP3",
			"path": "0"
		},
		"2058": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2059": {
			"fn": "BadgerTree.getClaimedFor",
			"offset": [
				3008,
				3359
			],
			"op": "POP",
			"path": "0"
		},
		"2060": {
			"fn": "BadgerTree.getClaimedFor",
			"jump": "o",
			"offset": [
				3008,
				3359
			],
			"op": "JUMP",
			"path": "0"
		},
		"2061": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2492,
				2677
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2062": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2547,
				2564
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x815"
		},
		"2065": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2547,
				2564
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x148D"
		},
		"2068": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"jump": "i",
			"offset": [
				2547,
				2564
			],
			"op": "JUMP",
			"path": "0"
		},
		"2069": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2547,
				2564
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2070": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 34,
			"value": "0x40"
		},
		"2072": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "MLOAD",
			"path": "0"
		},
		"2073": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "DUP1",
			"path": "0"
		},
		"2074": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x80"
		},
		"2076": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "ADD",
			"path": "0"
		},
		"2077": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"2079": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2080": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "DUP1",
			"path": "0"
		},
		"2081": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2594,
				2604
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x98"
		},
		"2083": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2594,
				2604
			],
			"op": "SLOAD",
			"path": "0"
		},
		"2084": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "DUP2",
			"path": "0"
		},
		"2085": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2086": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2088": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "ADD",
			"path": "0"
		},
		"2089": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2606,
				2623
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x99"
		},
		"2091": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2606,
				2623
			],
			"op": "SLOAD",
			"path": "0"
		},
		"2092": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "DUP2",
			"path": "0"
		},
		"2093": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2094": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2096": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "ADD",
			"path": "0"
		},
		"2097": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2625,
				2645
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x9A"
		},
		"2099": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2625,
				2645
			],
			"op": "SLOAD",
			"path": "0"
		},
		"2100": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "DUP2",
			"path": "0"
		},
		"2101": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2102": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2104": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "ADD",
			"path": "0"
		},
		"2105": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2647,
				2669
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0xA0"
		},
		"2107": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2647,
				2669
			],
			"op": "SLOAD",
			"path": "0"
		},
		"2108": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "DUP2",
			"path": "0"
		},
		"2109": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2110": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2583,
				2670
			],
			"op": "POP",
			"path": "0"
		},
		"2111": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2576,
				2670
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2112": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2576,
				2670
			],
			"op": "POP",
			"path": "0"
		},
		"2113": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				2492,
				2677
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2114": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"jump": "o",
			"offset": [
				2492,
				2677
			],
			"op": "JUMP",
			"path": "0"
		},
		"2115": {
			"offset": [
				1053,
				1080
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2116": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				1053,
				1080
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x97"
		},
		"2118": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				1053,
				1080
			],
			"op": "SLOAD",
			"path": "0"
		},
		"2119": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"offset": [
				1053,
				1080
			],
			"op": "DUP2",
			"path": "0"
		},
		"2120": {
			"fn": "BadgerTree.getCurrentMerkleData",
			"jump": "o",
			"offset": [
				1053,
				1080
			],
			"op": "JUMP",
			"path": "0"
		},
		"2121": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1563,
				1970
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2122": {
			"offset": [
				1426,
				1439
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"2124": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1426,
				1439
			],
			"op": "SLOAD",
			"path": "5"
		},
		"2125": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1426,
				1439
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x100"
		},
		"2128": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1426,
				1439
			],
			"op": "SWAP1",
			"path": "5"
		},
		"2129": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1426,
				1439
			],
			"op": "DIV",
			"path": "5"
		},
		"2130": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1426,
				1439
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0xFF"
		},
		"2132": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1426,
				1439
			],
			"op": "AND",
			"path": "5"
		},
		"2133": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1426,
				1439
			],
			"op": "DUP1",
			"path": "5"
		},
		"2134": {
			"offset": [
				1426,
				1459
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x862"
		},
		"2137": {
			"offset": [
				1426,
				1459
			],
			"op": "JUMPI",
			"path": "5"
		},
		"2138": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1426,
				1459
			],
			"op": "POP",
			"path": "5"
		},
		"2139": {
			"offset": [
				1443,
				1459
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x862"
		},
		"2142": {
			"offset": [
				1443,
				1457
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x1036"
		},
		"2145": {
			"jump": "i",
			"offset": [
				1443,
				1459
			],
			"op": "JUMP",
			"path": "5"
		},
		"2146": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1443,
				1459
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"2147": {
			"offset": [
				1426,
				1476
			],
			"op": "DUP1",
			"path": "5"
		},
		"2148": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1426,
				1476
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x870"
		},
		"2151": {
			"offset": [
				1426,
				1476
			],
			"op": "JUMPI",
			"path": "5"
		},
		"2152": {
			"op": "POP"
		},
		"2153": {
			"offset": [
				1464,
				1476
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"2155": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1464,
				1476
			],
			"op": "SLOAD",
			"path": "5"
		},
		"2156": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1464,
				1476
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0xFF"
		},
		"2158": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1464,
				1476
			],
			"op": "AND",
			"path": "5"
		},
		"2159": {
			"offset": [
				1463,
				1476
			],
			"op": "ISZERO",
			"path": "5"
		},
		"2160": {
			"offset": [
				1426,
				1476
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"2161": {
			"offset": [
				1418,
				1527
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x88C"
		},
		"2164": {
			"offset": [
				1418,
				1527
			],
			"op": "JUMPI",
			"path": "5"
		},
		"2165": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x40"
		},
		"2167": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1418,
				1527
			],
			"op": "MLOAD",
			"path": "5"
		},
		"2168": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"2172": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"2174": {
			"op": "SHL"
		},
		"2175": {
			"offset": [
				1418,
				1527
			],
			"op": "DUP2",
			"path": "5"
		},
		"2176": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1418,
				1527
			],
			"op": "MSTORE",
			"path": "5"
		},
		"2177": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x4"
		},
		"2179": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1418,
				1527
			],
			"op": "ADD",
			"path": "5"
		},
		"2180": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x463"
		},
		"2183": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1418,
				1527
			],
			"op": "SWAP1",
			"path": "5"
		},
		"2184": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x1B75"
		},
		"2187": {
			"fn": "BadgerTree.initialize",
			"jump": "i",
			"offset": [
				1418,
				1527
			],
			"op": "JUMP",
			"path": "5"
		},
		"2188": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1418,
				1527
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"2189": {
			"offset": [
				1538,
				1557
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"2191": {
			"offset": [
				1561,
				1574
			],
			"op": "SLOAD",
			"path": "5"
		},
		"2192": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1561,
				1574
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x100"
		},
		"2195": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1561,
				1574
			],
			"op": "SWAP1",
			"path": "5"
		},
		"2196": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1561,
				1574
			],
			"op": "DIV",
			"path": "5"
		},
		"2197": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1561,
				1574
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0xFF"
		},
		"2199": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1561,
				1574
			],
			"op": "AND",
			"path": "5"
		},
		"2200": {
			"offset": [
				1560,
				1574
			],
			"op": "ISZERO",
			"path": "5"
		},
		"2201": {
			"offset": [
				1584,
				1682
			],
			"op": "DUP1",
			"path": "5"
		},
		"2202": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1584,
				1682
			],
			"op": "ISZERO",
			"path": "5"
		},
		"2203": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1584,
				1682
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x8B7"
		},
		"2206": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1584,
				1682
			],
			"op": "JUMPI",
			"path": "5"
		},
		"2207": {
			"offset": [
				1618,
				1631
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"2209": {
			"offset": [
				1618,
				1638
			],
			"op": "DUP1",
			"path": "5"
		},
		"2210": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1618,
				1638
			],
			"op": "SLOAD",
			"path": "5"
		},
		"2211": {
			"op": "PUSH1",
			"value": "0xFF"
		},
		"2213": {
			"op": "NOT"
		},
		"2214": {
			"op": "PUSH2",
			"value": "0xFF00"
		},
		"2217": {
			"op": "NOT"
		},
		"2218": {
			"offset": [
				1618,
				1638
			],
			"op": "SWAP1",
			"path": "5"
		},
		"2219": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1618,
				1638
			],
			"op": "SWAP2",
			"path": "5"
		},
		"2220": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1618,
				1638
			],
			"op": "AND",
			"path": "5"
		},
		"2221": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1618,
				1638
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x100"
		},
		"2224": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1618,
				1638
			],
			"op": "OR",
			"path": "5"
		},
		"2225": {
			"offset": [
				1652,
				1671
			],
			"op": "AND",
			"path": "5"
		},
		"2226": {
			"offset": [
				1634,
				1638
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x1"
		},
		"2228": {
			"offset": [
				1652,
				1671
			],
			"op": "OR",
			"path": "5"
		},
		"2229": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1652,
				1671
			],
			"op": "SWAP1",
			"path": "5"
		},
		"2230": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1652,
				1671
			],
			"op": "SSTORE",
			"path": "5"
		},
		"2231": {
			"offset": [
				1584,
				1682
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"2232": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1706,
				1728
			],
			"op": "PUSH2",
			"path": "0",
			"statement": 35,
			"value": "0x8BF"
		},
		"2235": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1706,
				1726
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x103C"
		},
		"2238": {
			"fn": "BadgerTree.initialize",
			"jump": "i",
			"offset": [
				1706,
				1728
			],
			"op": "JUMP",
			"path": "0"
		},
		"2239": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1706,
				1728
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2240": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1738,
				1765
			],
			"op": "PUSH2",
			"path": "0",
			"statement": 36,
			"value": "0x8C7"
		},
		"2243": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1738,
				1763
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x10CF"
		},
		"2246": {
			"fn": "BadgerTree.initialize",
			"jump": "i",
			"offset": [
				1738,
				1765
			],
			"op": "JUMP",
			"path": "0"
		},
		"2247": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1738,
				1765
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2248": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1776,
				1813
			],
			"op": "PUSH2",
			"path": "0",
			"statement": 37,
			"value": "0x8D2"
		},
		"2251": {
			"offset": [
				2132,
				2136
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x0"
		},
		"2253": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1807,
				1812
			],
			"op": "DUP6",
			"path": "0"
		},
		"2254": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1776,
				1786
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x599"
		},
		"2257": {
			"fn": "BadgerTree.initialize",
			"jump": "i",
			"offset": [
				1776,
				1813
			],
			"op": "JUMP",
			"path": "0"
		},
		"2258": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1776,
				1813
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2259": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1866,
				1911
			],
			"op": "PUSH2",
			"path": "0",
			"statement": 38,
			"value": "0x8FB"
		},
		"2262": {
			"offset": [
				944,
				974
			],
			"op": "PUSH31",
			"path": "0",
			"value": "0x9AB23A1010D07A0450A1FBEA1D84169B57D2C2273B54BFF0F20C3E90199B5D"
		},
		"2294": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1896,
				1910
			],
			"op": "DUP5",
			"path": "0"
		},
		"2295": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1866,
				1876
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x599"
		},
		"2298": {
			"fn": "BadgerTree.initialize",
			"jump": "i",
			"offset": [
				1866,
				1911
			],
			"op": "JUMP",
			"path": "0"
		},
		"2299": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1866,
				1911
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2300": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1921,
				1963
			],
			"op": "PUSH2",
			"path": "0",
			"statement": 39,
			"value": "0x925"
		},
		"2303": {
			"offset": [
				1020,
				1046
			],
			"op": "PUSH32",
			"path": "0",
			"value": "0x55435DD261A4B9B3364963F7738A7A662AD9C84396D64BE3365284BB7F0A5041"
		},
		"2336": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1947,
				1962
			],
			"op": "DUP4",
			"path": "0"
		},
		"2337": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1921,
				1931
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x599"
		},
		"2340": {
			"fn": "BadgerTree.initialize",
			"jump": "i",
			"offset": [
				1921,
				1963
			],
			"op": "JUMP",
			"path": "0"
		},
		"2341": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1921,
				1963
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2342": {
			"offset": [
				1708,
				1722
			],
			"op": "DUP1",
			"path": "5"
		},
		"2343": {
			"offset": [
				1704,
				1770
			],
			"op": "ISZERO",
			"path": "5"
		},
		"2344": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1704,
				1770
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x937"
		},
		"2347": {
			"offset": [
				1704,
				1770
			],
			"op": "JUMPI",
			"path": "5"
		},
		"2348": {
			"offset": [
				1754,
				1759
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"2350": {
			"offset": [
				1738,
				1759
			],
			"op": "DUP1",
			"path": "5"
		},
		"2351": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1738,
				1759
			],
			"op": "SLOAD",
			"path": "5"
		},
		"2352": {
			"op": "PUSH2",
			"value": "0xFF00"
		},
		"2355": {
			"op": "NOT"
		},
		"2356": {
			"offset": [
				1738,
				1759
			],
			"op": "AND",
			"path": "5"
		},
		"2357": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1738,
				1759
			],
			"op": "SWAP1",
			"path": "5"
		},
		"2358": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1738,
				1759
			],
			"op": "SSTORE",
			"path": "5"
		},
		"2359": {
			"offset": [
				1704,
				1770
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"2360": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1563,
				1970
			],
			"op": "POP",
			"path": "0"
		},
		"2361": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1563,
				1970
			],
			"op": "POP",
			"path": "0"
		},
		"2362": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1563,
				1970
			],
			"op": "POP",
			"path": "0"
		},
		"2363": {
			"fn": "BadgerTree.initialize",
			"offset": [
				1563,
				1970
			],
			"op": "POP",
			"path": "0"
		},
		"2364": {
			"fn": "BadgerTree.initialize",
			"jump": "o",
			"offset": [
				1563,
				1970
			],
			"op": "JUMP",
			"path": "0"
		},
		"2365": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3615,
				3740
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"2366": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3678,
				3685
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x0"
		},
		"2368": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3704,
				3716
			],
			"op": "DUP2",
			"path": "2",
			"statement": 40
		},
		"2369": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3704,
				3716
			],
			"op": "DUP2",
			"path": "2"
		},
		"2370": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3704,
				3716
			],
			"op": "MSTORE",
			"path": "2"
		},
		"2371": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3704,
				3710
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x33"
		},
		"2373": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3704,
				3716
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x20"
		},
		"2375": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3704,
				3716
			],
			"op": "MSTORE",
			"path": "2"
		},
		"2376": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3704,
				3716
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"2378": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3704,
				3716
			],
			"op": "DUP2",
			"path": "2"
		},
		"2379": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3704,
				3716
			],
			"op": "KECCAK256",
			"path": "2"
		},
		"2380": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3704,
				3733
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x6FD"
		},
		"2383": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3704,
				3733
			],
			"op": "SWAP1",
			"path": "2"
		},
		"2384": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"offset": [
				3704,
				3731
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x115B"
		},
		"2387": {
			"fn": "AccessControlUpgradeable.getRoleMemberCount",
			"jump": "i",
			"offset": [
				3704,
				3733
			],
			"op": "JUMP",
			"path": "2"
		},
		"2388": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5461,
				5687
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"2389": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5553,
				5565
			],
			"op": "PUSH1",
			"path": "2",
			"statement": 41,
			"value": "0x0"
		},
		"2391": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5553,
				5565
			],
			"op": "DUP3",
			"path": "2"
		},
		"2392": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5553,
				5565
			],
			"op": "DUP2",
			"path": "2"
		},
		"2393": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5553,
				5565
			],
			"op": "MSTORE",
			"path": "2"
		},
		"2394": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5553,
				5559
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x33"
		},
		"2396": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5553,
				5565
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x20"
		},
		"2398": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5553,
				5565
			],
			"op": "MSTORE",
			"path": "2"
		},
		"2399": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5553,
				5565
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"2401": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5553,
				5565
			],
			"op": "SWAP1",
			"path": "2"
		},
		"2402": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5553,
				5565
			],
			"op": "KECCAK256",
			"path": "2"
		},
		"2403": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5553,
				5575
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x2"
		},
		"2405": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5553,
				5575
			],
			"op": "ADD",
			"path": "2"
		},
		"2406": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5553,
				5575
			],
			"op": "SLOAD",
			"path": "2"
		},
		"2407": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5545,
				5590
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x972"
		},
		"2410": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5545,
				5590
			],
			"op": "SWAP1",
			"path": "2"
		},
		"2411": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5577,
				5589
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x322"
		},
		"2414": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5577,
				5587
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0xDEF"
		},
		"2417": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"jump": "i",
			"offset": [
				5577,
				5589
			],
			"op": "JUMP",
			"path": "2"
		},
		"2418": {
			"branch": 102,
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5545,
				5590
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"2419": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5537,
				5643
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x5F9"
		},
		"2422": {
			"branch": 102,
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5537,
				5643
			],
			"op": "JUMPI",
			"path": "2"
		},
		"2423": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5537,
				5643
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"2425": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5537,
				5643
			],
			"op": "MLOAD",
			"path": "2"
		},
		"2426": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"2430": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"2432": {
			"op": "SHL"
		},
		"2433": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5537,
				5643
			],
			"op": "DUP2",
			"path": "2"
		},
		"2434": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5537,
				5643
			],
			"op": "MSTORE",
			"path": "2"
		},
		"2435": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5537,
				5643
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x4"
		},
		"2437": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5537,
				5643
			],
			"op": "ADD",
			"path": "2"
		},
		"2438": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5537,
				5643
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x463"
		},
		"2441": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5537,
				5643
			],
			"op": "SWAP1",
			"path": "2"
		},
		"2442": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				5537,
				5643
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x1ACB"
		},
		"2445": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"jump": "i",
			"offset": [
				5537,
				5643
			],
			"op": "JUMP",
			"path": "2"
		},
		"2446": {
			"offset": [
				900,
				974
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2447": {
			"offset": [
				944,
				974
			],
			"op": "PUSH31",
			"path": "0",
			"value": "0x9AB23A1010D07A0450A1FBEA1D84169B57D2C2273B54BFF0F20C3E90199B5D"
		},
		"2479": {
			"offset": [
				900,
				974
			],
			"op": "DUP2",
			"path": "0"
		},
		"2480": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"jump": "o",
			"offset": [
				900,
				974
			],
			"op": "JUMP",
			"path": "0"
		},
		"2481": {
			"offset": [
				1509,
				1556
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2482": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0xA2"
		},
		"2484": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2486": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2487": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"2489": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2490": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "DUP2",
			"path": "0"
		},
		"2491": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2492": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"2494": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2495": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "KECCAK256",
			"path": "0"
		},
		"2496": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "SLOAD",
			"path": "0"
		},
		"2497": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"offset": [
				1509,
				1556
			],
			"op": "DUP2",
			"path": "0"
		},
		"2498": {
			"fn": "AccessControlUpgradeable.revokeRole",
			"jump": "o",
			"offset": [
				1509,
				1556
			],
			"op": "JUMP",
			"path": "0"
		},
		"2499": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2500": {
			"offset": [
				1599,
				1606
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0x65"
		},
		"2502": {
			"fn": "BadgerTree.claim",
			"offset": [
				1599,
				1606
			],
			"op": "SLOAD",
			"path": "9"
		},
		"2503": {
			"fn": "BadgerTree.claim",
			"offset": [
				1599,
				1606
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0xFF"
		},
		"2505": {
			"fn": "BadgerTree.claim",
			"offset": [
				1599,
				1606
			],
			"op": "AND",
			"path": "9"
		},
		"2506": {
			"offset": [
				1598,
				1606
			],
			"op": "ISZERO",
			"path": "9"
		},
		"2507": {
			"offset": [
				1590,
				1627
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0x9E6"
		},
		"2510": {
			"offset": [
				1590,
				1627
			],
			"op": "JUMPI",
			"path": "9"
		},
		"2511": {
			"fn": "BadgerTree.claim",
			"offset": [
				1590,
				1627
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0x40"
		},
		"2513": {
			"fn": "BadgerTree.claim",
			"offset": [
				1590,
				1627
			],
			"op": "MLOAD",
			"path": "9"
		},
		"2514": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"2518": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"2520": {
			"op": "SHL"
		},
		"2521": {
			"offset": [
				1590,
				1627
			],
			"op": "DUP2",
			"path": "9"
		},
		"2522": {
			"fn": "BadgerTree.claim",
			"offset": [
				1590,
				1627
			],
			"op": "MSTORE",
			"path": "9"
		},
		"2523": {
			"fn": "BadgerTree.claim",
			"offset": [
				1590,
				1627
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0x4"
		},
		"2525": {
			"fn": "BadgerTree.claim",
			"offset": [
				1590,
				1627
			],
			"op": "ADD",
			"path": "9"
		},
		"2526": {
			"fn": "BadgerTree.claim",
			"offset": [
				1590,
				1627
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0x463"
		},
		"2529": {
			"fn": "BadgerTree.claim",
			"offset": [
				1590,
				1627
			],
			"op": "SWAP1",
			"path": "9"
		},
		"2530": {
			"fn": "BadgerTree.claim",
			"offset": [
				1590,
				1627
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0x1B1B"
		},
		"2533": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				1590,
				1627
			],
			"op": "JUMP",
			"path": "9"
		},
		"2534": {
			"fn": "BadgerTree.claim",
			"offset": [
				1590,
				1627
			],
			"op": "JUMPDEST",
			"path": "9"
		},
		"2535": {
			"fn": "BadgerTree.claim",
			"offset": [
				3689,
				3701
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 42,
			"value": "0x97"
		},
		"2537": {
			"fn": "BadgerTree.claim",
			"offset": [
				3689,
				3701
			],
			"op": "SLOAD",
			"path": "0"
		},
		"2538": {
			"fn": "BadgerTree.claim",
			"offset": [
				3680,
				3685
			],
			"op": "DUP4",
			"path": "0"
		},
		"2539": {
			"branch": 93,
			"fn": "BadgerTree.claim",
			"offset": [
				3680,
				3701
			],
			"op": "EQ",
			"path": "0"
		},
		"2540": {
			"fn": "BadgerTree.claim",
			"offset": [
				3672,
				3719
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xA07"
		},
		"2543": {
			"branch": 93,
			"fn": "BadgerTree.claim",
			"offset": [
				3672,
				3719
			],
			"op": "JUMPI",
			"path": "0"
		},
		"2544": {
			"fn": "BadgerTree.claim",
			"offset": [
				3672,
				3719
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"2546": {
			"fn": "BadgerTree.claim",
			"offset": [
				3672,
				3719
			],
			"op": "MLOAD",
			"path": "0"
		},
		"2547": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"2551": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"2553": {
			"op": "SHL"
		},
		"2554": {
			"fn": "BadgerTree.claim",
			"offset": [
				3672,
				3719
			],
			"op": "DUP2",
			"path": "0"
		},
		"2555": {
			"fn": "BadgerTree.claim",
			"offset": [
				3672,
				3719
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2556": {
			"fn": "BadgerTree.claim",
			"offset": [
				3672,
				3719
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"2558": {
			"fn": "BadgerTree.claim",
			"offset": [
				3672,
				3719
			],
			"op": "ADD",
			"path": "0"
		},
		"2559": {
			"fn": "BadgerTree.claim",
			"offset": [
				3672,
				3719
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x463"
		},
		"2562": {
			"fn": "BadgerTree.claim",
			"offset": [
				3672,
				3719
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2563": {
			"fn": "BadgerTree.claim",
			"offset": [
				3672,
				3719
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1BEC"
		},
		"2566": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				3672,
				3719
			],
			"op": "JUMP",
			"path": "0"
		},
		"2567": {
			"fn": "BadgerTree.claim",
			"offset": [
				3672,
				3719
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2568": {
			"fn": "BadgerTree.claim",
			"offset": [
				3766,
				3778
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"2570": {
			"fn": "BadgerTree.claim",
			"offset": [
				3808,
				3813
			],
			"op": "DUP5",
			"path": "0"
		},
		"2571": {
			"fn": "BadgerTree.claim",
			"offset": [
				3815,
				3825
			],
			"op": "CALLER",
			"path": "0"
		},
		"2572": {
			"fn": "BadgerTree.claim",
			"offset": [
				3827,
				3832
			],
			"op": "DUP6",
			"path": "0"
		},
		"2573": {
			"fn": "BadgerTree.claim",
			"offset": [
				3834,
				3840
			],
			"op": "DUP12",
			"path": "0"
		},
		"2574": {
			"fn": "BadgerTree.claim",
			"offset": [
				3834,
				3840
			],
			"op": "DUP12",
			"path": "0"
		},
		"2575": {
			"fn": "BadgerTree.claim",
			"offset": [
				3842,
				3859
			],
			"op": "DUP12",
			"path": "0"
		},
		"2576": {
			"fn": "BadgerTree.claim",
			"offset": [
				3842,
				3859
			],
			"op": "DUP12",
			"path": "0"
		},
		"2577": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"2579": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "MLOAD",
			"path": "0"
		},
		"2580": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2582": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "ADD",
			"path": "0"
		},
		"2583": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xA26"
		},
		"2586": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "SWAP8",
			"path": "0"
		},
		"2587": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "SWAP7",
			"path": "0"
		},
		"2588": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "SWAP6",
			"path": "0"
		},
		"2589": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "SWAP5",
			"path": "0"
		},
		"2590": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "SWAP4",
			"path": "0"
		},
		"2591": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "SWAP3",
			"path": "0"
		},
		"2592": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "SWAP2",
			"path": "0"
		},
		"2593": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2594": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x17DC"
		},
		"2597": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				3791,
				3860
			],
			"op": "JUMP",
			"path": "0"
		},
		"2598": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2599": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"2601": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "MLOAD",
			"path": "0"
		},
		"2602": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2604": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "DUP2",
			"path": "0"
		},
		"2605": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "DUP4",
			"path": "0"
		},
		"2606": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "SUB",
			"path": "0"
		},
		"2607": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "SUB",
			"path": "0"
		},
		"2608": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "DUP2",
			"path": "0"
		},
		"2609": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2610": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2611": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"2613": {
			"fn": "BadgerTree.claim",
			"offset": [
				3791,
				3860
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2614": {
			"fn": "BadgerTree.claim",
			"offset": [
				3781,
				3861
			],
			"op": "DUP1",
			"path": "0"
		},
		"2615": {
			"fn": "BadgerTree.claim",
			"offset": [
				3781,
				3861
			],
			"op": "MLOAD",
			"path": "0"
		},
		"2616": {
			"fn": "BadgerTree.claim",
			"offset": [
				3781,
				3861
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2617": {
			"fn": "BadgerTree.claim",
			"offset": [
				3781,
				3861
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2619": {
			"fn": "BadgerTree.claim",
			"offset": [
				3781,
				3861
			],
			"op": "ADD",
			"path": "0"
		},
		"2620": {
			"fn": "BadgerTree.claim",
			"offset": [
				3781,
				3861
			],
			"op": "KECCAK256",
			"path": "0"
		},
		"2621": {
			"fn": "BadgerTree.claim",
			"offset": [
				3766,
				3861
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2622": {
			"fn": "BadgerTree.claim",
			"offset": [
				3766,
				3861
			],
			"op": "POP",
			"path": "0"
		},
		"2623": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "PUSH2",
			"path": "0",
			"statement": 43,
			"value": "0xA7F"
		},
		"2626": {
			"fn": "BadgerTree.claim",
			"offset": [
				3909,
				3920
			],
			"op": "DUP4",
			"path": "0"
		},
		"2627": {
			"fn": "BadgerTree.claim",
			"offset": [
				3909,
				3920
			],
			"op": "DUP4",
			"path": "0"
		},
		"2628": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "DUP1",
			"path": "0"
		},
		"2629": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "DUP1",
			"path": "0"
		},
		"2630": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2632": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "MUL",
			"path": "0"
		},
		"2633": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2635": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "ADD",
			"path": "0"
		},
		"2636": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"2638": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "MLOAD",
			"path": "0"
		},
		"2639": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2640": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "DUP2",
			"path": "0"
		},
		"2641": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "ADD",
			"path": "0"
		},
		"2642": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"2644": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2645": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "DUP1",
			"path": "0"
		},
		"2646": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "SWAP4",
			"path": "0"
		},
		"2647": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "SWAP3",
			"path": "0"
		},
		"2648": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "SWAP2",
			"path": "0"
		},
		"2649": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2650": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "DUP2",
			"path": "0"
		},
		"2651": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "DUP2",
			"path": "0"
		},
		"2652": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2653": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2655": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "ADD",
			"path": "0"
		},
		"2656": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "DUP4",
			"path": "0"
		},
		"2657": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "DUP4",
			"path": "0"
		},
		"2658": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2660": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "MUL",
			"path": "0"
		},
		"2661": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "DUP1",
			"path": "0"
		},
		"2662": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "DUP3",
			"path": "0"
		},
		"2663": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "DUP5",
			"path": "0"
		},
		"2664": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "CALLDATACOPY",
			"path": "0"
		},
		"2665": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"2667": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "SWAP3",
			"path": "0"
		},
		"2668": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "ADD",
			"path": "0"
		},
		"2669": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "SWAP2",
			"path": "0"
		},
		"2670": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2671": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "SWAP2",
			"path": "0"
		},
		"2672": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2673": {
			"op": "POP"
		},
		"2674": {
			"op": "POP"
		},
		"2675": {
			"fn": "BadgerTree.claim",
			"offset": [
				3922,
				3932
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x98"
		},
		"2677": {
			"fn": "BadgerTree.claim",
			"offset": [
				3922,
				3932
			],
			"op": "SLOAD",
			"path": "0"
		},
		"2678": {
			"fn": "BadgerTree.claim",
			"offset": [
				3922,
				3932
			],
			"op": "SWAP2",
			"path": "0"
		},
		"2679": {
			"op": "POP"
		},
		"2680": {
			"fn": "BadgerTree.claim",
			"offset": [
				3934,
				3938
			],
			"op": "DUP5",
			"path": "0"
		},
		"2681": {
			"fn": "BadgerTree.claim",
			"offset": [
				3934,
				3938
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2682": {
			"op": "POP"
		},
		"2683": {
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3908
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1166"
		},
		"2686": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				3879,
				3939
			],
			"op": "JUMP",
			"path": "0"
		},
		"2687": {
			"branch": 94,
			"fn": "BadgerTree.claim",
			"offset": [
				3879,
				3939
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2688": {
			"fn": "BadgerTree.claim",
			"offset": [
				3871,
				3957
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xA9B"
		},
		"2691": {
			"branch": 94,
			"fn": "BadgerTree.claim",
			"offset": [
				3871,
				3957
			],
			"op": "JUMPI",
			"path": "0"
		},
		"2692": {
			"fn": "BadgerTree.claim",
			"offset": [
				3871,
				3957
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"2694": {
			"fn": "BadgerTree.claim",
			"offset": [
				3871,
				3957
			],
			"op": "MLOAD",
			"path": "0"
		},
		"2695": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"2699": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"2701": {
			"op": "SHL"
		},
		"2702": {
			"fn": "BadgerTree.claim",
			"offset": [
				3871,
				3957
			],
			"op": "DUP2",
			"path": "0"
		},
		"2703": {
			"fn": "BadgerTree.claim",
			"offset": [
				3871,
				3957
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2704": {
			"fn": "BadgerTree.claim",
			"offset": [
				3871,
				3957
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"2706": {
			"fn": "BadgerTree.claim",
			"offset": [
				3871,
				3957
			],
			"op": "ADD",
			"path": "0"
		},
		"2707": {
			"fn": "BadgerTree.claim",
			"offset": [
				3871,
				3957
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x463"
		},
		"2710": {
			"fn": "BadgerTree.claim",
			"offset": [
				3871,
				3957
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2711": {
			"fn": "BadgerTree.claim",
			"offset": [
				3871,
				3957
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1C99"
		},
		"2714": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				3871,
				3957
			],
			"op": "JUMP",
			"path": "0"
		},
		"2715": {
			"fn": "BadgerTree.claim",
			"offset": [
				3871,
				3957
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2716": {
			"fn": "BadgerTree.claim",
			"offset": [
				4001,
				4010
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"2718": {
			"fn": "BadgerTree.claim",
			"offset": [
				3996,
				4606
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2719": {
			"fn": "BadgerTree.claim",
			"offset": [
				4016,
				4033
			],
			"op": "DUP9",
			"path": "0"
		},
		"2720": {
			"fn": "BadgerTree.claim",
			"offset": [
				4016,
				4033
			],
			"op": "DUP2",
			"path": "0"
		},
		"2721": {
			"fn": "BadgerTree.claim",
			"offset": [
				4016,
				4033
			],
			"op": "LT",
			"path": "0"
		},
		"2722": {
			"fn": "BadgerTree.claim",
			"offset": [
				3996,
				4606
			],
			"op": "ISZERO",
			"path": "0"
		},
		"2723": {
			"fn": "BadgerTree.claim",
			"offset": [
				3996,
				4606
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xDB8"
		},
		"2726": {
			"fn": "BadgerTree.claim",
			"offset": [
				3996,
				4606
			],
			"op": "JUMPI",
			"path": "0"
		},
		"2727": {
			"fn": "BadgerTree.claim",
			"offset": [
				4107,
				4117
			],
			"op": "CALLER",
			"path": "0"
		},
		"2728": {
			"fn": "BadgerTree.claim",
			"offset": [
				4054,
				4071
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"2730": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4118
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2731": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4118
			],
			"op": "DUP2",
			"path": "0"
		},
		"2732": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4118
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2733": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4106
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0xA1"
		},
		"2735": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4118
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2737": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4118
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2738": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4118
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"2740": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4118
			],
			"op": "DUP2",
			"path": "0"
		},
		"2741": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4118
			],
			"op": "KECCAK256",
			"path": "0"
		},
		"2742": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4130
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xB1D"
		},
		"2745": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4130
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2746": {
			"fn": "BadgerTree.claim",
			"offset": [
				4054,
				4071
			],
			"op": "DUP3",
			"path": "0"
		},
		"2747": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4125
			],
			"op": "DUP14",
			"path": "0"
		},
		"2748": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4125
			],
			"op": "DUP14",
			"path": "0"
		},
		"2749": {
			"fn": "BadgerTree.claim",
			"offset": [
				4126,
				4127
			],
			"op": "DUP7",
			"path": "0"
		},
		"2750": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "DUP2",
			"path": "0"
		},
		"2751": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "DUP2",
			"path": "0"
		},
		"2752": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "LT",
			"path": "0"
		},
		"2753": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xAC6"
		},
		"2756": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "JUMPI",
			"path": "0"
		},
		"2757": {
			"dev": "Index out of range",
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "INVALID",
			"path": "0"
		},
		"2758": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2759": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2760": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "POP",
			"path": "0"
		},
		"2761": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2763": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "MUL",
			"path": "0"
		},
		"2764": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "ADD",
			"path": "0"
		},
		"2765": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2767": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "DUP2",
			"path": "0"
		},
		"2768": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "ADD",
			"path": "0"
		},
		"2769": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2770": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xADB"
		},
		"2773": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "SWAP2",
			"path": "0"
		},
		"2774": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2775": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x150D"
		},
		"2778": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				4119,
				4128
			],
			"op": "JUMP",
			"path": "0"
		},
		"2779": {
			"fn": "BadgerTree.claim",
			"offset": [
				4119,
				4128
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2780": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"2782": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"2784": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"2786": {
			"op": "SHL"
		},
		"2787": {
			"op": "SUB"
		},
		"2788": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4129
			],
			"op": "AND",
			"path": "0"
		},
		"2789": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"2791": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"2793": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"2795": {
			"op": "SHL"
		},
		"2796": {
			"op": "SUB"
		},
		"2797": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4129
			],
			"op": "AND",
			"path": "0"
		},
		"2798": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4129
			],
			"op": "DUP2",
			"path": "0"
		},
		"2799": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4129
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2800": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4129
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2802": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4129
			],
			"op": "ADD",
			"path": "0"
		},
		"2803": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4129
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2804": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4129
			],
			"op": "DUP2",
			"path": "0"
		},
		"2805": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4129
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2806": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4129
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2808": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4129
			],
			"op": "ADD",
			"path": "0"
		},
		"2809": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4129
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"2811": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4129
			],
			"op": "KECCAK256",
			"path": "0"
		},
		"2812": {
			"fn": "BadgerTree.claim",
			"offset": [
				4099,
				4129
			],
			"op": "SLOAD",
			"path": "0"
		},
		"2813": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4091
			],
			"op": "DUP11",
			"path": "0"
		},
		"2814": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4091
			],
			"op": "DUP11",
			"path": "0"
		},
		"2815": {
			"fn": "BadgerTree.claim",
			"offset": [
				4092,
				4093
			],
			"op": "DUP6",
			"path": "0"
		},
		"2816": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4094
			],
			"op": "DUP2",
			"path": "0"
		},
		"2817": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4094
			],
			"op": "DUP2",
			"path": "0"
		},
		"2818": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4094
			],
			"op": "LT",
			"path": "0"
		},
		"2819": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4094
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xB08"
		},
		"2822": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4094
			],
			"op": "JUMPI",
			"path": "0"
		},
		"2823": {
			"dev": "Index out of range",
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4094
			],
			"op": "INVALID",
			"path": "0"
		},
		"2824": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4094
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2825": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4094
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2826": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4094
			],
			"op": "POP",
			"path": "0"
		},
		"2827": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4094
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2829": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4094
			],
			"op": "MUL",
			"path": "0"
		},
		"2830": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4094
			],
			"op": "ADD",
			"path": "0"
		},
		"2831": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4094
			],
			"op": "CALLDATALOAD",
			"path": "0"
		},
		"2832": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4098
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1203"
		},
		"2835": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4098
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2836": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4130
			],
			"op": "SWAP2",
			"path": "0"
		},
		"2837": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4130
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2838": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4130
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xFFFFFFFF"
		},
		"2843": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4130
			],
			"op": "AND",
			"path": "0"
		},
		"2844": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				4074,
				4130
			],
			"op": "JUMP",
			"path": "0"
		},
		"2845": {
			"fn": "BadgerTree.claim",
			"offset": [
				4074,
				4130
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2846": {
			"fn": "BadgerTree.claim",
			"offset": [
				4054,
				4130
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2847": {
			"fn": "BadgerTree.claim",
			"offset": [
				4054,
				4130
			],
			"op": "POP",
			"path": "0"
		},
		"2848": {
			"fn": "BadgerTree.claim",
			"offset": [
				4165,
				4166
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 44,
			"value": "0x0"
		},
		"2850": {
			"fn": "BadgerTree.claim",
			"offset": [
				4153,
				4162
			],
			"op": "DUP2",
			"path": "0"
		},
		"2851": {
			"branch": 95,
			"fn": "BadgerTree.claim",
			"offset": [
				4153,
				4166
			],
			"op": "GT",
			"path": "0"
		},
		"2852": {
			"fn": "BadgerTree.claim",
			"offset": [
				4145,
				4186
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xB3F"
		},
		"2855": {
			"branch": 95,
			"fn": "BadgerTree.claim",
			"offset": [
				4145,
				4186
			],
			"op": "JUMPI",
			"path": "0"
		},
		"2856": {
			"fn": "BadgerTree.claim",
			"offset": [
				4145,
				4186
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"2858": {
			"fn": "BadgerTree.claim",
			"offset": [
				4145,
				4186
			],
			"op": "MLOAD",
			"path": "0"
		},
		"2859": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"2863": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"2865": {
			"op": "SHL"
		},
		"2866": {
			"fn": "BadgerTree.claim",
			"offset": [
				4145,
				4186
			],
			"op": "DUP2",
			"path": "0"
		},
		"2867": {
			"fn": "BadgerTree.claim",
			"offset": [
				4145,
				4186
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2868": {
			"fn": "BadgerTree.claim",
			"offset": [
				4145,
				4186
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"2870": {
			"fn": "BadgerTree.claim",
			"offset": [
				4145,
				4186
			],
			"op": "ADD",
			"path": "0"
		},
		"2871": {
			"fn": "BadgerTree.claim",
			"offset": [
				4145,
				4186
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x463"
		},
		"2874": {
			"fn": "BadgerTree.claim",
			"offset": [
				4145,
				4186
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2875": {
			"fn": "BadgerTree.claim",
			"offset": [
				4145,
				4186
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1C4A"
		},
		"2878": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				4145,
				4186
			],
			"op": "JUMP",
			"path": "0"
		},
		"2879": {
			"fn": "BadgerTree.claim",
			"offset": [
				4145,
				4186
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2880": {
			"fn": "BadgerTree.claim",
			"offset": [
				4242,
				4252
			],
			"op": "CALLER",
			"path": "0",
			"statement": 45
		},
		"2881": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4253
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"2883": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4253
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2884": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4253
			],
			"op": "DUP2",
			"path": "0"
		},
		"2885": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4253
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2886": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4241
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0xA1"
		},
		"2888": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4253
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2890": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4253
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2891": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4253
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"2893": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4253
			],
			"op": "DUP2",
			"path": "0"
		},
		"2894": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4253
			],
			"op": "KECCAK256",
			"path": "0"
		},
		"2895": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4279
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xB96"
		},
		"2898": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4279
			],
			"op": "SWAP2",
			"path": "0"
		},
		"2899": {
			"fn": "BadgerTree.claim",
			"offset": [
				4269,
				4278
			],
			"op": "DUP4",
			"path": "0"
		},
		"2900": {
			"fn": "BadgerTree.claim",
			"offset": [
				4269,
				4278
			],
			"op": "SWAP2",
			"path": "0"
		},
		"2901": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4253
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2902": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4260
			],
			"op": "DUP15",
			"path": "0"
		},
		"2903": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4260
			],
			"op": "DUP15",
			"path": "0"
		},
		"2904": {
			"fn": "BadgerTree.claim",
			"offset": [
				4261,
				4262
			],
			"op": "DUP8",
			"path": "0"
		},
		"2905": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "DUP2",
			"path": "0"
		},
		"2906": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "DUP2",
			"path": "0"
		},
		"2907": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "LT",
			"path": "0"
		},
		"2908": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xB61"
		},
		"2911": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "JUMPI",
			"path": "0"
		},
		"2912": {
			"dev": "Index out of range",
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "INVALID",
			"path": "0"
		},
		"2913": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2914": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2915": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "POP",
			"path": "0"
		},
		"2916": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2918": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "MUL",
			"path": "0"
		},
		"2919": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "ADD",
			"path": "0"
		},
		"2920": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2922": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "DUP2",
			"path": "0"
		},
		"2923": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "ADD",
			"path": "0"
		},
		"2924": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2925": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xB76"
		},
		"2928": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "SWAP2",
			"path": "0"
		},
		"2929": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2930": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x150D"
		},
		"2933": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				4254,
				4263
			],
			"op": "JUMP",
			"path": "0"
		},
		"2934": {
			"fn": "BadgerTree.claim",
			"offset": [
				4254,
				4263
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2935": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"2937": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"2939": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"2941": {
			"op": "SHL"
		},
		"2942": {
			"op": "SUB"
		},
		"2943": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4264
			],
			"op": "AND",
			"path": "0"
		},
		"2944": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4264
			],
			"op": "DUP2",
			"path": "0"
		},
		"2945": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4264
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2946": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4264
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2948": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4264
			],
			"op": "DUP2",
			"path": "0"
		},
		"2949": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4264
			],
			"op": "ADD",
			"path": "0"
		},
		"2950": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4264
			],
			"op": "SWAP2",
			"path": "0"
		},
		"2951": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4264
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2952": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4264
			],
			"op": "SWAP2",
			"path": "0"
		},
		"2953": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4264
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2954": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4264
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"2956": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4264
			],
			"op": "ADD",
			"path": "0"
		},
		"2957": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"2959": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4264
			],
			"op": "KECCAK256",
			"path": "0"
		},
		"2960": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4264
			],
			"op": "SLOAD",
			"path": "0"
		},
		"2961": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4264
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2962": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4268
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xDCA"
		},
		"2965": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				4234,
				4279
			],
			"op": "JUMP",
			"path": "0"
		},
		"2966": {
			"fn": "BadgerTree.claim",
			"offset": [
				4234,
				4279
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2967": {
			"fn": "BadgerTree.claim",
			"offset": [
				4209,
				4219
			],
			"op": "CALLER",
			"path": "0"
		},
		"2968": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4220
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"2970": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4220
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2971": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4220
			],
			"op": "DUP2",
			"path": "0"
		},
		"2972": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4220
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2973": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4208
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0xA1"
		},
		"2975": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4220
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2977": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4220
			],
			"op": "MSTORE",
			"path": "0"
		},
		"2978": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4220
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"2980": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4220
			],
			"op": "DUP2",
			"path": "0"
		},
		"2981": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4220
			],
			"op": "KECCAK256",
			"path": "0"
		},
		"2982": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4220
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2983": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4227
			],
			"op": "DUP14",
			"path": "0"
		},
		"2984": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4227
			],
			"op": "DUP14",
			"path": "0"
		},
		"2985": {
			"fn": "BadgerTree.claim",
			"offset": [
				4228,
				4229
			],
			"op": "DUP7",
			"path": "0"
		},
		"2986": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "DUP2",
			"path": "0"
		},
		"2987": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "DUP2",
			"path": "0"
		},
		"2988": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "LT",
			"path": "0"
		},
		"2989": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xBB2"
		},
		"2992": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "JUMPI",
			"path": "0"
		},
		"2993": {
			"dev": "Index out of range",
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "INVALID",
			"path": "0"
		},
		"2994": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"2995": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "SWAP1",
			"path": "0"
		},
		"2996": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "POP",
			"path": "0"
		},
		"2997": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"2999": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "MUL",
			"path": "0"
		},
		"3000": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "ADD",
			"path": "0"
		},
		"3001": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"3003": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "DUP2",
			"path": "0"
		},
		"3004": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "ADD",
			"path": "0"
		},
		"3005": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3006": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xBC7"
		},
		"3009": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "SWAP2",
			"path": "0"
		},
		"3010": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3011": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x150D"
		},
		"3014": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				4221,
				4230
			],
			"op": "JUMP",
			"path": "0"
		},
		"3015": {
			"fn": "BadgerTree.claim",
			"offset": [
				4221,
				4230
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3016": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3018": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3020": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"3022": {
			"op": "SHL"
		},
		"3023": {
			"op": "SUB"
		},
		"3024": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4231
			],
			"op": "AND",
			"path": "0"
		},
		"3025": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4231
			],
			"op": "DUP2",
			"path": "0"
		},
		"3026": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4231
			],
			"op": "MSTORE",
			"path": "0"
		},
		"3027": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4231
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"3029": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4231
			],
			"op": "DUP2",
			"path": "0"
		},
		"3030": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4231
			],
			"op": "ADD",
			"path": "0"
		},
		"3031": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4231
			],
			"op": "SWAP2",
			"path": "0"
		},
		"3032": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4231
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3033": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4231
			],
			"op": "SWAP2",
			"path": "0"
		},
		"3034": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4231
			],
			"op": "MSTORE",
			"path": "0"
		},
		"3035": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4231
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"3037": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4231
			],
			"op": "ADD",
			"path": "0"
		},
		"3038": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"3040": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4231
			],
			"op": "KECCAK256",
			"path": "0"
		},
		"3041": {
			"fn": "BadgerTree.claim",
			"offset": [
				4201,
				4279
			],
			"op": "SSTORE",
			"path": "0"
		},
		"3042": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4353
			],
			"op": "DUP9",
			"path": "0",
			"statement": 46
		},
		"3043": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4353
			],
			"op": "DUP9",
			"path": "0"
		},
		"3044": {
			"fn": "BadgerTree.claim",
			"offset": [
				4354,
				4355
			],
			"op": "DUP4",
			"path": "0"
		},
		"3045": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "DUP2",
			"path": "0"
		},
		"3046": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "DUP2",
			"path": "0"
		},
		"3047": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "LT",
			"path": "0"
		},
		"3048": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xBED"
		},
		"3051": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "JUMPI",
			"path": "0"
		},
		"3052": {
			"dev": "Index out of range",
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "INVALID",
			"path": "0"
		},
		"3053": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3054": {
			"fn": "BadgerTree.claim",
			"offset": [
				4310,
				4320
			],
			"op": "CALLER",
			"path": "0"
		},
		"3055": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4321
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"3057": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4321
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3058": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4321
			],
			"op": "DUP2",
			"path": "0"
		},
		"3059": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4321
			],
			"op": "MSTORE",
			"path": "0"
		},
		"3060": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4309
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0xA1"
		},
		"3062": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"3064": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4321
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3065": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4321
			],
			"op": "DUP2",
			"path": "0"
		},
		"3066": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4321
			],
			"op": "MSTORE",
			"path": "0"
		},
		"3067": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4321
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"3069": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4321
			],
			"op": "DUP3",
			"path": "0"
		},
		"3070": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4321
			],
			"op": "KECCAK256",
			"path": "0"
		},
		"3071": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "SWAP3",
			"path": "0"
		},
		"3072": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "MUL",
			"path": "0"
		},
		"3073": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "SWAP4",
			"path": "0"
		},
		"3074": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3075": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "SWAP4",
			"path": "0"
		},
		"3076": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "ADD",
			"path": "0"
		},
		"3077": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "CALLDATALOAD",
			"path": "0"
		},
		"3078": {
			"fn": "BadgerTree.claim",
			"offset": [
				4336,
				4356
			],
			"op": "SWAP3",
			"path": "0"
		},
		"3079": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4321
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3080": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4321
			],
			"op": "SWAP2",
			"path": "0"
		},
		"3081": {
			"op": "POP"
		},
		"3082": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4328
			],
			"op": "DUP14",
			"path": "0"
		},
		"3083": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4328
			],
			"op": "DUP14",
			"path": "0"
		},
		"3084": {
			"fn": "BadgerTree.claim",
			"offset": [
				4329,
				4330
			],
			"op": "DUP7",
			"path": "0"
		},
		"3085": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "DUP2",
			"path": "0"
		},
		"3086": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "DUP2",
			"path": "0"
		},
		"3087": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "LT",
			"path": "0"
		},
		"3088": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xC15"
		},
		"3091": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "JUMPI",
			"path": "0"
		},
		"3092": {
			"dev": "Index out of range",
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "INVALID",
			"path": "0"
		},
		"3093": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3094": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3095": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "POP",
			"path": "0"
		},
		"3096": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"3098": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "MUL",
			"path": "0"
		},
		"3099": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "ADD",
			"path": "0"
		},
		"3100": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"3102": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "DUP2",
			"path": "0"
		},
		"3103": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "ADD",
			"path": "0"
		},
		"3104": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3105": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xC2A"
		},
		"3108": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "SWAP2",
			"path": "0"
		},
		"3109": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3110": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x150D"
		},
		"3113": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				4322,
				4331
			],
			"op": "JUMP",
			"path": "0"
		},
		"3114": {
			"fn": "BadgerTree.claim",
			"offset": [
				4322,
				4331
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3115": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3117": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3119": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"3121": {
			"op": "SHL"
		},
		"3122": {
			"op": "SUB"
		},
		"3123": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4332
			],
			"op": "AND",
			"path": "0"
		},
		"3124": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3126": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3128": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"3130": {
			"op": "SHL"
		},
		"3131": {
			"op": "SUB"
		},
		"3132": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4332
			],
			"op": "AND",
			"path": "0"
		},
		"3133": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4332
			],
			"op": "DUP2",
			"path": "0"
		},
		"3134": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4332
			],
			"op": "MSTORE",
			"path": "0"
		},
		"3135": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4332
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"3137": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4332
			],
			"op": "ADD",
			"path": "0"
		},
		"3138": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4332
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3139": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4332
			],
			"op": "DUP2",
			"path": "0"
		},
		"3140": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4332
			],
			"op": "MSTORE",
			"path": "0"
		},
		"3141": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4332
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"3143": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4332
			],
			"op": "ADD",
			"path": "0"
		},
		"3144": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4332
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"3146": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4332
			],
			"op": "KECCAK256",
			"path": "0"
		},
		"3147": {
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4332
			],
			"op": "SLOAD",
			"path": "0"
		},
		"3148": {
			"branch": 96,
			"fn": "BadgerTree.claim",
			"offset": [
				4302,
				4356
			],
			"op": "EQ",
			"path": "0"
		},
		"3149": {
			"fn": "BadgerTree.claim",
			"offset": [
				4294,
				4384
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xC68"
		},
		"3152": {
			"branch": 96,
			"fn": "BadgerTree.claim",
			"offset": [
				4294,
				4384
			],
			"op": "JUMPI",
			"path": "0"
		},
		"3153": {
			"fn": "BadgerTree.claim",
			"offset": [
				4294,
				4384
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"3155": {
			"fn": "BadgerTree.claim",
			"offset": [
				4294,
				4384
			],
			"op": "MLOAD",
			"path": "0"
		},
		"3156": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"3160": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"3162": {
			"op": "SHL"
		},
		"3163": {
			"fn": "BadgerTree.claim",
			"offset": [
				4294,
				4384
			],
			"op": "DUP2",
			"path": "0"
		},
		"3164": {
			"fn": "BadgerTree.claim",
			"offset": [
				4294,
				4384
			],
			"op": "MSTORE",
			"path": "0"
		},
		"3165": {
			"fn": "BadgerTree.claim",
			"offset": [
				4294,
				4384
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"3167": {
			"fn": "BadgerTree.claim",
			"offset": [
				4294,
				4384
			],
			"op": "ADD",
			"path": "0"
		},
		"3168": {
			"fn": "BadgerTree.claim",
			"offset": [
				4294,
				4384
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x463"
		},
		"3171": {
			"fn": "BadgerTree.claim",
			"offset": [
				4294,
				4384
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3172": {
			"fn": "BadgerTree.claim",
			"offset": [
				4294,
				4384
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1C13"
		},
		"3175": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				4294,
				4384
			],
			"op": "JUMP",
			"path": "0"
		},
		"3176": {
			"fn": "BadgerTree.claim",
			"offset": [
				4294,
				4384
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3177": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4430
			],
			"op": "DUP11",
			"path": "0",
			"statement": 47
		},
		"3178": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4430
			],
			"op": "DUP11",
			"path": "0"
		},
		"3179": {
			"fn": "BadgerTree.claim",
			"offset": [
				4431,
				4432
			],
			"op": "DUP4",
			"path": "0"
		},
		"3180": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "DUP2",
			"path": "0"
		},
		"3181": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "DUP2",
			"path": "0"
		},
		"3182": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "LT",
			"path": "0"
		},
		"3183": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xC74"
		},
		"3186": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "JUMPI",
			"path": "0"
		},
		"3187": {
			"dev": "Index out of range",
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "INVALID",
			"path": "0"
		},
		"3188": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3189": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3190": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "POP",
			"path": "0"
		},
		"3191": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"3193": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "MUL",
			"path": "0"
		},
		"3194": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "ADD",
			"path": "0"
		},
		"3195": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"3197": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "DUP2",
			"path": "0"
		},
		"3198": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "ADD",
			"path": "0"
		},
		"3199": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3200": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xC89"
		},
		"3203": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "SWAP2",
			"path": "0"
		},
		"3204": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3205": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x150D"
		},
		"3208": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				4424,
				4433
			],
			"op": "JUMP",
			"path": "0"
		},
		"3209": {
			"fn": "BadgerTree.claim",
			"offset": [
				4424,
				4433
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3210": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3212": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3214": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"3216": {
			"op": "SHL"
		},
		"3217": {
			"op": "SUB"
		},
		"3218": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4443
			],
			"op": "AND",
			"path": "0"
		},
		"3219": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4443
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xA9059CBB"
		},
		"3224": {
			"fn": "BadgerTree.claim",
			"offset": [
				4444,
				4454
			],
			"op": "CALLER",
			"path": "0"
		},
		"3225": {
			"fn": "BadgerTree.claim",
			"offset": [
				4456,
				4473
			],
			"op": "DUP12",
			"path": "0"
		},
		"3226": {
			"fn": "BadgerTree.claim",
			"offset": [
				4456,
				4473
			],
			"op": "DUP12",
			"path": "0"
		},
		"3227": {
			"fn": "BadgerTree.claim",
			"offset": [
				4474,
				4475
			],
			"op": "DUP7",
			"path": "0"
		},
		"3228": {
			"fn": "BadgerTree.claim",
			"offset": [
				4456,
				4476
			],
			"op": "DUP2",
			"path": "0"
		},
		"3229": {
			"fn": "BadgerTree.claim",
			"offset": [
				4456,
				4476
			],
			"op": "DUP2",
			"path": "0"
		},
		"3230": {
			"fn": "BadgerTree.claim",
			"offset": [
				4456,
				4476
			],
			"op": "LT",
			"path": "0"
		},
		"3231": {
			"fn": "BadgerTree.claim",
			"offset": [
				4456,
				4476
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xCA4"
		},
		"3234": {
			"fn": "BadgerTree.claim",
			"offset": [
				4456,
				4476
			],
			"op": "JUMPI",
			"path": "0"
		},
		"3235": {
			"dev": "Index out of range",
			"fn": "BadgerTree.claim",
			"offset": [
				4456,
				4476
			],
			"op": "INVALID",
			"path": "0"
		},
		"3236": {
			"fn": "BadgerTree.claim",
			"offset": [
				4456,
				4476
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3237": {
			"fn": "BadgerTree.claim",
			"offset": [
				4456,
				4476
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3238": {
			"fn": "BadgerTree.claim",
			"offset": [
				4456,
				4476
			],
			"op": "POP",
			"path": "0"
		},
		"3239": {
			"fn": "BadgerTree.claim",
			"offset": [
				4456,
				4476
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"3241": {
			"fn": "BadgerTree.claim",
			"offset": [
				4456,
				4476
			],
			"op": "MUL",
			"path": "0"
		},
		"3242": {
			"fn": "BadgerTree.claim",
			"offset": [
				4456,
				4476
			],
			"op": "ADD",
			"path": "0"
		},
		"3243": {
			"fn": "BadgerTree.claim",
			"offset": [
				4456,
				4476
			],
			"op": "CALLDATALOAD",
			"path": "0"
		},
		"3244": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"3246": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "MLOAD",
			"path": "0"
		},
		"3247": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "DUP4",
			"path": "0"
		},
		"3248": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH4",
			"path": "0",
			"value": "0xFFFFFFFF"
		},
		"3253": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "AND",
			"path": "0"
		},
		"3254": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0xE0"
		},
		"3256": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "SHL",
			"path": "0"
		},
		"3257": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "DUP2",
			"path": "0"
		},
		"3258": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "MSTORE",
			"path": "0"
		},
		"3259": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"3261": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "ADD",
			"path": "0"
		},
		"3262": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xCC8"
		},
		"3265": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "SWAP3",
			"path": "0"
		},
		"3266": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "SWAP2",
			"path": "0"
		},
		"3267": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3268": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1876"
		},
		"3271": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				4406,
				4477
			],
			"op": "JUMP",
			"path": "0"
		},
		"3272": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3273": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"3275": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"3277": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "MLOAD",
			"path": "0"
		},
		"3278": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "DUP1",
			"path": "0"
		},
		"3279": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "DUP4",
			"path": "0"
		},
		"3280": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "SUB",
			"path": "0"
		},
		"3281": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "DUP2",
			"path": "0"
		},
		"3282": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"3284": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "DUP8",
			"path": "0"
		},
		"3285": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "DUP1",
			"path": "0"
		},
		"3286": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "EXTCODESIZE",
			"path": "0"
		},
		"3287": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "ISZERO",
			"path": "0"
		},
		"3288": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "DUP1",
			"path": "0"
		},
		"3289": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "ISZERO",
			"path": "0"
		},
		"3290": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xCE2"
		},
		"3293": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "JUMPI",
			"path": "0"
		},
		"3294": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"3296": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "DUP1",
			"path": "0"
		},
		"3297": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "REVERT",
			"path": "0"
		},
		"3298": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3299": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "POP",
			"path": "0"
		},
		"3300": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "GAS",
			"path": "0"
		},
		"3301": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "CALL",
			"path": "0"
		},
		"3302": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "ISZERO",
			"path": "0"
		},
		"3303": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "DUP1",
			"path": "0"
		},
		"3304": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "ISZERO",
			"path": "0"
		},
		"3305": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xCF6"
		},
		"3308": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "JUMPI",
			"path": "0"
		},
		"3309": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "RETURNDATASIZE",
			"path": "0"
		},
		"3310": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"3312": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "DUP1",
			"path": "0"
		},
		"3313": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "RETURNDATACOPY",
			"path": "0"
		},
		"3314": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "RETURNDATASIZE",
			"path": "0"
		},
		"3315": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x0"
		},
		"3317": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "REVERT",
			"path": "0"
		},
		"3318": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3319": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "POP",
			"path": "0"
		},
		"3320": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "POP",
			"path": "0"
		},
		"3321": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "POP",
			"path": "0"
		},
		"3322": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "POP",
			"path": "0"
		},
		"3323": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"3325": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "MLOAD",
			"path": "0"
		},
		"3326": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "RETURNDATASIZE",
			"path": "0"
		},
		"3327": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x1F"
		},
		"3329": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "NOT",
			"path": "0"
		},
		"3330": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x1F"
		},
		"3332": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "DUP3",
			"path": "0"
		},
		"3333": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "ADD",
			"path": "0"
		},
		"3334": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "AND",
			"path": "0"
		},
		"3335": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "DUP3",
			"path": "0"
		},
		"3336": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "ADD",
			"path": "0"
		},
		"3337": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "DUP1",
			"path": "0"
		},
		"3338": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"3340": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "MSTORE",
			"path": "0"
		},
		"3341": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "POP",
			"path": "0"
		},
		"3342": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "DUP2",
			"path": "0"
		},
		"3343": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "ADD",
			"path": "0"
		},
		"3344": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3345": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xD1A"
		},
		"3348": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "SWAP2",
			"path": "0"
		},
		"3349": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3350": {
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x16FB"
		},
		"3353": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				4406,
				4477
			],
			"op": "JUMP",
			"path": "0"
		},
		"3354": {
			"branch": 97,
			"fn": "BadgerTree.claim",
			"offset": [
				4406,
				4477
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3355": {
			"fn": "BadgerTree.claim",
			"offset": [
				4398,
				4497
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xD36"
		},
		"3358": {
			"branch": 97,
			"fn": "BadgerTree.claim",
			"offset": [
				4398,
				4497
			],
			"op": "JUMPI",
			"path": "0"
		},
		"3359": {
			"fn": "BadgerTree.claim",
			"offset": [
				4398,
				4497
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"3361": {
			"fn": "BadgerTree.claim",
			"offset": [
				4398,
				4497
			],
			"op": "MLOAD",
			"path": "0"
		},
		"3362": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"3366": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"3368": {
			"op": "SHL"
		},
		"3369": {
			"fn": "BadgerTree.claim",
			"offset": [
				4398,
				4497
			],
			"op": "DUP2",
			"path": "0"
		},
		"3370": {
			"fn": "BadgerTree.claim",
			"offset": [
				4398,
				4497
			],
			"op": "MSTORE",
			"path": "0"
		},
		"3371": {
			"fn": "BadgerTree.claim",
			"offset": [
				4398,
				4497
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"3373": {
			"fn": "BadgerTree.claim",
			"offset": [
				4398,
				4497
			],
			"op": "ADD",
			"path": "0"
		},
		"3374": {
			"fn": "BadgerTree.claim",
			"offset": [
				4398,
				4497
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x463"
		},
		"3377": {
			"fn": "BadgerTree.claim",
			"offset": [
				4398,
				4497
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3378": {
			"fn": "BadgerTree.claim",
			"offset": [
				4398,
				4497
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1A43"
		},
		"3381": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				4398,
				4497
			],
			"op": "JUMP",
			"path": "0"
		},
		"3382": {
			"fn": "BadgerTree.claim",
			"offset": [
				4398,
				4497
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3383": {
			"fn": "BadgerTree.claim",
			"offset": [
				4570,
				4575
			],
			"op": "DUP6",
			"path": "0",
			"statement": 48
		},
		"3384": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4543
			],
			"op": "DUP12",
			"path": "0"
		},
		"3385": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4543
			],
			"op": "DUP12",
			"path": "0"
		},
		"3386": {
			"fn": "BadgerTree.claim",
			"offset": [
				4544,
				4545
			],
			"op": "DUP5",
			"path": "0"
		},
		"3387": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "DUP2",
			"path": "0"
		},
		"3388": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "DUP2",
			"path": "0"
		},
		"3389": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "LT",
			"path": "0"
		},
		"3390": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xD43"
		},
		"3393": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "JUMPI",
			"path": "0"
		},
		"3394": {
			"dev": "Index out of range",
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "INVALID",
			"path": "0"
		},
		"3395": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3396": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3397": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "POP",
			"path": "0"
		},
		"3398": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"3400": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "MUL",
			"path": "0"
		},
		"3401": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "ADD",
			"path": "0"
		},
		"3402": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"3404": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "DUP2",
			"path": "0"
		},
		"3405": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "ADD",
			"path": "0"
		},
		"3406": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3407": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xD58"
		},
		"3410": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "SWAP2",
			"path": "0"
		},
		"3411": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3412": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x150D"
		},
		"3415": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				4537,
				4546
			],
			"op": "JUMP",
			"path": "0"
		},
		"3416": {
			"fn": "BadgerTree.claim",
			"offset": [
				4537,
				4546
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3417": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3419": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3421": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"3423": {
			"op": "SHL"
		},
		"3424": {
			"op": "SUB"
		},
		"3425": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "AND",
			"path": "0"
		},
		"3426": {
			"fn": "BadgerTree.claim",
			"offset": [
				4525,
				4535
			],
			"op": "CALLER",
			"path": "0"
		},
		"3427": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "PUSH32",
			"path": "0",
			"value": "0x6F9C9826BE5976F3F82A3490C52A83328CE2EC7BE9E62DCB39C26DA5148D7C76"
		},
		"3460": {
			"fn": "BadgerTree.claim",
			"offset": [
				4548,
				4565
			],
			"op": "DUP13",
			"path": "0"
		},
		"3461": {
			"fn": "BadgerTree.claim",
			"offset": [
				4548,
				4565
			],
			"op": "DUP13",
			"path": "0"
		},
		"3462": {
			"fn": "BadgerTree.claim",
			"offset": [
				4566,
				4567
			],
			"op": "DUP8",
			"path": "0"
		},
		"3463": {
			"fn": "BadgerTree.claim",
			"offset": [
				4548,
				4568
			],
			"op": "DUP2",
			"path": "0"
		},
		"3464": {
			"fn": "BadgerTree.claim",
			"offset": [
				4548,
				4568
			],
			"op": "DUP2",
			"path": "0"
		},
		"3465": {
			"fn": "BadgerTree.claim",
			"offset": [
				4548,
				4568
			],
			"op": "LT",
			"path": "0"
		},
		"3466": {
			"fn": "BadgerTree.claim",
			"offset": [
				4548,
				4568
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xD8F"
		},
		"3469": {
			"fn": "BadgerTree.claim",
			"offset": [
				4548,
				4568
			],
			"op": "JUMPI",
			"path": "0"
		},
		"3470": {
			"dev": "Index out of range",
			"fn": "BadgerTree.claim",
			"offset": [
				4548,
				4568
			],
			"op": "INVALID",
			"path": "0"
		},
		"3471": {
			"fn": "BadgerTree.claim",
			"offset": [
				4548,
				4568
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3472": {
			"fn": "BadgerTree.claim",
			"offset": [
				4548,
				4568
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3473": {
			"fn": "BadgerTree.claim",
			"offset": [
				4548,
				4568
			],
			"op": "POP",
			"path": "0"
		},
		"3474": {
			"fn": "BadgerTree.claim",
			"offset": [
				4548,
				4568
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x20"
		},
		"3476": {
			"fn": "BadgerTree.claim",
			"offset": [
				4548,
				4568
			],
			"op": "MUL",
			"path": "0"
		},
		"3477": {
			"fn": "BadgerTree.claim",
			"offset": [
				4548,
				4568
			],
			"op": "ADD",
			"path": "0"
		},
		"3478": {
			"fn": "BadgerTree.claim",
			"offset": [
				4548,
				4568
			],
			"op": "CALLDATALOAD",
			"path": "0"
		},
		"3479": {
			"fn": "BadgerTree.claim",
			"offset": [
				4577,
				4580
			],
			"op": "TIMESTAMP",
			"path": "0"
		},
		"3480": {
			"fn": "BadgerTree.claim",
			"offset": [
				4582,
				4594
			],
			"op": "NUMBER",
			"path": "0"
		},
		"3481": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"3483": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "MLOAD",
			"path": "0"
		},
		"3484": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xDA7"
		},
		"3487": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "SWAP4",
			"path": "0"
		},
		"3488": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "SWAP3",
			"path": "0"
		},
		"3489": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "SWAP2",
			"path": "0"
		},
		"3490": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3491": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1D63"
		},
		"3494": {
			"fn": "BadgerTree.claim",
			"jump": "i",
			"offset": [
				4517,
				4595
			],
			"op": "JUMP",
			"path": "0"
		},
		"3495": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3496": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"3498": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "MLOAD",
			"path": "0"
		},
		"3499": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "DUP1",
			"path": "0"
		},
		"3500": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "SWAP2",
			"path": "0"
		},
		"3501": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "SUB",
			"path": "0"
		},
		"3502": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3503": {
			"fn": "BadgerTree.claim",
			"offset": [
				4517,
				4595
			],
			"op": "LOG4",
			"path": "0"
		},
		"3504": {
			"op": "POP"
		},
		"3505": {
			"fn": "BadgerTree.claim",
			"offset": [
				4035,
				4038
			],
			"op": "PUSH1",
			"path": "0",
			"statement": 49,
			"value": "0x1"
		},
		"3507": {
			"fn": "BadgerTree.claim",
			"offset": [
				4035,
				4038
			],
			"op": "ADD",
			"path": "0"
		},
		"3508": {
			"fn": "BadgerTree.claim",
			"offset": [
				3996,
				4606
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0xA9E"
		},
		"3511": {
			"fn": "BadgerTree.claim",
			"offset": [
				3996,
				4606
			],
			"op": "JUMP",
			"path": "0"
		},
		"3512": {
			"fn": "BadgerTree.claim",
			"offset": [
				3996,
				4606
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3513": {
			"fn": "BadgerTree.claim",
			"offset": [
				3996,
				4606
			],
			"op": "POP",
			"path": "0"
		},
		"3514": {
			"offset": [
				1637,
				1638
			],
			"op": "POP",
			"path": "9"
		},
		"3515": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "POP",
			"path": "0"
		},
		"3516": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "POP",
			"path": "0"
		},
		"3517": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "POP",
			"path": "0"
		},
		"3518": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "POP",
			"path": "0"
		},
		"3519": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "POP",
			"path": "0"
		},
		"3520": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "POP",
			"path": "0"
		},
		"3521": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "POP",
			"path": "0"
		},
		"3522": {
			"fn": "BadgerTree.claim",
			"offset": [
				3451,
				4612
			],
			"op": "POP",
			"path": "0"
		},
		"3523": {
			"fn": "BadgerTree.claim",
			"jump": "o",
			"offset": [
				3451,
				4612
			],
			"op": "JUMP",
			"path": "0"
		},
		"3524": {
			"offset": [
				1311,
				1350
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3525": {
			"fn": "BadgerTree.claim",
			"offset": [
				1311,
				1350
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x9E"
		},
		"3527": {
			"fn": "BadgerTree.claim",
			"offset": [
				1311,
				1350
			],
			"op": "SLOAD",
			"path": "0"
		},
		"3528": {
			"fn": "BadgerTree.claim",
			"offset": [
				1311,
				1350
			],
			"op": "DUP2",
			"path": "0"
		},
		"3529": {
			"fn": "BadgerTree.claim",
			"jump": "o",
			"offset": [
				1311,
				1350
			],
			"op": "JUMP",
			"path": "0"
		},
		"3530": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				885,
				1061
			],
			"op": "JUMPDEST",
			"path": "4"
		},
		"3531": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				943,
				950
			],
			"op": "PUSH1",
			"path": "4",
			"value": "0x0"
		},
		"3533": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				974,
				979
			],
			"op": "DUP3",
			"path": "4"
		},
		"3534": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				974,
				979
			],
			"op": "DUP3",
			"path": "4"
		},
		"3535": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				974,
				979
			],
			"op": "ADD",
			"path": "4"
		},
		"3536": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				997,
				1003
			],
			"op": "DUP4",
			"path": "4",
			"statement": 50
		},
		"3537": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				997,
				1003
			],
			"op": "DUP2",
			"path": "4"
		},
		"3538": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				997,
				1003
			],
			"op": "LT",
			"path": "4"
		},
		"3539": {
			"branch": 113,
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				997,
				1003
			],
			"op": "ISZERO",
			"path": "4"
		},
		"3540": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				989,
				1035
			],
			"op": "PUSH2",
			"path": "4",
			"value": "0x6FA"
		},
		"3543": {
			"branch": 113,
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				989,
				1035
			],
			"op": "JUMPI",
			"path": "4"
		},
		"3544": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				989,
				1035
			],
			"op": "PUSH1",
			"path": "4",
			"value": "0x40"
		},
		"3546": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				989,
				1035
			],
			"op": "MLOAD",
			"path": "4"
		},
		"3547": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"3551": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"3553": {
			"op": "SHL"
		},
		"3554": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				989,
				1035
			],
			"op": "DUP2",
			"path": "4"
		},
		"3555": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				989,
				1035
			],
			"op": "MSTORE",
			"path": "4"
		},
		"3556": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				989,
				1035
			],
			"op": "PUSH1",
			"path": "4",
			"value": "0x4"
		},
		"3558": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				989,
				1035
			],
			"op": "ADD",
			"path": "4"
		},
		"3559": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				989,
				1035
			],
			"op": "PUSH2",
			"path": "4",
			"value": "0x463"
		},
		"3562": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				989,
				1035
			],
			"op": "SWAP1",
			"path": "4"
		},
		"3563": {
			"fn": "SafeMathUpgradeable.add",
			"offset": [
				989,
				1035
			],
			"op": "PUSH2",
			"path": "4",
			"value": "0x1A6C"
		},
		"3566": {
			"fn": "SafeMathUpgradeable.add",
			"jump": "i",
			"offset": [
				989,
				1035
			],
			"op": "JUMP",
			"path": "4"
		},
		"3567": {
			"fn": "ContextUpgradeable._msgSender",
			"offset": [
				820,
				924
			],
			"op": "JUMPDEST",
			"path": "1"
		},
		"3568": {
			"fn": "ContextUpgradeable._msgSender",
			"offset": [
				907,
				917
			],
			"op": "CALLER",
			"path": "1",
			"statement": 51
		},
		"3569": {
			"fn": "ContextUpgradeable._msgSender",
			"offset": [
				820,
				924
			],
			"op": "SWAP1",
			"path": "1"
		},
		"3570": {
			"fn": "ContextUpgradeable._msgSender",
			"jump": "o",
			"offset": [
				820,
				924
			],
			"op": "JUMP",
			"path": "1"
		},
		"3571": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7385,
				7569
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"3572": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7458,
				7470
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x0"
		},
		"3574": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7458,
				7470
			],
			"op": "DUP3",
			"path": "2"
		},
		"3575": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7458,
				7470
			],
			"op": "DUP2",
			"path": "2"
		},
		"3576": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7458,
				7470
			],
			"op": "MSTORE",
			"path": "2"
		},
		"3577": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7458,
				7464
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x33"
		},
		"3579": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7458,
				7470
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x20"
		},
		"3581": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7458,
				7470
			],
			"op": "MSTORE",
			"path": "2"
		},
		"3582": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7458,
				7470
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"3584": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7458,
				7470
			],
			"op": "SWAP1",
			"path": "2"
		},
		"3585": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7458,
				7470
			],
			"op": "KECCAK256",
			"path": "2"
		},
		"3586": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7458,
				7491
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0xE0B"
		},
		"3589": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7458,
				7491
			],
			"op": "SWAP1",
			"path": "2"
		},
		"3590": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7483,
				7490
			],
			"op": "DUP3",
			"path": "2"
		},
		"3591": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7458,
				7482
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x1245"
		},
		"3594": {
			"fn": "AccessControlUpgradeable._grantRole",
			"jump": "i",
			"offset": [
				7458,
				7491
			],
			"op": "JUMP",
			"path": "2"
		},
		"3595": {
			"branch": 103,
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7458,
				7491
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"3596": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7454,
				7563
			],
			"op": "ISZERO",
			"path": "2"
		},
		"3597": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7454,
				7563
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x5A3"
		},
		"3600": {
			"branch": 103,
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7454,
				7563
			],
			"op": "JUMPI",
			"path": "2"
		},
		"3601": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7539,
				7551
			],
			"op": "PUSH2",
			"path": "2",
			"statement": 52,
			"value": "0xE18"
		},
		"3604": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7539,
				7549
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0xDEF"
		},
		"3607": {
			"fn": "AccessControlUpgradeable._grantRole",
			"jump": "i",
			"offset": [
				7539,
				7551
			],
			"op": "JUMP",
			"path": "2"
		},
		"3608": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7539,
				7551
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"3609": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3611": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3613": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"3615": {
			"op": "SHL"
		},
		"3616": {
			"op": "SUB"
		},
		"3617": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7512,
				7552
			],
			"op": "AND",
			"path": "2"
		},
		"3618": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7530,
				7537
			],
			"op": "DUP2",
			"path": "2"
		},
		"3619": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3621": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3623": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"3625": {
			"op": "SHL"
		},
		"3626": {
			"op": "SUB"
		},
		"3627": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7512,
				7552
			],
			"op": "AND",
			"path": "2"
		},
		"3628": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7524,
				7528
			],
			"op": "DUP4",
			"path": "2"
		},
		"3629": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7512,
				7552
			],
			"op": "PUSH32",
			"path": "2",
			"value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
		},
		"3662": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7512,
				7552
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"3664": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7512,
				7552
			],
			"op": "MLOAD",
			"path": "2"
		},
		"3665": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7512,
				7552
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"3667": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7512,
				7552
			],
			"op": "MLOAD",
			"path": "2"
		},
		"3668": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7512,
				7552
			],
			"op": "DUP1",
			"path": "2"
		},
		"3669": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7512,
				7552
			],
			"op": "SWAP2",
			"path": "2"
		},
		"3670": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7512,
				7552
			],
			"op": "SUB",
			"path": "2"
		},
		"3671": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7512,
				7552
			],
			"op": "SWAP1",
			"path": "2"
		},
		"3672": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7512,
				7552
			],
			"op": "LOG4",
			"path": "2"
		},
		"3673": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7385,
				7569
			],
			"op": "POP",
			"path": "2"
		},
		"3674": {
			"fn": "AccessControlUpgradeable._grantRole",
			"offset": [
				7385,
				7569
			],
			"op": "POP",
			"path": "2"
		},
		"3675": {
			"fn": "AccessControlUpgradeable._grantRole",
			"jump": "o",
			"offset": [
				7385,
				7569
			],
			"op": "JUMP",
			"path": "2"
		},
		"3676": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7575,
				7763
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"3677": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7649,
				7661
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x0"
		},
		"3679": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7649,
				7661
			],
			"op": "DUP3",
			"path": "2"
		},
		"3680": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7649,
				7661
			],
			"op": "DUP2",
			"path": "2"
		},
		"3681": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7649,
				7661
			],
			"op": "MSTORE",
			"path": "2"
		},
		"3682": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7649,
				7655
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x33"
		},
		"3684": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7649,
				7661
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x20"
		},
		"3686": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7649,
				7661
			],
			"op": "MSTORE",
			"path": "2"
		},
		"3687": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7649,
				7661
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"3689": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7649,
				7661
			],
			"op": "SWAP1",
			"path": "2"
		},
		"3690": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7649,
				7661
			],
			"op": "KECCAK256",
			"path": "2"
		},
		"3691": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7649,
				7685
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0xE74"
		},
		"3694": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7649,
				7685
			],
			"op": "SWAP1",
			"path": "2"
		},
		"3695": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7677,
				7684
			],
			"op": "DUP3",
			"path": "2"
		},
		"3696": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7649,
				7676
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x125A"
		},
		"3699": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"jump": "i",
			"offset": [
				7649,
				7685
			],
			"op": "JUMP",
			"path": "2"
		},
		"3700": {
			"branch": 104,
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7649,
				7685
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"3701": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7645,
				7757
			],
			"op": "ISZERO",
			"path": "2"
		},
		"3702": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7645,
				7757
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x5A3"
		},
		"3705": {
			"branch": 104,
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7645,
				7757
			],
			"op": "JUMPI",
			"path": "2"
		},
		"3706": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7733,
				7745
			],
			"op": "PUSH2",
			"path": "2",
			"statement": 53,
			"value": "0xE81"
		},
		"3709": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7733,
				7743
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0xDEF"
		},
		"3712": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"jump": "i",
			"offset": [
				7733,
				7745
			],
			"op": "JUMP",
			"path": "2"
		},
		"3713": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7733,
				7745
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"3714": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3716": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3718": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"3720": {
			"op": "SHL"
		},
		"3721": {
			"op": "SUB"
		},
		"3722": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7706,
				7746
			],
			"op": "AND",
			"path": "2"
		},
		"3723": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7724,
				7731
			],
			"op": "DUP2",
			"path": "2"
		},
		"3724": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3726": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"3728": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"3730": {
			"op": "SHL"
		},
		"3731": {
			"op": "SUB"
		},
		"3732": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7706,
				7746
			],
			"op": "AND",
			"path": "2"
		},
		"3733": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7718,
				7722
			],
			"op": "DUP4",
			"path": "2"
		},
		"3734": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7706,
				7746
			],
			"op": "PUSH32",
			"path": "2",
			"value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
		},
		"3767": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7706,
				7746
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"3769": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7706,
				7746
			],
			"op": "MLOAD",
			"path": "2"
		},
		"3770": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7706,
				7746
			],
			"op": "PUSH1",
			"path": "2",
			"value": "0x40"
		},
		"3772": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7706,
				7746
			],
			"op": "MLOAD",
			"path": "2"
		},
		"3773": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7706,
				7746
			],
			"op": "DUP1",
			"path": "2"
		},
		"3774": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7706,
				7746
			],
			"op": "SWAP2",
			"path": "2"
		},
		"3775": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7706,
				7746
			],
			"op": "SUB",
			"path": "2"
		},
		"3776": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7706,
				7746
			],
			"op": "SWAP1",
			"path": "2"
		},
		"3777": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7706,
				7746
			],
			"op": "LOG4",
			"path": "2"
		},
		"3778": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7575,
				7763
			],
			"op": "POP",
			"path": "2"
		},
		"3779": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"offset": [
				7575,
				7763
			],
			"op": "POP",
			"path": "2"
		},
		"3780": {
			"fn": "AccessControlUpgradeable._revokeRole",
			"jump": "o",
			"offset": [
				7575,
				7763
			],
			"op": "JUMP",
			"path": "2"
		},
		"3781": {
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2371,
				2486
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3782": {
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2428,
				2462
			],
			"op": "PUSH2",
			"path": "0",
			"statement": 54,
			"value": "0xEEF"
		},
		"3785": {
			"offset": [
				1020,
				1046
			],
			"op": "PUSH32",
			"path": "0",
			"value": "0x55435DD261A4B9B3364963F7738A7A662AD9C84396D64BE3365284BB7F0A5041"
		},
		"3818": {
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2451,
				2461
			],
			"op": "CALLER",
			"path": "0"
		},
		"3819": {
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2428,
				2435
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x703"
		},
		"3822": {
			"fn": "BadgerTree._onlyGuardian",
			"jump": "i",
			"offset": [
				2428,
				2462
			],
			"op": "JUMP",
			"path": "0"
		},
		"3823": {
			"branch": 98,
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2428,
				2462
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3824": {
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2420,
				2479
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x613"
		},
		"3827": {
			"branch": 98,
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2420,
				2479
			],
			"op": "JUMPI",
			"path": "0"
		},
		"3828": {
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2420,
				2479
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"3830": {
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2420,
				2479
			],
			"op": "MLOAD",
			"path": "0"
		},
		"3831": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"3835": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"3837": {
			"op": "SHL"
		},
		"3838": {
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2420,
				2479
			],
			"op": "DUP2",
			"path": "0"
		},
		"3839": {
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2420,
				2479
			],
			"op": "MSTORE",
			"path": "0"
		},
		"3840": {
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2420,
				2479
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"3842": {
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2420,
				2479
			],
			"op": "ADD",
			"path": "0"
		},
		"3843": {
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2420,
				2479
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x463"
		},
		"3846": {
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2420,
				2479
			],
			"op": "SWAP1",
			"path": "0"
		},
		"3847": {
			"fn": "BadgerTree._onlyGuardian",
			"offset": [
				2420,
				2479
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1C73"
		},
		"3850": {
			"fn": "BadgerTree._onlyGuardian",
			"jump": "i",
			"offset": [
				2420,
				2479
			],
			"op": "JUMP",
			"path": "0"
		},
		"3851": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2295,
				2412
			],
			"op": "JUMPDEST",
			"path": "9"
		},
		"3852": {
			"offset": [
				1863,
				1870
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0x65"
		},
		"3854": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				1863,
				1870
			],
			"op": "SLOAD",
			"path": "9"
		},
		"3855": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				1863,
				1870
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0xFF"
		},
		"3857": {
			"branch": 112,
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				1863,
				1870
			],
			"op": "AND",
			"path": "9"
		},
		"3858": {
			"offset": [
				1855,
				1895
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0xF2D"
		},
		"3861": {
			"branch": 112,
			"offset": [
				1855,
				1895
			],
			"op": "JUMPI",
			"path": "9"
		},
		"3862": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				1855,
				1895
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0x40"
		},
		"3864": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				1855,
				1895
			],
			"op": "MLOAD",
			"path": "9"
		},
		"3865": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"3869": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"3871": {
			"op": "SHL"
		},
		"3872": {
			"offset": [
				1855,
				1895
			],
			"op": "DUP2",
			"path": "9"
		},
		"3873": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				1855,
				1895
			],
			"op": "MSTORE",
			"path": "9"
		},
		"3874": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				1855,
				1895
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0x4"
		},
		"3876": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				1855,
				1895
			],
			"op": "ADD",
			"path": "9"
		},
		"3877": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				1855,
				1895
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0x463"
		},
		"3880": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				1855,
				1895
			],
			"op": "SWAP1",
			"path": "9"
		},
		"3881": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				1855,
				1895
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0x1A15"
		},
		"3884": {
			"fn": "PausableUpgradeable._unpause",
			"jump": "i",
			"offset": [
				1855,
				1895
			],
			"op": "JUMP",
			"path": "9"
		},
		"3885": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				1855,
				1895
			],
			"op": "JUMPDEST",
			"path": "9"
		},
		"3886": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2353,
				2360
			],
			"op": "PUSH1",
			"path": "9",
			"statement": 55,
			"value": "0x65"
		},
		"3888": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2353,
				2368
			],
			"op": "DUP1",
			"path": "9"
		},
		"3889": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2353,
				2368
			],
			"op": "SLOAD",
			"path": "9"
		},
		"3890": {
			"op": "PUSH1",
			"value": "0xFF"
		},
		"3892": {
			"op": "NOT"
		},
		"3893": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2353,
				2368
			],
			"op": "AND",
			"path": "9"
		},
		"3894": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2353,
				2368
			],
			"op": "SWAP1",
			"path": "9"
		},
		"3895": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2353,
				2368
			],
			"op": "SSTORE",
			"path": "9"
		},
		"3896": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2383,
				2405
			],
			"op": "PUSH32",
			"path": "9",
			"statement": 56,
			"value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
		},
		"3929": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2392,
				2404
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0xF60"
		},
		"3932": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2392,
				2402
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0xDEF"
		},
		"3935": {
			"fn": "PausableUpgradeable._unpause",
			"jump": "i",
			"offset": [
				2392,
				2404
			],
			"op": "JUMP",
			"path": "9"
		},
		"3936": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2392,
				2404
			],
			"op": "JUMPDEST",
			"path": "9"
		},
		"3937": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2383,
				2405
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0x40"
		},
		"3939": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2383,
				2405
			],
			"op": "MLOAD",
			"path": "9"
		},
		"3940": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2383,
				2405
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0xF6D"
		},
		"3943": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2383,
				2405
			],
			"op": "SWAP2",
			"path": "9"
		},
		"3944": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2383,
				2405
			],
			"op": "SWAP1",
			"path": "9"
		},
		"3945": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2383,
				2405
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0x1862"
		},
		"3948": {
			"fn": "PausableUpgradeable._unpause",
			"jump": "i",
			"offset": [
				2383,
				2405
			],
			"op": "JUMP",
			"path": "9"
		},
		"3949": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2383,
				2405
			],
			"op": "JUMPDEST",
			"path": "9"
		},
		"3950": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2383,
				2405
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0x40"
		},
		"3952": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2383,
				2405
			],
			"op": "MLOAD",
			"path": "9"
		},
		"3953": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2383,
				2405
			],
			"op": "DUP1",
			"path": "9"
		},
		"3954": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2383,
				2405
			],
			"op": "SWAP2",
			"path": "9"
		},
		"3955": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2383,
				2405
			],
			"op": "SUB",
			"path": "9"
		},
		"3956": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2383,
				2405
			],
			"op": "SWAP1",
			"path": "9"
		},
		"3957": {
			"fn": "PausableUpgradeable._unpause",
			"offset": [
				2383,
				2405
			],
			"op": "LOG1",
			"path": "9"
		},
		"3958": {
			"fn": "PausableUpgradeable._unpause",
			"jump": "o",
			"offset": [
				2295,
				2412
			],
			"op": "JUMP",
			"path": "9"
		},
		"3959": {
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2240,
				2365
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"3960": {
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2300,
				2338
			],
			"op": "PUSH2",
			"path": "0",
			"statement": 57,
			"value": "0xFA0"
		},
		"3963": {
			"offset": [
				944,
				974
			],
			"op": "PUSH31",
			"path": "0",
			"value": "0x9AB23A1010D07A0450A1FBEA1D84169B57D2C2273B54BFF0F20C3E90199B5D"
		},
		"3995": {
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2327,
				2337
			],
			"op": "CALLER",
			"path": "0"
		},
		"3996": {
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2300,
				2307
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x703"
		},
		"3999": {
			"fn": "BadgerTree._onlyRootUpdater",
			"jump": "i",
			"offset": [
				2300,
				2338
			],
			"op": "JUMP",
			"path": "0"
		},
		"4000": {
			"branch": 99,
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2300,
				2338
			],
			"op": "JUMPDEST",
			"path": "0"
		},
		"4001": {
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2292,
				2358
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x613"
		},
		"4004": {
			"branch": 99,
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2292,
				2358
			],
			"op": "JUMPI",
			"path": "0"
		},
		"4005": {
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2292,
				2358
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x40"
		},
		"4007": {
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2292,
				2358
			],
			"op": "MLOAD",
			"path": "0"
		},
		"4008": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"4012": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"4014": {
			"op": "SHL"
		},
		"4015": {
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2292,
				2358
			],
			"op": "DUP2",
			"path": "0"
		},
		"4016": {
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2292,
				2358
			],
			"op": "MSTORE",
			"path": "0"
		},
		"4017": {
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2292,
				2358
			],
			"op": "PUSH1",
			"path": "0",
			"value": "0x4"
		},
		"4019": {
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2292,
				2358
			],
			"op": "ADD",
			"path": "0"
		},
		"4020": {
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2292,
				2358
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x463"
		},
		"4023": {
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2292,
				2358
			],
			"op": "SWAP1",
			"path": "0"
		},
		"4024": {
			"fn": "BadgerTree._onlyRootUpdater",
			"offset": [
				2292,
				2358
			],
			"op": "PUSH2",
			"path": "0",
			"value": "0x1BC3"
		},
		"4027": {
			"fn": "BadgerTree._onlyRootUpdater",
			"jump": "i",
			"offset": [
				2292,
				2358
			],
			"op": "JUMP",
			"path": "0"
		},
		"4028": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				2048,
				2163
			],
			"op": "JUMPDEST",
			"path": "9"
		},
		"4029": {
			"offset": [
				1599,
				1606
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0x65"
		},
		"4031": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				1599,
				1606
			],
			"op": "SLOAD",
			"path": "9"
		},
		"4032": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				1599,
				1606
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0xFF"
		},
		"4034": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				1599,
				1606
			],
			"op": "AND",
			"path": "9"
		},
		"4035": {
			"offset": [
				1598,
				1606
			],
			"op": "ISZERO",
			"path": "9"
		},
		"4036": {
			"offset": [
				1590,
				1627
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0xFDF"
		},
		"4039": {
			"offset": [
				1590,
				1627
			],
			"op": "JUMPI",
			"path": "9"
		},
		"4040": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				1590,
				1627
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0x40"
		},
		"4042": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				1590,
				1627
			],
			"op": "MLOAD",
			"path": "9"
		},
		"4043": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"4047": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"4049": {
			"op": "SHL"
		},
		"4050": {
			"offset": [
				1590,
				1627
			],
			"op": "DUP2",
			"path": "9"
		},
		"4051": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				1590,
				1627
			],
			"op": "MSTORE",
			"path": "9"
		},
		"4052": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				1590,
				1627
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0x4"
		},
		"4054": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				1590,
				1627
			],
			"op": "ADD",
			"path": "9"
		},
		"4055": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				1590,
				1627
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0x463"
		},
		"4058": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				1590,
				1627
			],
			"op": "SWAP1",
			"path": "9"
		},
		"4059": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				1590,
				1627
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0x1B1B"
		},
		"4062": {
			"fn": "PausableUpgradeable._pause",
			"jump": "i",
			"offset": [
				1590,
				1627
			],
			"op": "JUMP",
			"path": "9"
		},
		"4063": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				1590,
				1627
			],
			"op": "JUMPDEST",
			"path": "9"
		},
		"4064": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				2107,
				2114
			],
			"op": "PUSH1",
			"path": "9",
			"statement": 58,
			"value": "0x65"
		},
		"4066": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				2107,
				2121
			],
			"op": "DUP1",
			"path": "9"
		},
		"4067": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				2107,
				2121
			],
			"op": "SLOAD",
			"path": "9"
		},
		"4068": {
			"op": "PUSH1",
			"value": "0xFF"
		},
		"4070": {
			"op": "NOT"
		},
		"4071": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				2107,
				2121
			],
			"op": "AND",
			"path": "9"
		},
		"4072": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				2117,
				2121
			],
			"op": "PUSH1",
			"path": "9",
			"value": "0x1"
		},
		"4074": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				2107,
				2121
			],
			"op": "OR",
			"path": "9"
		},
		"4075": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				2107,
				2121
			],
			"op": "SWAP1",
			"path": "9"
		},
		"4076": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				2107,
				2121
			],
			"op": "SSTORE",
			"path": "9"
		},
		"4077": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				2136,
				2156
			],
			"op": "PUSH32",
			"path": "9",
			"statement": 59,
			"value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
		},
		"4110": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				2143,
				2155
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0xF60"
		},
		"4113": {
			"fn": "PausableUpgradeable._pause",
			"offset": [
				2143,
				2153
			],
			"op": "PUSH2",
			"path": "9",
			"value": "0xDEF"
		},
		"4116": {
			"fn": "PausableUpgradeable._pause",
			"jump": "i",
			"offset": [
				2143,
				2155
			],
			"op": "JUMP",
			"path": "9"
		},
		"4117": {
			"fn": "EnumerableSetUpgradeable.at",
			"offset": [
				6096,
				6243
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"4118": {
			"fn": "EnumerableSetUpgradeable.at",
			"offset": [
				6170,
				6177
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"4120": {
			"fn": "EnumerableSetUpgradeable.at",
			"offset": [
				6212,
				6234
			],
			"op": "PUSH2",
			"path": "8",
			"statement": 60,
			"value": "0x6FA"
		},
		"4123": {
			"fn": "EnumerableSetUpgradeable.at",
			"offset": [
				6216,
				6219
			],
			"op": "DUP4",
			"path": "8"
		},
		"4124": {
			"fn": "EnumerableSetUpgradeable.at",
			"offset": [
				6228,
				6233
			],
			"op": "DUP4",
			"path": "8"
		},
		"4125": {
			"fn": "EnumerableSetUpgradeable.at",
			"offset": [
				6212,
				6215
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x126F"
		},
		"4128": {
			"fn": "EnumerableSetUpgradeable.at",
			"jump": "i",
			"offset": [
				6212,
				6234
			],
			"op": "JUMP",
			"path": "8"
		},
		"4129": {
			"fn": "EnumerableSetUpgradeable.contains",
			"offset": [
				5412,
				5568
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"4130": {
			"fn": "EnumerableSetUpgradeable.contains",
			"offset": [
				5492,
				5496
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"4132": {
			"fn": "EnumerableSetUpgradeable.contains",
			"offset": [
				5515,
				5561
			],
			"op": "PUSH2",
			"path": "8",
			"statement": 61,
			"value": "0x6FA"
		},
		"4135": {
			"fn": "EnumerableSetUpgradeable.contains",
			"offset": [
				5525,
				5528
			],
			"op": "DUP4",
			"path": "8"
		},
		"4136": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"4138": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"4140": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"4142": {
			"op": "SHL"
		},
		"4143": {
			"op": "SUB"
		},
		"4144": {
			"fn": "EnumerableSetUpgradeable.contains",
			"offset": [
				5545,
				5559
			],
			"op": "DUP5",
			"path": "8"
		},
		"4145": {
			"fn": "EnumerableSetUpgradeable.contains",
			"offset": [
				5545,
				5559
			],
			"op": "AND",
			"path": "8"
		},
		"4146": {
			"fn": "EnumerableSetUpgradeable.contains",
			"offset": [
				5515,
				5524
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x12B4"
		},
		"4149": {
			"fn": "EnumerableSetUpgradeable.contains",
			"jump": "i",
			"offset": [
				5515,
				5561
			],
			"op": "JUMP",
			"path": "8"
		},
		"4150": {
			"fn": "Initializable._isConstructor",
			"offset": [
				1866,
				2459
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"4151": {
			"fn": "Initializable._isConstructor",
			"offset": [
				2302,
				2306
			],
			"op": "ADDRESS",
			"path": "5"
		},
		"4152": {
			"fn": "Initializable._isConstructor",
			"offset": [
				2410,
				2427
			],
			"op": "EXTCODESIZE",
			"path": "5"
		},
		"4153": {
			"fn": "Initializable._isConstructor",
			"offset": [
				2445,
				2452
			],
			"op": "ISZERO",
			"path": "5",
			"statement": 62
		},
		"4154": {
			"fn": "Initializable._isConstructor",
			"offset": [
				1866,
				2459
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4155": {
			"fn": "Initializable._isConstructor",
			"jump": "o",
			"offset": [
				1866,
				2459
			],
			"op": "JUMP",
			"path": "5"
		},
		"4156": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1589,
				1727
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"4157": {
			"offset": [
				1426,
				1439
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"4159": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1426,
				1439
			],
			"op": "SLOAD",
			"path": "5"
		},
		"4160": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1426,
				1439
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x100"
		},
		"4163": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1426,
				1439
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4164": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1426,
				1439
			],
			"op": "DIV",
			"path": "5"
		},
		"4165": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1426,
				1439
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0xFF"
		},
		"4167": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1426,
				1439
			],
			"op": "AND",
			"path": "5"
		},
		"4168": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1426,
				1439
			],
			"op": "DUP1",
			"path": "5"
		},
		"4169": {
			"offset": [
				1426,
				1459
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x1055"
		},
		"4172": {
			"offset": [
				1426,
				1459
			],
			"op": "JUMPI",
			"path": "5"
		},
		"4173": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1426,
				1459
			],
			"op": "POP",
			"path": "5"
		},
		"4174": {
			"offset": [
				1443,
				1459
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x1055"
		},
		"4177": {
			"offset": [
				1443,
				1457
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x1036"
		},
		"4180": {
			"jump": "i",
			"offset": [
				1443,
				1459
			],
			"op": "JUMP",
			"path": "5"
		},
		"4181": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1443,
				1459
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"4182": {
			"offset": [
				1426,
				1476
			],
			"op": "DUP1",
			"path": "5"
		},
		"4183": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1426,
				1476
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x1063"
		},
		"4186": {
			"offset": [
				1426,
				1476
			],
			"op": "JUMPI",
			"path": "5"
		},
		"4187": {
			"op": "POP"
		},
		"4188": {
			"offset": [
				1464,
				1476
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"4190": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1464,
				1476
			],
			"op": "SLOAD",
			"path": "5"
		},
		"4191": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1464,
				1476
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0xFF"
		},
		"4193": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1464,
				1476
			],
			"op": "AND",
			"path": "5"
		},
		"4194": {
			"offset": [
				1463,
				1476
			],
			"op": "ISZERO",
			"path": "5"
		},
		"4195": {
			"offset": [
				1426,
				1476
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"4196": {
			"offset": [
				1418,
				1527
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x107F"
		},
		"4199": {
			"offset": [
				1418,
				1527
			],
			"op": "JUMPI",
			"path": "5"
		},
		"4200": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x40"
		},
		"4202": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1418,
				1527
			],
			"op": "MLOAD",
			"path": "5"
		},
		"4203": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"4207": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"4209": {
			"op": "SHL"
		},
		"4210": {
			"offset": [
				1418,
				1527
			],
			"op": "DUP2",
			"path": "5"
		},
		"4211": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1418,
				1527
			],
			"op": "MSTORE",
			"path": "5"
		},
		"4212": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x4"
		},
		"4214": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1418,
				1527
			],
			"op": "ADD",
			"path": "5"
		},
		"4215": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x463"
		},
		"4218": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1418,
				1527
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4219": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x1B75"
		},
		"4222": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"jump": "i",
			"offset": [
				1418,
				1527
			],
			"op": "JUMP",
			"path": "5"
		},
		"4223": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1418,
				1527
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"4224": {
			"offset": [
				1538,
				1557
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"4226": {
			"offset": [
				1561,
				1574
			],
			"op": "SLOAD",
			"path": "5"
		},
		"4227": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1561,
				1574
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x100"
		},
		"4230": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1561,
				1574
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4231": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1561,
				1574
			],
			"op": "DIV",
			"path": "5"
		},
		"4232": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1561,
				1574
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0xFF"
		},
		"4234": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1561,
				1574
			],
			"op": "AND",
			"path": "5"
		},
		"4235": {
			"offset": [
				1560,
				1574
			],
			"op": "ISZERO",
			"path": "5"
		},
		"4236": {
			"offset": [
				1584,
				1682
			],
			"op": "DUP1",
			"path": "5"
		},
		"4237": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1584,
				1682
			],
			"op": "ISZERO",
			"path": "5"
		},
		"4238": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1584,
				1682
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x10AA"
		},
		"4241": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1584,
				1682
			],
			"op": "JUMPI",
			"path": "5"
		},
		"4242": {
			"offset": [
				1618,
				1631
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"4244": {
			"offset": [
				1618,
				1638
			],
			"op": "DUP1",
			"path": "5"
		},
		"4245": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1618,
				1638
			],
			"op": "SLOAD",
			"path": "5"
		},
		"4246": {
			"op": "PUSH1",
			"value": "0xFF"
		},
		"4248": {
			"op": "NOT"
		},
		"4249": {
			"op": "PUSH2",
			"value": "0xFF00"
		},
		"4252": {
			"op": "NOT"
		},
		"4253": {
			"offset": [
				1618,
				1638
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4254": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1618,
				1638
			],
			"op": "SWAP2",
			"path": "5"
		},
		"4255": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1618,
				1638
			],
			"op": "AND",
			"path": "5"
		},
		"4256": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1618,
				1638
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x100"
		},
		"4259": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1618,
				1638
			],
			"op": "OR",
			"path": "5"
		},
		"4260": {
			"offset": [
				1652,
				1671
			],
			"op": "AND",
			"path": "5"
		},
		"4261": {
			"offset": [
				1634,
				1638
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x1"
		},
		"4263": {
			"offset": [
				1652,
				1671
			],
			"op": "OR",
			"path": "5"
		},
		"4264": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1652,
				1671
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4265": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1652,
				1671
			],
			"op": "SSTORE",
			"path": "5"
		},
		"4266": {
			"offset": [
				1584,
				1682
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"4267": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1652,
				1678
			],
			"op": "PUSH2",
			"path": "2",
			"statement": 63,
			"value": "0x10B2"
		},
		"4270": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1652,
				1676
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x12CC"
		},
		"4273": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"jump": "i",
			"offset": [
				1652,
				1678
			],
			"op": "JUMP",
			"path": "2"
		},
		"4274": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1652,
				1678
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"4275": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1688,
				1720
			],
			"op": "PUSH2",
			"path": "2",
			"statement": 64,
			"value": "0x10BA"
		},
		"4278": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1688,
				1718
			],
			"op": "PUSH2",
			"path": "2",
			"value": "0x12CC"
		},
		"4281": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"jump": "i",
			"offset": [
				1688,
				1720
			],
			"op": "JUMP",
			"path": "2"
		},
		"4282": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1688,
				1720
			],
			"op": "JUMPDEST",
			"path": "2"
		},
		"4283": {
			"offset": [
				1708,
				1722
			],
			"op": "DUP1",
			"path": "5"
		},
		"4284": {
			"offset": [
				1704,
				1770
			],
			"op": "ISZERO",
			"path": "5"
		},
		"4285": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1704,
				1770
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x10CC"
		},
		"4288": {
			"offset": [
				1704,
				1770
			],
			"op": "JUMPI",
			"path": "5"
		},
		"4289": {
			"offset": [
				1754,
				1759
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"4291": {
			"offset": [
				1738,
				1759
			],
			"op": "DUP1",
			"path": "5"
		},
		"4292": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1738,
				1759
			],
			"op": "SLOAD",
			"path": "5"
		},
		"4293": {
			"op": "PUSH2",
			"value": "0xFF00"
		},
		"4296": {
			"op": "NOT"
		},
		"4297": {
			"offset": [
				1738,
				1759
			],
			"op": "AND",
			"path": "5"
		},
		"4298": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1738,
				1759
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4299": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1738,
				1759
			],
			"op": "SSTORE",
			"path": "5"
		},
		"4300": {
			"offset": [
				1704,
				1770
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"4301": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"offset": [
				1589,
				1727
			],
			"op": "POP",
			"path": "2"
		},
		"4302": {
			"fn": "AccessControlUpgradeable.__AccessControl_init",
			"jump": "o",
			"offset": [
				1589,
				1727
			],
			"op": "JUMP",
			"path": "2"
		},
		"4303": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1108,
				1198
			],
			"op": "JUMPDEST",
			"path": "9"
		},
		"4304": {
			"offset": [
				1426,
				1439
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"4306": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1426,
				1439
			],
			"op": "SLOAD",
			"path": "5"
		},
		"4307": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1426,
				1439
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x100"
		},
		"4310": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1426,
				1439
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4311": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1426,
				1439
			],
			"op": "DIV",
			"path": "5"
		},
		"4312": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1426,
				1439
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0xFF"
		},
		"4314": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1426,
				1439
			],
			"op": "AND",
			"path": "5"
		},
		"4315": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1426,
				1439
			],
			"op": "DUP1",
			"path": "5"
		},
		"4316": {
			"offset": [
				1426,
				1459
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x10E8"
		},
		"4319": {
			"offset": [
				1426,
				1459
			],
			"op": "JUMPI",
			"path": "5"
		},
		"4320": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1426,
				1459
			],
			"op": "POP",
			"path": "5"
		},
		"4321": {
			"offset": [
				1443,
				1459
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x10E8"
		},
		"4324": {
			"offset": [
				1443,
				1457
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x1036"
		},
		"4327": {
			"jump": "i",
			"offset": [
				1443,
				1459
			],
			"op": "JUMP",
			"path": "5"
		},
		"4328": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1443,
				1459
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"4329": {
			"offset": [
				1426,
				1476
			],
			"op": "DUP1",
			"path": "5"
		},
		"4330": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1426,
				1476
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x10F6"
		},
		"4333": {
			"offset": [
				1426,
				1476
			],
			"op": "JUMPI",
			"path": "5"
		},
		"4334": {
			"op": "POP"
		},
		"4335": {
			"offset": [
				1464,
				1476
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"4337": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1464,
				1476
			],
			"op": "SLOAD",
			"path": "5"
		},
		"4338": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1464,
				1476
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0xFF"
		},
		"4340": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1464,
				1476
			],
			"op": "AND",
			"path": "5"
		},
		"4341": {
			"offset": [
				1463,
				1476
			],
			"op": "ISZERO",
			"path": "5"
		},
		"4342": {
			"offset": [
				1426,
				1476
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"4343": {
			"offset": [
				1418,
				1527
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x1112"
		},
		"4346": {
			"offset": [
				1418,
				1527
			],
			"op": "JUMPI",
			"path": "5"
		},
		"4347": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x40"
		},
		"4349": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "MLOAD",
			"path": "5"
		},
		"4350": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"4354": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"4356": {
			"op": "SHL"
		},
		"4357": {
			"offset": [
				1418,
				1527
			],
			"op": "DUP2",
			"path": "5"
		},
		"4358": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "MSTORE",
			"path": "5"
		},
		"4359": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x4"
		},
		"4361": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "ADD",
			"path": "5"
		},
		"4362": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x463"
		},
		"4365": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4366": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x1B75"
		},
		"4369": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"jump": "i",
			"offset": [
				1418,
				1527
			],
			"op": "JUMP",
			"path": "5"
		},
		"4370": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"4371": {
			"offset": [
				1538,
				1557
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"4373": {
			"offset": [
				1561,
				1574
			],
			"op": "SLOAD",
			"path": "5"
		},
		"4374": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1561,
				1574
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x100"
		},
		"4377": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1561,
				1574
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4378": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1561,
				1574
			],
			"op": "DIV",
			"path": "5"
		},
		"4379": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1561,
				1574
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0xFF"
		},
		"4381": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1561,
				1574
			],
			"op": "AND",
			"path": "5"
		},
		"4382": {
			"offset": [
				1560,
				1574
			],
			"op": "ISZERO",
			"path": "5"
		},
		"4383": {
			"offset": [
				1584,
				1682
			],
			"op": "DUP1",
			"path": "5"
		},
		"4384": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1584,
				1682
			],
			"op": "ISZERO",
			"path": "5"
		},
		"4385": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1584,
				1682
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x113D"
		},
		"4388": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1584,
				1682
			],
			"op": "JUMPI",
			"path": "5"
		},
		"4389": {
			"offset": [
				1618,
				1631
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"4391": {
			"offset": [
				1618,
				1638
			],
			"op": "DUP1",
			"path": "5"
		},
		"4392": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1618,
				1638
			],
			"op": "SLOAD",
			"path": "5"
		},
		"4393": {
			"op": "PUSH1",
			"value": "0xFF"
		},
		"4395": {
			"op": "NOT"
		},
		"4396": {
			"op": "PUSH2",
			"value": "0xFF00"
		},
		"4399": {
			"op": "NOT"
		},
		"4400": {
			"offset": [
				1618,
				1638
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4401": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1618,
				1638
			],
			"op": "SWAP2",
			"path": "5"
		},
		"4402": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1618,
				1638
			],
			"op": "AND",
			"path": "5"
		},
		"4403": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1618,
				1638
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x100"
		},
		"4406": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1618,
				1638
			],
			"op": "OR",
			"path": "5"
		},
		"4407": {
			"offset": [
				1652,
				1671
			],
			"op": "AND",
			"path": "5"
		},
		"4408": {
			"offset": [
				1634,
				1638
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x1"
		},
		"4410": {
			"offset": [
				1652,
				1671
			],
			"op": "OR",
			"path": "5"
		},
		"4411": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1652,
				1671
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4412": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1652,
				1671
			],
			"op": "SSTORE",
			"path": "5"
		},
		"4413": {
			"offset": [
				1584,
				1682
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"4414": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1176,
				1183
			],
			"op": "PUSH1",
			"path": "9",
			"statement": 65,
			"value": "0x65"
		},
		"4416": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1176,
				1191
			],
			"op": "DUP1",
			"path": "9"
		},
		"4417": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1176,
				1191
			],
			"op": "SLOAD",
			"path": "9"
		},
		"4418": {
			"op": "PUSH1",
			"value": "0xFF"
		},
		"4420": {
			"op": "NOT"
		},
		"4421": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1176,
				1191
			],
			"op": "AND",
			"path": "9"
		},
		"4422": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1176,
				1191
			],
			"op": "SWAP1",
			"path": "9"
		},
		"4423": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1176,
				1191
			],
			"op": "SSTORE",
			"path": "9"
		},
		"4424": {
			"offset": [
				1704,
				1770
			],
			"op": "DUP1",
			"path": "5"
		},
		"4425": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1704,
				1770
			],
			"op": "ISZERO",
			"path": "5"
		},
		"4426": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1704,
				1770
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x10CC"
		},
		"4429": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1704,
				1770
			],
			"op": "JUMPI",
			"path": "5"
		},
		"4430": {
			"offset": [
				1754,
				1759
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"4432": {
			"offset": [
				1738,
				1759
			],
			"op": "DUP1",
			"path": "5"
		},
		"4433": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1738,
				1759
			],
			"op": "SLOAD",
			"path": "5"
		},
		"4434": {
			"op": "PUSH2",
			"value": "0xFF00"
		},
		"4437": {
			"op": "NOT"
		},
		"4438": {
			"offset": [
				1738,
				1759
			],
			"op": "AND",
			"path": "5"
		},
		"4439": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1738,
				1759
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4440": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1738,
				1759
			],
			"op": "SSTORE",
			"path": "5"
		},
		"4441": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"offset": [
				1108,
				1198
			],
			"op": "POP",
			"path": "9"
		},
		"4442": {
			"fn": "PausableUpgradeable.__Pausable_init_unchained",
			"jump": "o",
			"offset": [
				1108,
				1198
			],
			"op": "JUMP",
			"path": "9"
		},
		"4443": {
			"fn": "EnumerableSetUpgradeable.length",
			"offset": [
				5649,
				5764
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"4444": {
			"fn": "EnumerableSetUpgradeable.length",
			"offset": [
				5712,
				5719
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"4446": {
			"fn": "EnumerableSetUpgradeable.length",
			"offset": [
				5738,
				5757
			],
			"op": "PUSH2",
			"path": "8",
			"statement": 66,
			"value": "0x6FD"
		},
		"4449": {
			"fn": "EnumerableSetUpgradeable.length",
			"offset": [
				5746,
				5749
			],
			"op": "DUP3",
			"path": "8"
		},
		"4450": {
			"fn": "EnumerableSetUpgradeable.length",
			"offset": [
				5738,
				5745
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x134D"
		},
		"4453": {
			"fn": "EnumerableSetUpgradeable.length",
			"jump": "i",
			"offset": [
				5738,
				5757
			],
			"op": "JUMP",
			"path": "8"
		},
		"4454": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				508,
				1287
			],
			"op": "JUMPDEST",
			"path": "3"
		},
		"4455": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				599,
				603
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x0"
		},
		"4457": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				638,
				642
			],
			"op": "DUP2",
			"path": "3"
		},
		"4458": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				599,
				603
			],
			"op": "DUP2",
			"path": "3"
		},
		"4459": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				653,
				1168
			],
			"op": "JUMPDEST",
			"path": "3"
		},
		"4460": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				677,
				682
			],
			"op": "DUP6",
			"path": "3"
		},
		"4461": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				677,
				689
			],
			"op": "MLOAD",
			"path": "3"
		},
		"4462": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				673,
				674
			],
			"op": "DUP2",
			"path": "3"
		},
		"4463": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				673,
				689
			],
			"op": "LT",
			"path": "3"
		},
		"4464": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				653,
				1168
			],
			"op": "ISZERO",
			"path": "3"
		},
		"4465": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				653,
				1168
			],
			"op": "PUSH2",
			"path": "3",
			"value": "0x11F8"
		},
		"4468": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				653,
				1168
			],
			"op": "JUMPI",
			"path": "3"
		},
		"4469": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				710,
				730
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x0"
		},
		"4471": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				733,
				738
			],
			"op": "DUP7",
			"path": "3"
		},
		"4472": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				739,
				740
			],
			"op": "DUP3",
			"path": "3"
		},
		"4473": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				733,
				741
			],
			"op": "DUP2",
			"path": "3"
		},
		"4474": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				733,
				741
			],
			"op": "MLOAD",
			"path": "3"
		},
		"4475": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				733,
				741
			],
			"op": "DUP2",
			"path": "3"
		},
		"4476": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				733,
				741
			],
			"op": "LT",
			"path": "3"
		},
		"4477": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				733,
				741
			],
			"op": "PUSH2",
			"path": "3",
			"value": "0x1182"
		},
		"4480": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				733,
				741
			],
			"op": "JUMPI",
			"path": "3"
		},
		"4481": {
			"dev": "Index out of range",
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				733,
				741
			],
			"op": "INVALID",
			"path": "3"
		},
		"4482": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				733,
				741
			],
			"op": "JUMPDEST",
			"path": "3"
		},
		"4483": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				733,
				741
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x20"
		},
		"4485": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				733,
				741
			],
			"op": "MUL",
			"path": "3"
		},
		"4486": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				733,
				741
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x20"
		},
		"4488": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				733,
				741
			],
			"op": "ADD",
			"path": "3"
		},
		"4489": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				733,
				741
			],
			"op": "ADD",
			"path": "3"
		},
		"4490": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				733,
				741
			],
			"op": "MLOAD",
			"path": "3"
		},
		"4491": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				710,
				741
			],
			"op": "SWAP1",
			"path": "3"
		},
		"4492": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				710,
				741
			],
			"op": "POP",
			"path": "3"
		},
		"4493": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				776,
				788
			],
			"op": "DUP1",
			"path": "3"
		},
		"4494": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				760,
				772
			],
			"op": "DUP4",
			"path": "3"
		},
		"4495": {
			"branch": 111,
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				760,
				788
			],
			"op": "GT",
			"path": "3"
		},
		"4496": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				756,
				1158
			],
			"op": "PUSH2",
			"path": "3",
			"value": "0x11C3"
		},
		"4499": {
			"branch": 111,
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				756,
				1158
			],
			"op": "JUMPI",
			"path": "3"
		},
		"4500": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				928,
				940
			],
			"op": "DUP3",
			"path": "3",
			"statement": 67
		},
		"4501": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				942,
				954
			],
			"op": "DUP2",
			"path": "3"
		},
		"4502": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x40"
		},
		"4504": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "MLOAD",
			"path": "3"
		},
		"4505": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x20"
		},
		"4507": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "ADD",
			"path": "3"
		},
		"4508": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "PUSH2",
			"path": "3",
			"value": "0x11A6"
		},
		"4511": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "SWAP3",
			"path": "3"
		},
		"4512": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "SWAP2",
			"path": "3"
		},
		"4513": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "SWAP1",
			"path": "3"
		},
		"4514": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "PUSH2",
			"path": "3",
			"value": "0x17CE"
		},
		"4517": {
			"fn": "MerkleProofUpgradeable.verify",
			"jump": "i",
			"offset": [
				911,
				955
			],
			"op": "JUMP",
			"path": "3"
		},
		"4518": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "JUMPDEST",
			"path": "3"
		},
		"4519": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x40"
		},
		"4521": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "MLOAD",
			"path": "3"
		},
		"4522": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x20"
		},
		"4524": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "DUP2",
			"path": "3"
		},
		"4525": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "DUP4",
			"path": "3"
		},
		"4526": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "SUB",
			"path": "3"
		},
		"4527": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "SUB",
			"path": "3"
		},
		"4528": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "DUP2",
			"path": "3"
		},
		"4529": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "MSTORE",
			"path": "3"
		},
		"4530": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "SWAP1",
			"path": "3"
		},
		"4531": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x40"
		},
		"4533": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				911,
				955
			],
			"op": "MSTORE",
			"path": "3"
		},
		"4534": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				901,
				956
			],
			"op": "DUP1",
			"path": "3"
		},
		"4535": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				901,
				956
			],
			"op": "MLOAD",
			"path": "3"
		},
		"4536": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				901,
				956
			],
			"op": "SWAP1",
			"path": "3"
		},
		"4537": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				901,
				956
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x20"
		},
		"4539": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				901,
				956
			],
			"op": "ADD",
			"path": "3"
		},
		"4540": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				901,
				956
			],
			"op": "KECCAK256",
			"path": "3"
		},
		"4541": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				886,
				956
			],
			"op": "SWAP3",
			"path": "3"
		},
		"4542": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				886,
				956
			],
			"op": "POP",
			"path": "3"
		},
		"4543": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				756,
				1158
			],
			"op": "PUSH2",
			"path": "3",
			"value": "0x11EF"
		},
		"4546": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				756,
				1158
			],
			"op": "JUMP",
			"path": "3"
		},
		"4547": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				756,
				1158
			],
			"op": "JUMPDEST",
			"path": "3"
		},
		"4548": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1115,
				1127
			],
			"op": "DUP1",
			"path": "3",
			"statement": 68
		},
		"4549": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1129,
				1141
			],
			"op": "DUP4",
			"path": "3"
		},
		"4550": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x40"
		},
		"4552": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "MLOAD",
			"path": "3"
		},
		"4553": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x20"
		},
		"4555": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "ADD",
			"path": "3"
		},
		"4556": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "PUSH2",
			"path": "3",
			"value": "0x11D6"
		},
		"4559": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "SWAP3",
			"path": "3"
		},
		"4560": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "SWAP2",
			"path": "3"
		},
		"4561": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "SWAP1",
			"path": "3"
		},
		"4562": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "PUSH2",
			"path": "3",
			"value": "0x17CE"
		},
		"4565": {
			"fn": "MerkleProofUpgradeable.verify",
			"jump": "i",
			"offset": [
				1098,
				1142
			],
			"op": "JUMP",
			"path": "3"
		},
		"4566": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "JUMPDEST",
			"path": "3"
		},
		"4567": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x40"
		},
		"4569": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "MLOAD",
			"path": "3"
		},
		"4570": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x20"
		},
		"4572": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "DUP2",
			"path": "3"
		},
		"4573": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "DUP4",
			"path": "3"
		},
		"4574": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "SUB",
			"path": "3"
		},
		"4575": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "SUB",
			"path": "3"
		},
		"4576": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "DUP2",
			"path": "3"
		},
		"4577": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "MSTORE",
			"path": "3"
		},
		"4578": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "SWAP1",
			"path": "3"
		},
		"4579": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x40"
		},
		"4581": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1098,
				1142
			],
			"op": "MSTORE",
			"path": "3"
		},
		"4582": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1088,
				1143
			],
			"op": "DUP1",
			"path": "3"
		},
		"4583": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1088,
				1143
			],
			"op": "MLOAD",
			"path": "3"
		},
		"4584": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1088,
				1143
			],
			"op": "SWAP1",
			"path": "3"
		},
		"4585": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1088,
				1143
			],
			"op": "PUSH1",
			"path": "3",
			"value": "0x20"
		},
		"4587": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1088,
				1143
			],
			"op": "ADD",
			"path": "3"
		},
		"4588": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1088,
				1143
			],
			"op": "KECCAK256",
			"path": "3"
		},
		"4589": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1073,
				1143
			],
			"op": "SWAP3",
			"path": "3"
		},
		"4590": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1073,
				1143
			],
			"op": "POP",
			"path": "3"
		},
		"4591": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				756,
				1158
			],
			"op": "JUMPDEST",
			"path": "3"
		},
		"4592": {
			"op": "POP"
		},
		"4593": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				691,
				694
			],
			"op": "PUSH1",
			"path": "3",
			"statement": 69,
			"value": "0x1"
		},
		"4595": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				691,
				694
			],
			"op": "ADD",
			"path": "3"
		},
		"4596": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				653,
				1168
			],
			"op": "PUSH2",
			"path": "3",
			"value": "0x116B"
		},
		"4599": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				653,
				1168
			],
			"op": "JUMP",
			"path": "3"
		},
		"4600": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				653,
				1168
			],
			"op": "JUMPDEST",
			"path": "3"
		},
		"4601": {
			"op": "POP"
		},
		"4602": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1260,
				1280
			],
			"op": "SWAP1",
			"path": "3",
			"statement": 70
		},
		"4603": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1260,
				1280
			],
			"op": "SWAP3",
			"path": "3"
		},
		"4604": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1260,
				1280
			],
			"op": "EQ",
			"path": "3"
		},
		"4605": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				1260,
				1280
			],
			"op": "SWAP4",
			"path": "3"
		},
		"4606": {
			"fn": "MerkleProofUpgradeable.verify",
			"offset": [
				508,
				1287
			],
			"op": "SWAP3",
			"path": "3"
		},
		"4607": {
			"op": "POP"
		},
		"4608": {
			"op": "POP"
		},
		"4609": {
			"op": "POP"
		},
		"4610": {
			"fn": "MerkleProofUpgradeable.verify",
			"jump": "o",
			"offset": [
				508,
				1287
			],
			"op": "JUMP",
			"path": "3"
		},
		"4611": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1332,
				1466
			],
			"op": "JUMPDEST",
			"path": "4"
		},
		"4612": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1390,
				1397
			],
			"op": "PUSH1",
			"path": "4",
			"value": "0x0"
		},
		"4614": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "PUSH2",
			"path": "4",
			"statement": 71,
			"value": "0x6FA"
		},
		"4617": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1420,
				1421
			],
			"op": "DUP4",
			"path": "4"
		},
		"4618": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1423,
				1424
			],
			"op": "DUP4",
			"path": "4"
		},
		"4619": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "PUSH1",
			"path": "4",
			"value": "0x40"
		},
		"4621": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "MLOAD",
			"path": "4"
		},
		"4622": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "DUP1",
			"path": "4"
		},
		"4623": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "PUSH1",
			"path": "4",
			"value": "0x40"
		},
		"4625": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "ADD",
			"path": "4"
		},
		"4626": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "PUSH1",
			"path": "4",
			"value": "0x40"
		},
		"4628": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "MSTORE",
			"path": "4"
		},
		"4629": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "DUP1",
			"path": "4"
		},
		"4630": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "PUSH1",
			"path": "4",
			"value": "0x1E"
		},
		"4632": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "DUP2",
			"path": "4"
		},
		"4633": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "MSTORE",
			"path": "4"
		},
		"4634": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "PUSH1",
			"path": "4",
			"value": "0x20"
		},
		"4636": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "ADD",
			"path": "4"
		},
		"4637": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "PUSH32",
			"path": "4",
			"value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
		},
		"4670": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "DUP2",
			"path": "4"
		},
		"4671": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "MSTORE",
			"path": "4"
		},
		"4672": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1459
			],
			"op": "POP",
			"path": "4"
		},
		"4673": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1416,
				1419
			],
			"op": "PUSH2",
			"path": "4",
			"value": "0x1351"
		},
		"4676": {
			"fn": "SafeMathUpgradeable.sub",
			"jump": "i",
			"offset": [
				1416,
				1459
			],
			"op": "JUMP",
			"path": "4"
		},
		"4677": {
			"fn": "EnumerableSetUpgradeable.add",
			"offset": [
				4875,
				5016
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"4678": {
			"fn": "EnumerableSetUpgradeable.add",
			"offset": [
				4945,
				4949
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"4680": {
			"fn": "EnumerableSetUpgradeable.add",
			"offset": [
				4968,
				5009
			],
			"op": "PUSH2",
			"path": "8",
			"statement": 72,
			"value": "0x6FA"
		},
		"4683": {
			"fn": "EnumerableSetUpgradeable.add",
			"offset": [
				4973,
				4976
			],
			"op": "DUP4",
			"path": "8"
		},
		"4684": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"4686": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"4688": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"4690": {
			"op": "SHL"
		},
		"4691": {
			"op": "SUB"
		},
		"4692": {
			"fn": "EnumerableSetUpgradeable.add",
			"offset": [
				4993,
				5007
			],
			"op": "DUP5",
			"path": "8"
		},
		"4693": {
			"fn": "EnumerableSetUpgradeable.add",
			"offset": [
				4993,
				5007
			],
			"op": "AND",
			"path": "8"
		},
		"4694": {
			"fn": "EnumerableSetUpgradeable.add",
			"offset": [
				4968,
				4972
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x137D"
		},
		"4697": {
			"fn": "EnumerableSetUpgradeable.add",
			"jump": "i",
			"offset": [
				4968,
				5009
			],
			"op": "JUMP",
			"path": "8"
		},
		"4698": {
			"fn": "EnumerableSetUpgradeable.remove",
			"offset": [
				5184,
				5331
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"4699": {
			"fn": "EnumerableSetUpgradeable.remove",
			"offset": [
				5257,
				5261
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"4701": {
			"fn": "EnumerableSetUpgradeable.remove",
			"offset": [
				5280,
				5324
			],
			"op": "PUSH2",
			"path": "8",
			"statement": 73,
			"value": "0x6FA"
		},
		"4704": {
			"fn": "EnumerableSetUpgradeable.remove",
			"offset": [
				5288,
				5291
			],
			"op": "DUP4",
			"path": "8"
		},
		"4705": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"4707": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"4709": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"4711": {
			"op": "SHL"
		},
		"4712": {
			"op": "SUB"
		},
		"4713": {
			"fn": "EnumerableSetUpgradeable.remove",
			"offset": [
				5308,
				5322
			],
			"op": "DUP5",
			"path": "8"
		},
		"4714": {
			"fn": "EnumerableSetUpgradeable.remove",
			"offset": [
				5308,
				5322
			],
			"op": "AND",
			"path": "8"
		},
		"4715": {
			"fn": "EnumerableSetUpgradeable.remove",
			"offset": [
				5280,
				5287
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x13C7"
		},
		"4718": {
			"fn": "EnumerableSetUpgradeable.remove",
			"jump": "i",
			"offset": [
				5280,
				5324
			],
			"op": "JUMP",
			"path": "8"
		},
		"4719": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4434,
				4635
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"4720": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4528,
				4546
			],
			"op": "DUP2",
			"path": "8",
			"statement": 74
		},
		"4721": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4528,
				4546
			],
			"op": "SLOAD",
			"path": "8"
		},
		"4722": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4501,
				4508
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"4724": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4501,
				4508
			],
			"op": "SWAP1",
			"path": "8"
		},
		"4725": {
			"branch": 105,
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4528,
				4554
			],
			"op": "DUP3",
			"path": "8"
		},
		"4726": {
			"op": "LT"
		},
		"4727": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4520,
				4593
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x1292"
		},
		"4730": {
			"branch": 105,
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4520,
				4593
			],
			"op": "JUMPI",
			"path": "8"
		},
		"4731": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4520,
				4593
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x40"
		},
		"4733": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4520,
				4593
			],
			"op": "MLOAD",
			"path": "8"
		},
		"4734": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"4738": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"4740": {
			"op": "SHL"
		},
		"4741": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4520,
				4593
			],
			"op": "DUP2",
			"path": "8"
		},
		"4742": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4520,
				4593
			],
			"op": "MSTORE",
			"path": "8"
		},
		"4743": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4520,
				4593
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x4"
		},
		"4745": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4520,
				4593
			],
			"op": "ADD",
			"path": "8"
		},
		"4746": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4520,
				4593
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x463"
		},
		"4749": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4520,
				4593
			],
			"op": "SWAP1",
			"path": "8"
		},
		"4750": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4520,
				4593
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x1984"
		},
		"4753": {
			"fn": "EnumerableSetUpgradeable._at",
			"jump": "i",
			"offset": [
				4520,
				4593
			],
			"op": "JUMP",
			"path": "8"
		},
		"4754": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4520,
				4593
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"4755": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4613
			],
			"op": "DUP3",
			"path": "8",
			"statement": 75
		},
		"4756": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4621
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"4758": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4621
			],
			"op": "ADD",
			"path": "8"
		},
		"4759": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4622,
				4627
			],
			"op": "DUP3",
			"path": "8"
		},
		"4760": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "DUP2",
			"path": "8"
		},
		"4761": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "SLOAD",
			"path": "8"
		},
		"4762": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "DUP2",
			"path": "8"
		},
		"4763": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "LT",
			"path": "8"
		},
		"4764": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x12A1"
		},
		"4767": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "JUMPI",
			"path": "8"
		},
		"4768": {
			"dev": "Index out of range",
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "INVALID",
			"path": "8"
		},
		"4769": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"4770": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "SWAP1",
			"path": "8"
		},
		"4771": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"4773": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "MSTORE",
			"path": "8"
		},
		"4774": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x20"
		},
		"4776": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"4778": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "KECCAK256",
			"path": "8"
		},
		"4779": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "ADD",
			"path": "8"
		},
		"4780": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4610,
				4628
			],
			"op": "SLOAD",
			"path": "8"
		},
		"4781": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4603,
				4628
			],
			"op": "SWAP1",
			"path": "8"
		},
		"4782": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4603,
				4628
			],
			"op": "POP",
			"path": "8"
		},
		"4783": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4434,
				4635
			],
			"op": "SWAP3",
			"path": "8"
		},
		"4784": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4434,
				4635
			],
			"op": "SWAP2",
			"path": "8"
		},
		"4785": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4434,
				4635
			],
			"op": "POP",
			"path": "8"
		},
		"4786": {
			"fn": "EnumerableSetUpgradeable._at",
			"offset": [
				4434,
				4635
			],
			"op": "POP",
			"path": "8"
		},
		"4787": {
			"fn": "EnumerableSetUpgradeable._at",
			"jump": "o",
			"offset": [
				4434,
				4635
			],
			"op": "JUMP",
			"path": "8"
		},
		"4788": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3787,
				3914
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"4789": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3860,
				3864
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"4791": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3902
			],
			"op": "SWAP1",
			"path": "8",
			"statement": 76
		},
		"4792": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3902
			],
			"op": "DUP2",
			"path": "8"
		},
		"4793": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3902
			],
			"op": "MSTORE",
			"path": "8"
		},
		"4794": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3895
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x1"
		},
		"4796": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3895
			],
			"op": "SWAP2",
			"path": "8"
		},
		"4797": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3895
			],
			"op": "SWAP1",
			"path": "8"
		},
		"4798": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3895
			],
			"op": "SWAP2",
			"path": "8"
		},
		"4799": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3895
			],
			"op": "ADD",
			"path": "8"
		},
		"4800": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3902
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x20"
		},
		"4802": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3902
			],
			"op": "MSTORE",
			"path": "8"
		},
		"4803": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3902
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x40"
		},
		"4805": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3902
			],
			"op": "SWAP1",
			"path": "8"
		},
		"4806": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3902
			],
			"op": "KECCAK256",
			"path": "8"
		},
		"4807": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3902
			],
			"op": "SLOAD",
			"path": "8"
		},
		"4808": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3907
			],
			"op": "ISZERO",
			"path": "8"
		},
		"4809": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3907
			],
			"op": "ISZERO",
			"path": "8"
		},
		"4810": {
			"fn": "EnumerableSetUpgradeable._contains",
			"offset": [
				3883,
				3907
			],
			"op": "SWAP1",
			"path": "8"
		},
		"4811": {
			"fn": "EnumerableSetUpgradeable._contains",
			"jump": "o",
			"offset": [
				3787,
				3914
			],
			"op": "JUMP",
			"path": "8"
		},
		"4812": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				751,
				815
			],
			"op": "JUMPDEST",
			"path": "1"
		},
		"4813": {
			"offset": [
				1426,
				1439
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"4815": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1426,
				1439
			],
			"op": "SLOAD",
			"path": "5"
		},
		"4816": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1426,
				1439
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x100"
		},
		"4819": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1426,
				1439
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4820": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1426,
				1439
			],
			"op": "DIV",
			"path": "5"
		},
		"4821": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1426,
				1439
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0xFF"
		},
		"4823": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1426,
				1439
			],
			"op": "AND",
			"path": "5"
		},
		"4824": {
			"branch": 108,
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1426,
				1439
			],
			"op": "DUP1",
			"path": "5"
		},
		"4825": {
			"offset": [
				1426,
				1459
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x12E5"
		},
		"4828": {
			"branch": 108,
			"offset": [
				1426,
				1459
			],
			"op": "JUMPI",
			"path": "5"
		},
		"4829": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1426,
				1459
			],
			"op": "POP",
			"path": "5"
		},
		"4830": {
			"offset": [
				1443,
				1459
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x12E5"
		},
		"4833": {
			"offset": [
				1443,
				1457
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x1036"
		},
		"4836": {
			"jump": "i",
			"offset": [
				1443,
				1459
			],
			"op": "JUMP",
			"path": "5"
		},
		"4837": {
			"branch": 109,
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1443,
				1459
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"4838": {
			"offset": [
				1426,
				1476
			],
			"op": "DUP1",
			"path": "5"
		},
		"4839": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1426,
				1476
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x12F3"
		},
		"4842": {
			"branch": 109,
			"offset": [
				1426,
				1476
			],
			"op": "JUMPI",
			"path": "5"
		},
		"4843": {
			"op": "POP"
		},
		"4844": {
			"offset": [
				1464,
				1476
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"4846": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1464,
				1476
			],
			"op": "SLOAD",
			"path": "5"
		},
		"4847": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1464,
				1476
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0xFF"
		},
		"4849": {
			"branch": 110,
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1464,
				1476
			],
			"op": "AND",
			"path": "5"
		},
		"4850": {
			"offset": [
				1463,
				1476
			],
			"op": "ISZERO",
			"path": "5"
		},
		"4851": {
			"offset": [
				1426,
				1476
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"4852": {
			"offset": [
				1418,
				1527
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x130F"
		},
		"4855": {
			"branch": 110,
			"offset": [
				1418,
				1527
			],
			"op": "JUMPI",
			"path": "5"
		},
		"4856": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x40"
		},
		"4858": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "MLOAD",
			"path": "5"
		},
		"4859": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"4863": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"4865": {
			"op": "SHL"
		},
		"4866": {
			"offset": [
				1418,
				1527
			],
			"op": "DUP2",
			"path": "5"
		},
		"4867": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "MSTORE",
			"path": "5"
		},
		"4868": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x4"
		},
		"4870": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "ADD",
			"path": "5"
		},
		"4871": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x463"
		},
		"4874": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4875": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x1B75"
		},
		"4878": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"jump": "i",
			"offset": [
				1418,
				1527
			],
			"op": "JUMP",
			"path": "5"
		},
		"4879": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1418,
				1527
			],
			"op": "JUMPDEST",
			"path": "5"
		},
		"4880": {
			"offset": [
				1538,
				1557
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"4882": {
			"offset": [
				1561,
				1574
			],
			"op": "SLOAD",
			"path": "5"
		},
		"4883": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1561,
				1574
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x100"
		},
		"4886": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1561,
				1574
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4887": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1561,
				1574
			],
			"op": "DIV",
			"path": "5"
		},
		"4888": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1561,
				1574
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0xFF"
		},
		"4890": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1561,
				1574
			],
			"op": "AND",
			"path": "5"
		},
		"4891": {
			"offset": [
				1560,
				1574
			],
			"op": "ISZERO",
			"path": "5"
		},
		"4892": {
			"offset": [
				1584,
				1682
			],
			"op": "DUP1",
			"path": "5"
		},
		"4893": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1584,
				1682
			],
			"op": "ISZERO",
			"path": "5"
		},
		"4894": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1584,
				1682
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x10BA"
		},
		"4897": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1584,
				1682
			],
			"op": "JUMPI",
			"path": "5"
		},
		"4898": {
			"offset": [
				1618,
				1631
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"4900": {
			"offset": [
				1618,
				1638
			],
			"op": "DUP1",
			"path": "5"
		},
		"4901": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1618,
				1638
			],
			"op": "SLOAD",
			"path": "5"
		},
		"4902": {
			"op": "PUSH1",
			"value": "0xFF"
		},
		"4904": {
			"op": "NOT"
		},
		"4905": {
			"op": "PUSH2",
			"value": "0xFF00"
		},
		"4908": {
			"op": "NOT"
		},
		"4909": {
			"offset": [
				1618,
				1638
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4910": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1618,
				1638
			],
			"op": "SWAP2",
			"path": "5"
		},
		"4911": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1618,
				1638
			],
			"op": "AND",
			"path": "5"
		},
		"4912": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1618,
				1638
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x100"
		},
		"4915": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1618,
				1638
			],
			"op": "OR",
			"path": "5"
		},
		"4916": {
			"offset": [
				1652,
				1671
			],
			"op": "AND",
			"path": "5"
		},
		"4917": {
			"offset": [
				1634,
				1638
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x1"
		},
		"4919": {
			"offset": [
				1652,
				1671
			],
			"op": "OR",
			"path": "5"
		},
		"4920": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1652,
				1671
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4921": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1652,
				1671
			],
			"op": "SSTORE",
			"path": "5"
		},
		"4922": {
			"offset": [
				1708,
				1722
			],
			"op": "DUP1",
			"path": "5"
		},
		"4923": {
			"offset": [
				1704,
				1770
			],
			"op": "ISZERO",
			"path": "5"
		},
		"4924": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1704,
				1770
			],
			"op": "PUSH2",
			"path": "5",
			"value": "0x10CC"
		},
		"4927": {
			"offset": [
				1704,
				1770
			],
			"op": "JUMPI",
			"path": "5"
		},
		"4928": {
			"offset": [
				1754,
				1759
			],
			"op": "PUSH1",
			"path": "5",
			"value": "0x0"
		},
		"4930": {
			"offset": [
				1738,
				1759
			],
			"op": "DUP1",
			"path": "5"
		},
		"4931": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1738,
				1759
			],
			"op": "SLOAD",
			"path": "5"
		},
		"4932": {
			"op": "PUSH2",
			"value": "0xFF00"
		},
		"4935": {
			"op": "NOT"
		},
		"4936": {
			"offset": [
				1738,
				1759
			],
			"op": "AND",
			"path": "5"
		},
		"4937": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1738,
				1759
			],
			"op": "SWAP1",
			"path": "5"
		},
		"4938": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				1738,
				1759
			],
			"op": "SSTORE",
			"path": "5"
		},
		"4939": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"offset": [
				751,
				815
			],
			"op": "POP",
			"path": "1"
		},
		"4940": {
			"fn": "ContextUpgradeable.__Context_init_unchained",
			"jump": "o",
			"offset": [
				751,
				815
			],
			"op": "JUMP",
			"path": "1"
		},
		"4941": {
			"fn": "EnumerableSetUpgradeable._length",
			"offset": [
				3995,
				4102
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"4942": {
			"fn": "EnumerableSetUpgradeable._length",
			"offset": [
				4077,
				4095
			],
			"op": "SLOAD",
			"path": "8",
			"statement": 77
		},
		"4943": {
			"fn": "EnumerableSetUpgradeable._length",
			"offset": [
				4077,
				4095
			],
			"op": "SWAP1",
			"path": "8"
		},
		"4944": {
			"fn": "EnumerableSetUpgradeable._length",
			"jump": "o",
			"offset": [
				3995,
				4102
			],
			"op": "JUMP",
			"path": "8"
		},
		"4945": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1757,
				1944
			],
			"op": "JUMPDEST",
			"path": "4"
		},
		"4946": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1843,
				1850
			],
			"op": "PUSH1",
			"path": "4",
			"value": "0x0"
		},
		"4948": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1878,
				1890
			],
			"op": "DUP2",
			"path": "4",
			"statement": 78
		},
		"4949": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1870,
				1876
			],
			"op": "DUP5",
			"path": "4"
		},
		"4950": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1870,
				1876
			],
			"op": "DUP5",
			"path": "4"
		},
		"4951": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1870,
				1876
			],
			"op": "GT",
			"path": "4"
		},
		"4952": {
			"branch": 114,
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1870,
				1876
			],
			"op": "ISZERO",
			"path": "4"
		},
		"4953": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1862,
				1891
			],
			"op": "PUSH2",
			"path": "4",
			"value": "0x1375"
		},
		"4956": {
			"branch": 114,
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1862,
				1891
			],
			"op": "JUMPI",
			"path": "4"
		},
		"4957": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1862,
				1891
			],
			"op": "PUSH1",
			"path": "4",
			"value": "0x40"
		},
		"4959": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1862,
				1891
			],
			"op": "MLOAD",
			"path": "4"
		},
		"4960": {
			"op": "PUSH3",
			"value": "0x461BCD"
		},
		"4964": {
			"op": "PUSH1",
			"value": "0xE5"
		},
		"4966": {
			"op": "SHL"
		},
		"4967": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1862,
				1891
			],
			"op": "DUP2",
			"path": "4"
		},
		"4968": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1862,
				1891
			],
			"op": "MSTORE",
			"path": "4"
		},
		"4969": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1862,
				1891
			],
			"op": "PUSH1",
			"path": "4",
			"value": "0x4"
		},
		"4971": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1862,
				1891
			],
			"op": "ADD",
			"path": "4"
		},
		"4972": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1862,
				1891
			],
			"op": "PUSH2",
			"path": "4",
			"value": "0x463"
		},
		"4975": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1862,
				1891
			],
			"op": "SWAP2",
			"path": "4"
		},
		"4976": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1862,
				1891
			],
			"op": "SWAP1",
			"path": "4"
		},
		"4977": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1862,
				1891
			],
			"op": "PUSH2",
			"path": "4",
			"value": "0x1931"
		},
		"4980": {
			"fn": "SafeMathUpgradeable.sub",
			"jump": "i",
			"offset": [
				1862,
				1891
			],
			"op": "JUMP",
			"path": "4"
		},
		"4981": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1862,
				1891
			],
			"op": "JUMPDEST",
			"path": "4"
		},
		"4982": {
			"op": "POP"
		},
		"4983": {
			"op": "POP"
		},
		"4984": {
			"op": "POP"
		},
		"4985": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1913,
				1918
			],
			"op": "SWAP1",
			"path": "4"
		},
		"4986": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1913,
				1918
			],
			"op": "SUB",
			"path": "4"
		},
		"4987": {
			"fn": "SafeMathUpgradeable.sub",
			"offset": [
				1913,
				1918
			],
			"op": "SWAP1",
			"path": "4"
		},
		"4988": {
			"fn": "SafeMathUpgradeable.sub",
			"jump": "o",
			"offset": [
				1757,
				1944
			],
			"op": "JUMP",
			"path": "4"
		},
		"4989": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1622,
				2026
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"4990": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1685,
				1689
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"4992": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1706,
				1727
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x1389"
		},
		"4995": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1716,
				1719
			],
			"op": "DUP4",
			"path": "8"
		},
		"4996": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1721,
				1726
			],
			"op": "DUP4",
			"path": "8"
		},
		"4997": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1706,
				1715
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x12B4"
		},
		"5000": {
			"fn": "EnumerableSetUpgradeable._add",
			"jump": "i",
			"offset": [
				1706,
				1727
			],
			"op": "JUMP",
			"path": "8"
		},
		"5001": {
			"branch": 106,
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1706,
				1727
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"5002": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1701,
				2020
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x13BF"
		},
		"5005": {
			"branch": 106,
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1701,
				2020
			],
			"op": "JUMPI",
			"path": "8"
		},
		"5006": {
			"op": "POP"
		},
		"5007": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "DUP2",
			"path": "8",
			"statement": 79
		},
		"5008": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "SLOAD",
			"path": "8"
		},
		"5009": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x1"
		},
		"5011": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "DUP2",
			"path": "8"
		},
		"5012": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "DUP2",
			"path": "8"
		},
		"5013": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "ADD",
			"path": "8"
		},
		"5014": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "DUP5",
			"path": "8"
		},
		"5015": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "SSTORE",
			"path": "8"
		},
		"5016": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1754
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"5018": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "DUP5",
			"path": "8"
		},
		"5019": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "DUP2",
			"path": "8"
		},
		"5020": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "MSTORE",
			"path": "8"
		},
		"5021": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x20"
		},
		"5023": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "DUP1",
			"path": "8"
		},
		"5024": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "DUP3",
			"path": "8"
		},
		"5025": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "KECCAK256",
			"path": "8"
		},
		"5026": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5027": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "SWAP4",
			"path": "8"
		},
		"5028": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "ADD",
			"path": "8"
		},
		"5029": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "DUP5",
			"path": "8"
		},
		"5030": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5031": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1743,
				1766
			],
			"op": "SSTORE",
			"path": "8"
		},
		"5032": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1923,
				1941
			],
			"op": "DUP5",
			"path": "8",
			"statement": 80
		},
		"5033": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1923,
				1941
			],
			"op": "SLOAD",
			"path": "8"
		},
		"5034": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1920
			],
			"op": "DUP5",
			"path": "8"
		},
		"5035": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1920
			],
			"op": "DUP3",
			"path": "8"
		},
		"5036": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1920
			],
			"op": "MSTORE",
			"path": "8"
		},
		"5037": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1913
			],
			"op": "DUP3",
			"path": "8"
		},
		"5038": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1913
			],
			"op": "DUP7",
			"path": "8"
		},
		"5039": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1913
			],
			"op": "ADD",
			"path": "8"
		},
		"5040": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1920
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5041": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1920
			],
			"op": "SWAP4",
			"path": "8"
		},
		"5042": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1920
			],
			"op": "MSTORE",
			"path": "8"
		},
		"5043": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1920
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x40"
		},
		"5045": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1920
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5046": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1920
			],
			"op": "KECCAK256",
			"path": "8"
		},
		"5047": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1941
			],
			"op": "SWAP2",
			"path": "8"
		},
		"5048": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1941
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5049": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1941
			],
			"op": "SWAP2",
			"path": "8"
		},
		"5050": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1901,
				1941
			],
			"op": "SSTORE",
			"path": "8"
		},
		"5051": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1955,
				1966
			],
			"op": "PUSH2",
			"path": "8",
			"statement": 81,
			"value": "0x6FD"
		},
		"5054": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1955,
				1966
			],
			"op": "JUMP",
			"path": "8"
		},
		"5055": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1701,
				2020
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"5056": {
			"op": "POP"
		},
		"5057": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				2004,
				2009
			],
			"op": "PUSH1",
			"path": "8",
			"statement": 82,
			"value": "0x0"
		},
		"5059": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1997,
				2009
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x6FD"
		},
		"5062": {
			"fn": "EnumerableSetUpgradeable._add",
			"offset": [
				1997,
				2009
			],
			"op": "JUMP",
			"path": "8"
		},
		"5063": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2194,
				3706
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"5064": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2260,
				2264
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"5066": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2397,
				2416
			],
			"op": "DUP2",
			"path": "8"
		},
		"5067": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2397,
				2416
			],
			"op": "DUP2",
			"path": "8"
		},
		"5068": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2397,
				2416
			],
			"op": "MSTORE",
			"path": "8"
		},
		"5069": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2397,
				2409
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x1"
		},
		"5071": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2397,
				2409
			],
			"op": "DUP4",
			"path": "8"
		},
		"5072": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2397,
				2409
			],
			"op": "ADD",
			"path": "8"
		},
		"5073": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2397,
				2416
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x20"
		},
		"5075": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2397,
				2416
			],
			"op": "MSTORE",
			"path": "8"
		},
		"5076": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2397,
				2416
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x40"
		},
		"5078": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2397,
				2416
			],
			"op": "DUP2",
			"path": "8"
		},
		"5079": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2397,
				2416
			],
			"op": "KECCAK256",
			"path": "8"
		},
		"5080": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2397,
				2416
			],
			"op": "SLOAD",
			"path": "8"
		},
		"5081": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2431,
				2446
			],
			"op": "DUP1",
			"path": "8"
		},
		"5082": {
			"branch": 107,
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2431,
				2446
			],
			"op": "ISZERO",
			"path": "8"
		},
		"5083": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2427,
				3700
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x1483"
		},
		"5086": {
			"branch": 107,
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2427,
				3700
			],
			"op": "JUMPI",
			"path": "8"
		},
		"5087": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2860,
				2878
			],
			"op": "DUP4",
			"path": "8"
		},
		"5088": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2860,
				2878
			],
			"op": "SLOAD",
			"path": "8"
		},
		"5089": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5091": {
			"op": "NOT"
		},
		"5092": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2812,
				2826
			],
			"op": "DUP1",
			"path": "8"
		},
		"5093": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2812,
				2826
			],
			"op": "DUP4",
			"path": "8"
		},
		"5094": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2812,
				2826
			],
			"op": "ADD",
			"path": "8"
		},
		"5095": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2812,
				2826
			],
			"op": "SWAP2",
			"path": "8"
		},
		"5096": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2860,
				2882
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5097": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2860,
				2882
			],
			"op": "DUP2",
			"path": "8"
		},
		"5098": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2860,
				2882
			],
			"op": "ADD",
			"path": "8"
		},
		"5099": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2860,
				2882
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5100": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2788,
				2809
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"5102": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2788,
				2809
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5103": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2860,
				2863
			],
			"op": "DUP8",
			"path": "8"
		},
		"5104": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2860,
				2863
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5105": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2860,
				2882
			],
			"op": "DUP4",
			"path": "8"
		},
		"5106": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2860,
				2882
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5107": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3142,
				3164
			],
			"op": "DUP2",
			"path": "8"
		},
		"5108": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3142,
				3164
			],
			"op": "LT",
			"path": "8"
		},
		"5109": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3142,
				3164
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x13FA"
		},
		"5112": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3142,
				3164
			],
			"op": "JUMPI",
			"path": "8"
		},
		"5113": {
			"dev": "Index out of range",
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3142,
				3164
			],
			"op": "INVALID",
			"path": "8"
		},
		"5114": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3142,
				3164
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"5115": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3142,
				3164
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5116": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3142,
				3164
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"5118": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3142,
				3164
			],
			"op": "MSTORE",
			"path": "8"
		},
		"5119": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3142,
				3164
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x20"
		},
		"5121": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3142,
				3164
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"5123": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3142,
				3164
			],
			"op": "KECCAK256",
			"path": "8"
		},
		"5124": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3142,
				3164
			],
			"op": "ADD",
			"path": "8"
		},
		"5125": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3142,
				3164
			],
			"op": "SLOAD",
			"path": "8"
		},
		"5126": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3122,
				3164
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5127": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3122,
				3164
			],
			"op": "POP",
			"path": "8"
		},
		"5128": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3285,
				3294
			],
			"op": "DUP1",
			"path": "8",
			"statement": 83
		},
		"5129": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3259
			],
			"op": "DUP8",
			"path": "8"
		},
		"5130": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3267
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"5132": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3267
			],
			"op": "ADD",
			"path": "8"
		},
		"5133": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3268,
				3281
			],
			"op": "DUP5",
			"path": "8"
		},
		"5134": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "DUP2",
			"path": "8"
		},
		"5135": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "SLOAD",
			"path": "8"
		},
		"5136": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "DUP2",
			"path": "8"
		},
		"5137": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "LT",
			"path": "8"
		},
		"5138": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x1417"
		},
		"5141": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "JUMPI",
			"path": "8"
		},
		"5142": {
			"dev": "Index out of range",
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "INVALID",
			"path": "8"
		},
		"5143": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"5144": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"5146": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "SWAP2",
			"path": "8"
		},
		"5147": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "DUP3",
			"path": "8"
		},
		"5148": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "MSTORE",
			"path": "8"
		},
		"5149": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x20"
		},
		"5151": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "DUP1",
			"path": "8"
		},
		"5152": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "DUP4",
			"path": "8"
		},
		"5153": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "KECCAK256",
			"path": "8"
		},
		"5154": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5155": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "SWAP2",
			"path": "8"
		},
		"5156": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3282
			],
			"op": "ADD",
			"path": "8"
		},
		"5157": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3294
			],
			"op": "SWAP3",
			"path": "8"
		},
		"5158": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3294
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5159": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3294
			],
			"op": "SWAP3",
			"path": "8"
		},
		"5160": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3256,
				3294
			],
			"op": "SSTORE",
			"path": "8"
		},
		"5161": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3383
			],
			"op": "DUP3",
			"path": "8",
			"statement": 84
		},
		"5162": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3383
			],
			"op": "DUP2",
			"path": "8"
		},
		"5163": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3383
			],
			"op": "MSTORE",
			"path": "8"
		},
		"5164": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3402,
				3403
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x1"
		},
		"5166": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3372
			],
			"op": "DUP10",
			"path": "8"
		},
		"5167": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3372
			],
			"op": "DUP2",
			"path": "8"
		},
		"5168": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3372
			],
			"op": "ADD",
			"path": "8"
		},
		"5169": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3383
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5170": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3383
			],
			"op": "SWAP3",
			"path": "8"
		},
		"5171": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3383
			],
			"op": "MSTORE",
			"path": "8"
		},
		"5172": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3383
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x40"
		},
		"5174": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3383
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5175": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3383
			],
			"op": "KECCAK256",
			"path": "8"
		},
		"5176": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3386,
				3403
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5177": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3386,
				3403
			],
			"op": "DUP5",
			"path": "8"
		},
		"5178": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3386,
				3403
			],
			"op": "ADD",
			"path": "8"
		},
		"5179": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3403
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5180": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3403
			],
			"op": "SSTORE",
			"path": "8"
		},
		"5181": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "DUP7",
			"path": "8",
			"statement": 85
		},
		"5182": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "SLOAD",
			"path": "8"
		},
		"5183": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3363
			],
			"op": "DUP8",
			"path": "8"
		},
		"5184": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3360,
				3363
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5185": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "DUP1",
			"path": "8"
		},
		"5186": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x1447"
		},
		"5189": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "JUMPI",
			"path": "8"
		},
		"5190": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "INVALID",
			"path": "8"
		},
		"5191": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"5192": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x1"
		},
		"5194": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5195": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "SUB",
			"path": "8"
		},
		"5196": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "DUP2",
			"path": "8"
		},
		"5197": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "DUP2",
			"path": "8"
		},
		"5198": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5199": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"5201": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "MSTORE",
			"path": "8"
		},
		"5202": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x20"
		},
		"5204": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"5206": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "KECCAK256",
			"path": "8"
		},
		"5207": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "ADD",
			"path": "8"
		},
		"5208": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"5210": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5211": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "SSTORE",
			"path": "8"
		},
		"5212": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5213": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3509,
				3526
			],
			"op": "SSTORE",
			"path": "8"
		},
		"5214": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3601,
				3604
			],
			"op": "DUP7",
			"path": "8",
			"statement": 86
		},
		"5215": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3601,
				3613
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x1"
		},
		"5217": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3601,
				3613
			],
			"op": "ADD",
			"path": "8"
		},
		"5218": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3601,
				3620
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"5220": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3614,
				3619
			],
			"op": "DUP8",
			"path": "8"
		},
		"5221": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3601,
				3620
			],
			"op": "DUP2",
			"path": "8"
		},
		"5222": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3601,
				3620
			],
			"op": "MSTORE",
			"path": "8"
		},
		"5223": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3601,
				3620
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x20"
		},
		"5225": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3601,
				3620
			],
			"op": "ADD",
			"path": "8"
		},
		"5226": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3601,
				3620
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5227": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3601,
				3620
			],
			"op": "DUP2",
			"path": "8"
		},
		"5228": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3601,
				3620
			],
			"op": "MSTORE",
			"path": "8"
		},
		"5229": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3601,
				3620
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x20"
		},
		"5231": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3601,
				3620
			],
			"op": "ADD",
			"path": "8"
		},
		"5232": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3601,
				3620
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"5234": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3601,
				3620
			],
			"op": "KECCAK256",
			"path": "8"
		},
		"5235": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3594,
				3620
			],
			"op": "PUSH1",
			"path": "8",
			"value": "0x0"
		},
		"5237": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3594,
				3620
			],
			"op": "SWAP1",
			"path": "8"
		},
		"5238": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3594,
				3620
			],
			"op": "SSTORE",
			"path": "8"
		},
		"5239": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3642,
				3646
			],
			"op": "PUSH1",
			"path": "8",
			"statement": 87,
			"value": "0x1"
		},
		"5241": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3635,
				3646
			],
			"op": "SWAP5",
			"path": "8"
		},
		"5242": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3635,
				3646
			],
			"op": "POP",
			"path": "8"
		},
		"5243": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3635,
				3646
			],
			"op": "POP",
			"path": "8"
		},
		"5244": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3635,
				3646
			],
			"op": "POP",
			"path": "8"
		},
		"5245": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3635,
				3646
			],
			"op": "POP",
			"path": "8"
		},
		"5246": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3635,
				3646
			],
			"op": "POP",
			"path": "8"
		},
		"5247": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3635,
				3646
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x6FD"
		},
		"5250": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3635,
				3646
			],
			"op": "JUMP",
			"path": "8"
		},
		"5251": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				2427,
				3700
			],
			"op": "JUMPDEST",
			"path": "8"
		},
		"5252": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3684,
				3689
			],
			"op": "PUSH1",
			"path": "8",
			"statement": 88,
			"value": "0x0"
		},
		"5254": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3677,
				3689
			],
			"op": "SWAP2",
			"path": "8"
		},
		"5255": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3677,
				3689
			],
			"op": "POP",
			"path": "8"
		},
		"5256": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3677,
				3689
			],
			"op": "POP",
			"path": "8"
		},
		"5257": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3677,
				3689
			],
			"op": "PUSH2",
			"path": "8",
			"value": "0x6FD"
		},
		"5260": {
			"fn": "EnumerableSetUpgradeable._remove",
			"offset": [
				3677,
				3689
			],
			"op": "JUMP",
			"path": "8"
		},
		"5261": {
			"op": "JUMPDEST"
		},
		"5262": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"5264": {
			"op": "DUP1"
		},
		"5265": {
			"op": "MLOAD"
		},
		"5266": {
			"op": "PUSH1",
			"value": "0x80"
		},
		"5268": {
			"op": "DUP2"
		},
		"5269": {
			"op": "ADD"
		},
		"5270": {
			"op": "DUP3"
		},
		"5271": {
			"op": "MSTORE"
		},
		"5272": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5274": {
			"op": "DUP1"
		},
		"5275": {
			"op": "DUP3"
		},
		"5276": {
			"op": "MSTORE"
		},
		"5277": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"5279": {
			"op": "DUP3"
		},
		"5280": {
			"op": "ADD"
		},
		"5281": {
			"op": "DUP2"
		},
		"5282": {
			"op": "SWAP1"
		},
		"5283": {
			"op": "MSTORE"
		},
		"5284": {
			"op": "SWAP2"
		},
		"5285": {
			"op": "DUP2"
		},
		"5286": {
			"op": "ADD"
		},
		"5287": {
			"op": "DUP3"
		},
		"5288": {
			"op": "SWAP1"
		},
		"5289": {
			"op": "MSTORE"
		},
		"5290": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"5292": {
			"op": "DUP2"
		},
		"5293": {
			"op": "ADD"
		},
		"5294": {
			"op": "SWAP2"
		},
		"5295": {
			"op": "SWAP1"
		},
		"5296": {
			"op": "SWAP2"
		},
		"5297": {
			"op": "MSTORE"
		},
		"5298": {
			"op": "SWAP1"
		},
		"5299": {
			"jump": "o",
			"op": "JUMP"
		},
		"5300": {
			"op": "JUMPDEST"
		},
		"5301": {
			"op": "DUP1"
		},
		"5302": {
			"op": "CALLDATALOAD"
		},
		"5303": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"5305": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"5307": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"5309": {
			"op": "SHL"
		},
		"5310": {
			"op": "SUB"
		},
		"5311": {
			"op": "DUP2"
		},
		"5312": {
			"op": "AND"
		},
		"5313": {
			"op": "DUP2"
		},
		"5314": {
			"op": "EQ"
		},
		"5315": {
			"op": "PUSH2",
			"value": "0x6FD"
		},
		"5318": {
			"op": "JUMPI"
		},
		"5319": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5321": {
			"op": "DUP1"
		},
		"5322": {
			"op": "REVERT"
		},
		"5323": {
			"op": "JUMPDEST"
		},
		"5324": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5326": {
			"op": "DUP1"
		},
		"5327": {
			"op": "DUP4"
		},
		"5328": {
			"op": "PUSH1",
			"value": "0x1F"
		},
		"5330": {
			"op": "DUP5"
		},
		"5331": {
			"op": "ADD"
		},
		"5332": {
			"op": "SLT"
		},
		"5333": {
			"op": "PUSH2",
			"value": "0x14DC"
		},
		"5336": {
			"op": "JUMPI"
		},
		"5337": {
			"op": "DUP2"
		},
		"5338": {
			"op": "DUP3"
		},
		"5339": {
			"op": "REVERT"
		},
		"5340": {
			"op": "JUMPDEST"
		},
		"5341": {
			"op": "POP"
		},
		"5342": {
			"op": "DUP2"
		},
		"5343": {
			"op": "CALLDATALOAD"
		},
		"5344": {
			"op": "PUSH8",
			"value": "0xFFFFFFFFFFFFFFFF"
		},
		"5353": {
			"op": "DUP2"
		},
		"5354": {
			"op": "GT"
		},
		"5355": {
			"op": "ISZERO"
		},
		"5356": {
			"op": "PUSH2",
			"value": "0x14F3"
		},
		"5359": {
			"op": "JUMPI"
		},
		"5360": {
			"op": "DUP2"
		},
		"5361": {
			"op": "DUP3"
		},
		"5362": {
			"op": "REVERT"
		},
		"5363": {
			"op": "JUMPDEST"
		},
		"5364": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"5366": {
			"op": "DUP4"
		},
		"5367": {
			"op": "ADD"
		},
		"5368": {
			"op": "SWAP2"
		},
		"5369": {
			"op": "POP"
		},
		"5370": {
			"op": "DUP4"
		},
		"5371": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"5373": {
			"op": "DUP1"
		},
		"5374": {
			"op": "DUP4"
		},
		"5375": {
			"op": "MUL"
		},
		"5376": {
			"op": "DUP6"
		},
		"5377": {
			"op": "ADD"
		},
		"5378": {
			"op": "ADD"
		},
		"5379": {
			"op": "GT"
		},
		"5380": {
			"op": "ISZERO"
		},
		"5381": {
			"op": "PUSH2",
			"value": "0x806"
		},
		"5384": {
			"op": "JUMPI"
		},
		"5385": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5387": {
			"op": "DUP1"
		},
		"5388": {
			"op": "REVERT"
		},
		"5389": {
			"op": "JUMPDEST"
		},
		"5390": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5392": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"5394": {
			"op": "DUP3"
		},
		"5395": {
			"op": "DUP5"
		},
		"5396": {
			"op": "SUB"
		},
		"5397": {
			"op": "SLT"
		},
		"5398": {
			"op": "ISZERO"
		},
		"5399": {
			"op": "PUSH2",
			"value": "0x151E"
		},
		"5402": {
			"op": "JUMPI"
		},
		"5403": {
			"op": "DUP1"
		},
		"5404": {
			"op": "DUP2"
		},
		"5405": {
			"op": "REVERT"
		},
		"5406": {
			"op": "JUMPDEST"
		},
		"5407": {
			"op": "PUSH2",
			"value": "0x6FA"
		},
		"5410": {
			"op": "DUP4"
		},
		"5411": {
			"op": "DUP4"
		},
		"5412": {
			"op": "PUSH2",
			"value": "0x14B4"
		},
		"5415": {
			"jump": "i",
			"op": "JUMP"
		},
		"5416": {
			"op": "JUMPDEST"
		},
		"5417": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5419": {
			"op": "DUP1"
		},
		"5420": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"5422": {
			"op": "DUP4"
		},
		"5423": {
			"op": "DUP6"
		},
		"5424": {
			"op": "SUB"
		},
		"5425": {
			"op": "SLT"
		},
		"5426": {
			"op": "ISZERO"
		},
		"5427": {
			"op": "PUSH2",
			"value": "0x153A"
		},
		"5430": {
			"op": "JUMPI"
		},
		"5431": {
			"op": "DUP1"
		},
		"5432": {
			"op": "DUP2"
		},
		"5433": {
			"op": "REVERT"
		},
		"5434": {
			"op": "JUMPDEST"
		},
		"5435": {
			"op": "PUSH2",
			"value": "0x1544"
		},
		"5438": {
			"op": "DUP5"
		},
		"5439": {
			"op": "DUP5"
		},
		"5440": {
			"op": "PUSH2",
			"value": "0x14B4"
		},
		"5443": {
			"jump": "i",
			"op": "JUMP"
		},
		"5444": {
			"op": "JUMPDEST"
		},
		"5445": {
			"op": "SWAP2"
		},
		"5446": {
			"op": "POP"
		},
		"5447": {
			"op": "PUSH2",
			"value": "0x1553"
		},
		"5450": {
			"op": "DUP5"
		},
		"5451": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"5453": {
			"op": "DUP6"
		},
		"5454": {
			"op": "ADD"
		},
		"5455": {
			"op": "PUSH2",
			"value": "0x14B4"
		},
		"5458": {
			"jump": "i",
			"op": "JUMP"
		},
		"5459": {
			"op": "JUMPDEST"
		},
		"5460": {
			"op": "SWAP1"
		},
		"5461": {
			"op": "POP"
		},
		"5462": {
			"op": "SWAP3"
		},
		"5463": {
			"op": "POP"
		},
		"5464": {
			"op": "SWAP3"
		},
		"5465": {
			"op": "SWAP1"
		},
		"5466": {
			"op": "POP"
		},
		"5467": {
			"jump": "o",
			"op": "JUMP"
		},
		"5468": {
			"op": "JUMPDEST"
		},
		"5469": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5471": {
			"op": "DUP1"
		},
		"5472": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5474": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"5476": {
			"op": "DUP5"
		},
		"5477": {
			"op": "DUP7"
		},
		"5478": {
			"op": "SUB"
		},
		"5479": {
			"op": "SLT"
		},
		"5480": {
			"op": "ISZERO"
		},
		"5481": {
			"op": "PUSH2",
			"value": "0x1570"
		},
		"5484": {
			"op": "JUMPI"
		},
		"5485": {
			"op": "DUP1"
		},
		"5486": {
			"op": "DUP2"
		},
		"5487": {
			"op": "REVERT"
		},
		"5488": {
			"op": "JUMPDEST"
		},
		"5489": {
			"op": "PUSH2",
			"value": "0x157A"
		},
		"5492": {
			"op": "DUP6"
		},
		"5493": {
			"op": "DUP6"
		},
		"5494": {
			"op": "PUSH2",
			"value": "0x14B4"
		},
		"5497": {
			"jump": "i",
			"op": "JUMP"
		},
		"5498": {
			"op": "JUMPDEST"
		},
		"5499": {
			"op": "SWAP3"
		},
		"5500": {
			"op": "POP"
		},
		"5501": {
			"op": "PUSH2",
			"value": "0x1589"
		},
		"5504": {
			"op": "DUP6"
		},
		"5505": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"5507": {
			"op": "DUP7"
		},
		"5508": {
			"op": "ADD"
		},
		"5509": {
			"op": "PUSH2",
			"value": "0x14B4"
		},
		"5512": {
			"jump": "i",
			"op": "JUMP"
		},
		"5513": {
			"op": "JUMPDEST"
		},
		"5514": {
			"op": "SWAP2"
		},
		"5515": {
			"op": "POP"
		},
		"5516": {
			"op": "PUSH2",
			"value": "0x1598"
		},
		"5519": {
			"op": "DUP6"
		},
		"5520": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"5522": {
			"op": "DUP7"
		},
		"5523": {
			"op": "ADD"
		},
		"5524": {
			"op": "PUSH2",
			"value": "0x14B4"
		},
		"5527": {
			"jump": "i",
			"op": "JUMP"
		},
		"5528": {
			"op": "JUMPDEST"
		},
		"5529": {
			"op": "SWAP1"
		},
		"5530": {
			"op": "POP"
		},
		"5531": {
			"op": "SWAP3"
		},
		"5532": {
			"op": "POP"
		},
		"5533": {
			"op": "SWAP3"
		},
		"5534": {
			"op": "POP"
		},
		"5535": {
			"op": "SWAP3"
		},
		"5536": {
			"jump": "o",
			"op": "JUMP"
		},
		"5537": {
			"op": "JUMPDEST"
		},
		"5538": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5540": {
			"op": "DUP1"
		},
		"5541": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"5543": {
			"op": "DUP4"
		},
		"5544": {
			"op": "DUP6"
		},
		"5545": {
			"op": "SUB"
		},
		"5546": {
			"op": "SLT"
		},
		"5547": {
			"op": "ISZERO"
		},
		"5548": {
			"op": "PUSH2",
			"value": "0x15B3"
		},
		"5551": {
			"op": "JUMPI"
		},
		"5552": {
			"op": "DUP2"
		},
		"5553": {
			"op": "DUP3"
		},
		"5554": {
			"op": "REVERT"
		},
		"5555": {
			"op": "JUMPDEST"
		},
		"5556": {
			"op": "PUSH2",
			"value": "0x15BD"
		},
		"5559": {
			"op": "DUP5"
		},
		"5560": {
			"op": "DUP5"
		},
		"5561": {
			"op": "PUSH2",
			"value": "0x14B4"
		},
		"5564": {
			"jump": "i",
			"op": "JUMP"
		},
		"5565": {
			"op": "JUMPDEST"
		},
		"5566": {
			"op": "SWAP2"
		},
		"5567": {
			"op": "POP"
		},
		"5568": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"5570": {
			"op": "DUP1"
		},
		"5571": {
			"op": "DUP5"
		},
		"5572": {
			"op": "ADD"
		},
		"5573": {
			"op": "CALLDATALOAD"
		},
		"5574": {
			"op": "PUSH8",
			"value": "0xFFFFFFFFFFFFFFFF"
		},
		"5583": {
			"op": "DUP2"
		},
		"5584": {
			"op": "GT"
		},
		"5585": {
			"op": "ISZERO"
		},
		"5586": {
			"op": "PUSH2",
			"value": "0x15D9"
		},
		"5589": {
			"op": "JUMPI"
		},
		"5590": {
			"op": "DUP3"
		},
		"5591": {
			"op": "DUP4"
		},
		"5592": {
			"op": "REVERT"
		},
		"5593": {
			"op": "JUMPDEST"
		},
		"5594": {
			"op": "DUP5"
		},
		"5595": {
			"op": "ADD"
		},
		"5596": {
			"op": "PUSH1",
			"value": "0x1F"
		},
		"5598": {
			"op": "DUP2"
		},
		"5599": {
			"op": "ADD"
		},
		"5600": {
			"op": "DUP7"
		},
		"5601": {
			"op": "SGT"
		},
		"5602": {
			"op": "PUSH2",
			"value": "0x15E9"
		},
		"5605": {
			"op": "JUMPI"
		},
		"5606": {
			"op": "DUP3"
		},
		"5607": {
			"op": "DUP4"
		},
		"5608": {
			"op": "REVERT"
		},
		"5609": {
			"op": "JUMPDEST"
		},
		"5610": {
			"op": "DUP1"
		},
		"5611": {
			"op": "CALLDATALOAD"
		},
		"5612": {
			"op": "PUSH2",
			"value": "0x15FC"
		},
		"5615": {
			"op": "PUSH2",
			"value": "0x15F7"
		},
		"5618": {
			"op": "DUP3"
		},
		"5619": {
			"op": "PUSH2",
			"value": "0x1DA0"
		},
		"5622": {
			"jump": "i",
			"op": "JUMP"
		},
		"5623": {
			"op": "JUMPDEST"
		},
		"5624": {
			"op": "PUSH2",
			"value": "0x1D79"
		},
		"5627": {
			"jump": "i",
			"op": "JUMP"
		},
		"5628": {
			"op": "JUMPDEST"
		},
		"5629": {
			"op": "DUP2"
		},
		"5630": {
			"op": "DUP2"
		},
		"5631": {
			"op": "MSTORE"
		},
		"5632": {
			"op": "DUP4"
		},
		"5633": {
			"op": "DUP2"
		},
		"5634": {
			"op": "ADD"
		},
		"5635": {
			"op": "SWAP1"
		},
		"5636": {
			"op": "DUP4"
		},
		"5637": {
			"op": "DUP6"
		},
		"5638": {
			"op": "ADD"
		},
		"5639": {
			"op": "DUP6"
		},
		"5640": {
			"op": "DUP5"
		},
		"5641": {
			"op": "MUL"
		},
		"5642": {
			"op": "DUP6"
		},
		"5643": {
			"op": "ADD"
		},
		"5644": {
			"op": "DUP7"
		},
		"5645": {
			"op": "ADD"
		},
		"5646": {
			"op": "DUP11"
		},
		"5647": {
			"op": "LT"
		},
		"5648": {
			"op": "ISZERO"
		},
		"5649": {
			"op": "PUSH2",
			"value": "0x1618"
		},
		"5652": {
			"op": "JUMPI"
		},
		"5653": {
			"op": "DUP7"
		},
		"5654": {
			"op": "DUP8"
		},
		"5655": {
			"op": "REVERT"
		},
		"5656": {
			"op": "JUMPDEST"
		},
		"5657": {
			"op": "DUP7"
		},
		"5658": {
			"op": "SWAP5"
		},
		"5659": {
			"op": "POP"
		},
		"5660": {
			"op": "JUMPDEST"
		},
		"5661": {
			"op": "DUP4"
		},
		"5662": {
			"op": "DUP6"
		},
		"5663": {
			"op": "LT"
		},
		"5664": {
			"op": "ISZERO"
		},
		"5665": {
			"op": "PUSH2",
			"value": "0x1642"
		},
		"5668": {
			"op": "JUMPI"
		},
		"5669": {
			"op": "PUSH2",
			"value": "0x162E"
		},
		"5672": {
			"op": "DUP11"
		},
		"5673": {
			"op": "DUP3"
		},
		"5674": {
			"op": "PUSH2",
			"value": "0x14B4"
		},
		"5677": {
			"jump": "i",
			"op": "JUMP"
		},
		"5678": {
			"op": "JUMPDEST"
		},
		"5679": {
			"op": "DUP4"
		},
		"5680": {
			"op": "MSTORE"
		},
		"5681": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"5683": {
			"op": "SWAP5"
		},
		"5684": {
			"op": "SWAP1"
		},
		"5685": {
			"op": "SWAP5"
		},
		"5686": {
			"op": "ADD"
		},
		"5687": {
			"op": "SWAP4"
		},
		"5688": {
			"op": "SWAP2"
		},
		"5689": {
			"op": "DUP6"
		},
		"5690": {
			"op": "ADD"
		},
		"5691": {
			"op": "SWAP2"
		},
		"5692": {
			"op": "DUP6"
		},
		"5693": {
			"op": "ADD"
		},
		"5694": {
			"op": "PUSH2",
			"value": "0x161C"
		},
		"5697": {
			"op": "JUMP"
		},
		"5698": {
			"op": "JUMPDEST"
		},
		"5699": {
			"op": "POP"
		},
		"5700": {
			"op": "DUP1"
		},
		"5701": {
			"op": "SWAP6"
		},
		"5702": {
			"op": "POP"
		},
		"5703": {
			"op": "POP"
		},
		"5704": {
			"op": "POP"
		},
		"5705": {
			"op": "POP"
		},
		"5706": {
			"op": "POP"
		},
		"5707": {
			"op": "POP"
		},
		"5708": {
			"op": "SWAP3"
		},
		"5709": {
			"op": "POP"
		},
		"5710": {
			"op": "SWAP3"
		},
		"5711": {
			"op": "SWAP1"
		},
		"5712": {
			"op": "POP"
		},
		"5713": {
			"jump": "o",
			"op": "JUMP"
		},
		"5714": {
			"op": "JUMPDEST"
		},
		"5715": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5717": {
			"op": "DUP1"
		},
		"5718": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5720": {
			"op": "DUP1"
		},
		"5721": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5723": {
			"op": "DUP1"
		},
		"5724": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5726": {
			"op": "DUP1"
		},
		"5727": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"5729": {
			"op": "DUP10"
		},
		"5730": {
			"op": "DUP12"
		},
		"5731": {
			"op": "SUB"
		},
		"5732": {
			"op": "SLT"
		},
		"5733": {
			"op": "ISZERO"
		},
		"5734": {
			"op": "PUSH2",
			"value": "0x166D"
		},
		"5737": {
			"op": "JUMPI"
		},
		"5738": {
			"op": "DUP4"
		},
		"5739": {
			"op": "DUP5"
		},
		"5740": {
			"op": "REVERT"
		},
		"5741": {
			"op": "JUMPDEST"
		},
		"5742": {
			"op": "DUP9"
		},
		"5743": {
			"op": "CALLDATALOAD"
		},
		"5744": {
			"op": "PUSH8",
			"value": "0xFFFFFFFFFFFFFFFF"
		},
		"5753": {
			"op": "DUP1"
		},
		"5754": {
			"op": "DUP3"
		},
		"5755": {
			"op": "GT"
		},
		"5756": {
			"op": "ISZERO"
		},
		"5757": {
			"op": "PUSH2",
			"value": "0x1684"
		},
		"5760": {
			"op": "JUMPI"
		},
		"5761": {
			"op": "DUP6"
		},
		"5762": {
			"op": "DUP7"
		},
		"5763": {
			"op": "REVERT"
		},
		"5764": {
			"op": "JUMPDEST"
		},
		"5765": {
			"op": "PUSH2",
			"value": "0x1690"
		},
		"5768": {
			"op": "DUP13"
		},
		"5769": {
			"op": "DUP4"
		},
		"5770": {
			"op": "DUP14"
		},
		"5771": {
			"op": "ADD"
		},
		"5772": {
			"op": "PUSH2",
			"value": "0x14CB"
		},
		"5775": {
			"jump": "i",
			"op": "JUMP"
		},
		"5776": {
			"op": "JUMPDEST"
		},
		"5777": {
			"op": "SWAP1"
		},
		"5778": {
			"op": "SWAP11"
		},
		"5779": {
			"op": "POP"
		},
		"5780": {
			"op": "SWAP9"
		},
		"5781": {
			"op": "POP"
		},
		"5782": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"5784": {
			"op": "DUP12"
		},
		"5785": {
			"op": "ADD"
		},
		"5786": {
			"op": "CALLDATALOAD"
		},
		"5787": {
			"op": "SWAP2"
		},
		"5788": {
			"op": "POP"
		},
		"5789": {
			"op": "DUP1"
		},
		"5790": {
			"op": "DUP3"
		},
		"5791": {
			"op": "GT"
		},
		"5792": {
			"op": "ISZERO"
		},
		"5793": {
			"op": "PUSH2",
			"value": "0x16A8"
		},
		"5796": {
			"op": "JUMPI"
		},
		"5797": {
			"op": "DUP6"
		},
		"5798": {
			"op": "DUP7"
		},
		"5799": {
			"op": "REVERT"
		},
		"5800": {
			"op": "JUMPDEST"
		},
		"5801": {
			"op": "PUSH2",
			"value": "0x16B4"
		},
		"5804": {
			"op": "DUP13"
		},
		"5805": {
			"op": "DUP4"
		},
		"5806": {
			"op": "DUP14"
		},
		"5807": {
			"op": "ADD"
		},
		"5808": {
			"op": "PUSH2",
			"value": "0x14CB"
		},
		"5811": {
			"jump": "i",
			"op": "JUMP"
		},
		"5812": {
			"op": "JUMPDEST"
		},
		"5813": {
			"op": "SWAP1"
		},
		"5814": {
			"op": "SWAP9"
		},
		"5815": {
			"op": "POP"
		},
		"5816": {
			"op": "SWAP7"
		},
		"5817": {
			"op": "POP"
		},
		"5818": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"5820": {
			"op": "DUP12"
		},
		"5821": {
			"op": "ADD"
		},
		"5822": {
			"op": "CALLDATALOAD"
		},
		"5823": {
			"op": "SWAP6"
		},
		"5824": {
			"op": "POP"
		},
		"5825": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"5827": {
			"op": "DUP12"
		},
		"5828": {
			"op": "ADD"
		},
		"5829": {
			"op": "CALLDATALOAD"
		},
		"5830": {
			"op": "SWAP5"
		},
		"5831": {
			"op": "POP"
		},
		"5832": {
			"op": "PUSH1",
			"value": "0x80"
		},
		"5834": {
			"op": "DUP12"
		},
		"5835": {
			"op": "ADD"
		},
		"5836": {
			"op": "CALLDATALOAD"
		},
		"5837": {
			"op": "SWAP2"
		},
		"5838": {
			"op": "POP"
		},
		"5839": {
			"op": "DUP1"
		},
		"5840": {
			"op": "DUP3"
		},
		"5841": {
			"op": "GT"
		},
		"5842": {
			"op": "ISZERO"
		},
		"5843": {
			"op": "PUSH2",
			"value": "0x16DA"
		},
		"5846": {
			"op": "JUMPI"
		},
		"5847": {
			"op": "DUP4"
		},
		"5848": {
			"op": "DUP5"
		},
		"5849": {
			"op": "REVERT"
		},
		"5850": {
			"op": "JUMPDEST"
		},
		"5851": {
			"op": "POP"
		},
		"5852": {
			"op": "PUSH2",
			"value": "0x16E7"
		},
		"5855": {
			"op": "DUP12"
		},
		"5856": {
			"op": "DUP3"
		},
		"5857": {
			"op": "DUP13"
		},
		"5858": {
			"op": "ADD"
		},
		"5859": {
			"op": "PUSH2",
			"value": "0x14CB"
		},
		"5862": {
			"jump": "i",
			"op": "JUMP"
		},
		"5863": {
			"op": "JUMPDEST"
		},
		"5864": {
			"op": "SWAP10"
		},
		"5865": {
			"op": "SWAP13"
		},
		"5866": {
			"op": "SWAP9"
		},
		"5867": {
			"op": "SWAP12"
		},
		"5868": {
			"op": "POP"
		},
		"5869": {
			"op": "SWAP7"
		},
		"5870": {
			"op": "SWAP10"
		},
		"5871": {
			"op": "POP"
		},
		"5872": {
			"op": "SWAP5"
		},
		"5873": {
			"op": "SWAP8"
		},
		"5874": {
			"op": "SWAP4"
		},
		"5875": {
			"op": "SWAP7"
		},
		"5876": {
			"op": "SWAP3"
		},
		"5877": {
			"op": "SWAP6"
		},
		"5878": {
			"op": "SWAP5"
		},
		"5879": {
			"op": "POP"
		},
		"5880": {
			"op": "POP"
		},
		"5881": {
			"op": "POP"
		},
		"5882": {
			"jump": "o",
			"op": "JUMP"
		},
		"5883": {
			"op": "JUMPDEST"
		},
		"5884": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5886": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"5888": {
			"op": "DUP3"
		},
		"5889": {
			"op": "DUP5"
		},
		"5890": {
			"op": "SUB"
		},
		"5891": {
			"op": "SLT"
		},
		"5892": {
			"op": "ISZERO"
		},
		"5893": {
			"op": "PUSH2",
			"value": "0x170C"
		},
		"5896": {
			"op": "JUMPI"
		},
		"5897": {
			"op": "DUP1"
		},
		"5898": {
			"op": "DUP2"
		},
		"5899": {
			"op": "REVERT"
		},
		"5900": {
			"op": "JUMPDEST"
		},
		"5901": {
			"op": "DUP2"
		},
		"5902": {
			"op": "MLOAD"
		},
		"5903": {
			"op": "DUP1"
		},
		"5904": {
			"op": "ISZERO"
		},
		"5905": {
			"op": "ISZERO"
		},
		"5906": {
			"op": "DUP2"
		},
		"5907": {
			"op": "EQ"
		},
		"5908": {
			"op": "PUSH2",
			"value": "0x6FA"
		},
		"5911": {
			"op": "JUMPI"
		},
		"5912": {
			"op": "DUP2"
		},
		"5913": {
			"op": "DUP3"
		},
		"5914": {
			"op": "REVERT"
		},
		"5915": {
			"op": "JUMPDEST"
		},
		"5916": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5918": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"5920": {
			"op": "DUP3"
		},
		"5921": {
			"op": "DUP5"
		},
		"5922": {
			"op": "SUB"
		},
		"5923": {
			"op": "SLT"
		},
		"5924": {
			"op": "ISZERO"
		},
		"5925": {
			"op": "PUSH2",
			"value": "0x172C"
		},
		"5928": {
			"op": "JUMPI"
		},
		"5929": {
			"op": "DUP1"
		},
		"5930": {
			"op": "DUP2"
		},
		"5931": {
			"op": "REVERT"
		},
		"5932": {
			"op": "JUMPDEST"
		},
		"5933": {
			"op": "POP"
		},
		"5934": {
			"op": "CALLDATALOAD"
		},
		"5935": {
			"op": "SWAP2"
		},
		"5936": {
			"op": "SWAP1"
		},
		"5937": {
			"op": "POP"
		},
		"5938": {
			"jump": "o",
			"op": "JUMP"
		},
		"5939": {
			"op": "JUMPDEST"
		},
		"5940": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"5942": {
			"op": "DUP1"
		},
		"5943": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"5945": {
			"op": "DUP4"
		},
		"5946": {
			"op": "DUP6"
		},
		"5947": {
			"op": "SUB"
		},
		"5948": {
			"op": "SLT"
		},
		"5949": {
			"op": "ISZERO"
		},
		"5950": {
			"op": "PUSH2",
			"value": "0x1745"
		},
		"5953": {
			"op": "JUMPI"
		},
		"5954": {
			"op": "DUP2"
		},
		"5955": {
			"op": "DUP3"
		},
		"5956": {
			"op": "REVERT"
		},
		"5957": {
			"op": "JUMPDEST"
		},
		"5958": {
			"op": "DUP3"
		},
		"5959": {
			"op": "CALLDATALOAD"
		},
		"5960": {
			"op": "SWAP2"
		},
		"5961": {
			"op": "POP"
		},
		"5962": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"5964": {
			"op": "DUP4"
		},
		"5965": {
			"op": "ADD"
		},
		"5966": {
			"op": "CALLDATALOAD"
		},
		"5967": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"5969": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"5971": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"5973": {
			"op": "SHL"
		},
		"5974": {
			"op": "SUB"
		},
		"5975": {
			"op": "DUP2"
		},
		"5976": {
			"op": "AND"
		},
		"5977": {
			"op": "DUP2"
		},
		"5978": {
			"op": "EQ"
		},
		"5979": {
			"op": "PUSH2",
			"value": "0x1762"
		},
		"5982": {
			"op": "JUMPI"
		},
		"5983": {
			"op": "DUP2"
		},
		"5984": {
			"op": "DUP3"
		},
		"5985": {
			"op": "REVERT"
		},
		"5986": {
			"op": "JUMPDEST"
		},
		"5987": {
			"op": "DUP1"
		},
		"5988": {
			"op": "SWAP2"
		},
		"5989": {
			"op": "POP"
		},
		"5990": {
			"op": "POP"
		},
		"5991": {
			"op": "SWAP3"
		},
		"5992": {
			"op": "POP"
		},
		"5993": {
			"op": "SWAP3"
		},
		"5994": {
			"op": "SWAP1"
		},
		"5995": {
			"op": "POP"
		},
		"5996": {
			"jump": "o",
			"op": "JUMP"
		},
		"5997": {
			"op": "JUMPDEST"
		},
		"5998": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"6000": {
			"op": "DUP1"
		},
		"6001": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"6003": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"6005": {
			"op": "DUP5"
		},
		"6006": {
			"op": "DUP7"
		},
		"6007": {
			"op": "SUB"
		},
		"6008": {
			"op": "SLT"
		},
		"6009": {
			"op": "ISZERO"
		},
		"6010": {
			"op": "PUSH2",
			"value": "0x1781"
		},
		"6013": {
			"op": "JUMPI"
		},
		"6014": {
			"op": "DUP3"
		},
		"6015": {
			"op": "DUP4"
		},
		"6016": {
			"op": "REVERT"
		},
		"6017": {
			"op": "JUMPDEST"
		},
		"6018": {
			"op": "POP"
		},
		"6019": {
			"op": "POP"
		},
		"6020": {
			"op": "DUP2"
		},
		"6021": {
			"op": "CALLDATALOAD"
		},
		"6022": {
			"op": "SWAP4"
		},
		"6023": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6025": {
			"op": "DUP4"
		},
		"6026": {
			"op": "ADD"
		},
		"6027": {
			"op": "CALLDATALOAD"
		},
		"6028": {
			"op": "SWAP4"
		},
		"6029": {
			"op": "POP"
		},
		"6030": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6032": {
			"op": "SWAP1"
		},
		"6033": {
			"op": "SWAP3"
		},
		"6034": {
			"op": "ADD"
		},
		"6035": {
			"op": "CALLDATALOAD"
		},
		"6036": {
			"op": "SWAP2"
		},
		"6037": {
			"op": "SWAP1"
		},
		"6038": {
			"op": "POP"
		},
		"6039": {
			"jump": "o",
			"op": "JUMP"
		},
		"6040": {
			"op": "JUMPDEST"
		},
		"6041": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"6043": {
			"op": "DUP1"
		},
		"6044": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6046": {
			"op": "DUP4"
		},
		"6047": {
			"op": "DUP6"
		},
		"6048": {
			"op": "SUB"
		},
		"6049": {
			"op": "SLT"
		},
		"6050": {
			"op": "ISZERO"
		},
		"6051": {
			"op": "PUSH2",
			"value": "0x17AA"
		},
		"6054": {
			"op": "JUMPI"
		},
		"6055": {
			"op": "DUP2"
		},
		"6056": {
			"op": "DUP3"
		},
		"6057": {
			"op": "REVERT"
		},
		"6058": {
			"op": "JUMPDEST"
		},
		"6059": {
			"op": "POP"
		},
		"6060": {
			"op": "POP"
		},
		"6061": {
			"op": "DUP1"
		},
		"6062": {
			"op": "CALLDATALOAD"
		},
		"6063": {
			"op": "SWAP3"
		},
		"6064": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6066": {
			"op": "SWAP1"
		},
		"6067": {
			"op": "SWAP2"
		},
		"6068": {
			"op": "ADD"
		},
		"6069": {
			"op": "CALLDATALOAD"
		},
		"6070": {
			"op": "SWAP2"
		},
		"6071": {
			"op": "POP"
		},
		"6072": {
			"jump": "o",
			"op": "JUMP"
		},
		"6073": {
			"op": "JUMPDEST"
		},
		"6074": {
			"op": "DUP2"
		},
		"6075": {
			"op": "MSTORE"
		},
		"6076": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6078": {
			"op": "ADD"
		},
		"6079": {
			"op": "SWAP1"
		},
		"6080": {
			"jump": "o",
			"op": "JUMP"
		},
		"6081": {
			"op": "JUMPDEST"
		},
		"6082": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"6084": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"6086": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"6088": {
			"op": "SHL"
		},
		"6089": {
			"op": "SUB"
		},
		"6090": {
			"op": "AND"
		},
		"6091": {
			"op": "SWAP1"
		},
		"6092": {
			"op": "MSTORE"
		},
		"6093": {
			"jump": "o",
			"op": "JUMP"
		},
		"6094": {
			"op": "JUMPDEST"
		},
		"6095": {
			"op": "SWAP2"
		},
		"6096": {
			"op": "DUP3"
		},
		"6097": {
			"op": "MSTORE"
		},
		"6098": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6100": {
			"op": "DUP3"
		},
		"6101": {
			"op": "ADD"
		},
		"6102": {
			"op": "MSTORE"
		},
		"6103": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6105": {
			"op": "ADD"
		},
		"6106": {
			"op": "SWAP1"
		},
		"6107": {
			"jump": "o",
			"op": "JUMP"
		},
		"6108": {
			"op": "JUMPDEST"
		},
		"6109": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"6111": {
			"op": "DUP9"
		},
		"6112": {
			"op": "DUP3"
		},
		"6113": {
			"op": "MSTORE"
		},
		"6114": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6116": {
			"op": "PUSH12",
			"value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
		},
		"6129": {
			"op": "NOT"
		},
		"6130": {
			"op": "DUP10"
		},
		"6131": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"6133": {
			"op": "SHL"
		},
		"6134": {
			"op": "AND"
		},
		"6135": {
			"op": "DUP2"
		},
		"6136": {
			"op": "DUP5"
		},
		"6137": {
			"op": "ADD"
		},
		"6138": {
			"op": "MSTORE"
		},
		"6139": {
			"op": "DUP8"
		},
		"6140": {
			"op": "PUSH1",
			"value": "0x34"
		},
		"6142": {
			"op": "DUP5"
		},
		"6143": {
			"op": "ADD"
		},
		"6144": {
			"op": "MSTORE"
		},
		"6145": {
			"op": "PUSH1",
			"value": "0x54"
		},
		"6147": {
			"op": "DUP4"
		},
		"6148": {
			"op": "ADD"
		},
		"6149": {
			"op": "DUP8"
		},
		"6150": {
			"op": "DUP4"
		},
		"6151": {
			"op": "JUMPDEST"
		},
		"6152": {
			"op": "DUP9"
		},
		"6153": {
			"op": "DUP2"
		},
		"6154": {
			"op": "LT"
		},
		"6155": {
			"op": "ISZERO"
		},
		"6156": {
			"op": "PUSH2",
			"value": "0x1835"
		},
		"6159": {
			"op": "JUMPI"
		},
		"6160": {
			"op": "DUP2"
		},
		"6161": {
			"op": "DUP5"
		},
		"6162": {
			"op": "ADD"
		},
		"6163": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"6165": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"6167": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"6169": {
			"op": "SHL"
		},
		"6170": {
			"op": "SUB"
		},
		"6171": {
			"op": "PUSH2",
			"value": "0x1824"
		},
		"6174": {
			"op": "DUP3"
		},
		"6175": {
			"op": "DUP6"
		},
		"6176": {
			"op": "PUSH2",
			"value": "0x14B4"
		},
		"6179": {
			"jump": "i",
			"op": "JUMP"
		},
		"6180": {
			"op": "JUMPDEST"
		},
		"6181": {
			"op": "AND"
		},
		"6182": {
			"op": "DUP5"
		},
		"6183": {
			"op": "MSTORE"
		},
		"6184": {
			"op": "SWAP3"
		},
		"6185": {
			"op": "DUP5"
		},
		"6186": {
			"op": "ADD"
		},
		"6187": {
			"op": "SWAP3"
		},
		"6188": {
			"op": "SWAP2"
		},
		"6189": {
			"op": "POP"
		},
		"6190": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"6192": {
			"op": "ADD"
		},
		"6193": {
			"op": "PUSH2",
			"value": "0x1807"
		},
		"6196": {
			"op": "JUMP"
		},
		"6197": {
			"op": "JUMPDEST"
		},
		"6198": {
			"op": "POP"
		},
		"6199": {
			"op": "POP"
		},
		"6200": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"6202": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"6204": {
			"op": "PUSH1",
			"value": "0xFB"
		},
		"6206": {
			"op": "SHL"
		},
		"6207": {
			"op": "SUB"
		},
		"6208": {
			"op": "DUP6"
		},
		"6209": {
			"op": "GT"
		},
		"6210": {
			"op": "ISZERO"
		},
		"6211": {
			"op": "PUSH2",
			"value": "0x184A"
		},
		"6214": {
			"op": "JUMPI"
		},
		"6215": {
			"op": "DUP3"
		},
		"6216": {
			"op": "DUP4"
		},
		"6217": {
			"op": "REVERT"
		},
		"6218": {
			"op": "JUMPDEST"
		},
		"6219": {
			"op": "SWAP1"
		},
		"6220": {
			"op": "DUP5"
		},
		"6221": {
			"op": "MUL"
		},
		"6222": {
			"op": "SWAP1"
		},
		"6223": {
			"op": "DUP2"
		},
		"6224": {
			"op": "DUP7"
		},
		"6225": {
			"op": "DUP3"
		},
		"6226": {
			"op": "CALLDATACOPY"
		},
		"6227": {
			"op": "ADD"
		},
		"6228": {
			"op": "SWAP1"
		},
		"6229": {
			"op": "DUP2"
		},
		"6230": {
			"op": "MSTORE"
		},
		"6231": {
			"op": "SWAP9"
		},
		"6232": {
			"op": "SWAP8"
		},
		"6233": {
			"op": "POP"
		},
		"6234": {
			"op": "POP"
		},
		"6235": {
			"op": "POP"
		},
		"6236": {
			"op": "POP"
		},
		"6237": {
			"op": "POP"
		},
		"6238": {
			"op": "POP"
		},
		"6239": {
			"op": "POP"
		},
		"6240": {
			"op": "POP"
		},
		"6241": {
			"jump": "o",
			"op": "JUMP"
		},
		"6242": {
			"op": "JUMPDEST"
		},
		"6243": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"6245": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"6247": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"6249": {
			"op": "SHL"
		},
		"6250": {
			"op": "SUB"
		},
		"6251": {
			"op": "SWAP2"
		},
		"6252": {
			"op": "SWAP1"
		},
		"6253": {
			"op": "SWAP2"
		},
		"6254": {
			"op": "AND"
		},
		"6255": {
			"op": "DUP2"
		},
		"6256": {
			"op": "MSTORE"
		},
		"6257": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6259": {
			"op": "ADD"
		},
		"6260": {
			"op": "SWAP1"
		},
		"6261": {
			"jump": "o",
			"op": "JUMP"
		},
		"6262": {
			"op": "JUMPDEST"
		},
		"6263": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"6265": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"6267": {
			"op": "PUSH1",
			"value": "0xA0"
		},
		"6269": {
			"op": "SHL"
		},
		"6270": {
			"op": "SUB"
		},
		"6271": {
			"op": "SWAP3"
		},
		"6272": {
			"op": "SWAP1"
		},
		"6273": {
			"op": "SWAP3"
		},
		"6274": {
			"op": "AND"
		},
		"6275": {
			"op": "DUP3"
		},
		"6276": {
			"op": "MSTORE"
		},
		"6277": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6279": {
			"op": "DUP3"
		},
		"6280": {
			"op": "ADD"
		},
		"6281": {
			"op": "MSTORE"
		},
		"6282": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6284": {
			"op": "ADD"
		},
		"6285": {
			"op": "SWAP1"
		},
		"6286": {
			"jump": "o",
			"op": "JUMP"
		},
		"6287": {
			"op": "JUMPDEST"
		},
		"6288": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6290": {
			"op": "DUP1"
		},
		"6291": {
			"op": "DUP3"
		},
		"6292": {
			"op": "MSTORE"
		},
		"6293": {
			"op": "DUP4"
		},
		"6294": {
			"op": "MLOAD"
		},
		"6295": {
			"op": "SWAP1"
		},
		"6296": {
			"op": "DUP3"
		},
		"6297": {
			"op": "ADD"
		},
		"6298": {
			"op": "DUP2"
		},
		"6299": {
			"op": "SWAP1"
		},
		"6300": {
			"op": "MSTORE"
		},
		"6301": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"6303": {
			"op": "SWAP1"
		},
		"6304": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6306": {
			"op": "SWAP1"
		},
		"6307": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"6309": {
			"op": "DUP5"
		},
		"6310": {
			"op": "ADD"
		},
		"6311": {
			"op": "SWAP1"
		},
		"6312": {
			"op": "DUP3"
		},
		"6313": {
			"op": "DUP8"
		},
		"6314": {
			"op": "ADD"
		},
		"6315": {
			"op": "DUP5"
		},
		"6316": {
			"op": "JUMPDEST"
		},
		"6317": {
			"op": "DUP3"
		},
		"6318": {
			"op": "DUP2"
		},
		"6319": {
			"op": "LT"
		},
		"6320": {
			"op": "ISZERO"
		},
		"6321": {
			"op": "PUSH2",
			"value": "0x18CF"
		},
		"6324": {
			"op": "JUMPI"
		},
		"6325": {
			"op": "PUSH2",
			"value": "0x18BF"
		},
		"6328": {
			"op": "DUP5"
		},
		"6329": {
			"op": "DUP4"
		},
		"6330": {
			"op": "MLOAD"
		},
		"6331": {
			"op": "PUSH2",
			"value": "0x17C1"
		},
		"6334": {
			"jump": "i",
			"op": "JUMP"
		},
		"6335": {
			"op": "JUMPDEST"
		},
		"6336": {
			"op": "SWAP3"
		},
		"6337": {
			"op": "DUP5"
		},
		"6338": {
			"op": "ADD"
		},
		"6339": {
			"op": "SWAP3"
		},
		"6340": {
			"op": "SWAP1"
		},
		"6341": {
			"op": "DUP5"
		},
		"6342": {
			"op": "ADD"
		},
		"6343": {
			"op": "SWAP1"
		},
		"6344": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"6346": {
			"op": "ADD"
		},
		"6347": {
			"op": "PUSH2",
			"value": "0x18AC"
		},
		"6350": {
			"op": "JUMP"
		},
		"6351": {
			"op": "JUMPDEST"
		},
		"6352": {
			"op": "POP"
		},
		"6353": {
			"op": "POP"
		},
		"6354": {
			"op": "POP"
		},
		"6355": {
			"op": "DUP4"
		},
		"6356": {
			"op": "DUP2"
		},
		"6357": {
			"op": "SUB"
		},
		"6358": {
			"op": "DUP3"
		},
		"6359": {
			"op": "DUP6"
		},
		"6360": {
			"op": "ADD"
		},
		"6361": {
			"op": "MSTORE"
		},
		"6362": {
			"op": "DUP1"
		},
		"6363": {
			"op": "DUP6"
		},
		"6364": {
			"op": "MLOAD"
		},
		"6365": {
			"op": "PUSH2",
			"value": "0x18E6"
		},
		"6368": {
			"op": "DUP2"
		},
		"6369": {
			"op": "DUP5"
		},
		"6370": {
			"op": "PUSH2",
			"value": "0x1928"
		},
		"6373": {
			"jump": "i",
			"op": "JUMP"
		},
		"6374": {
			"op": "JUMPDEST"
		},
		"6375": {
			"op": "SWAP2"
		},
		"6376": {
			"op": "POP"
		},
		"6377": {
			"op": "DUP4"
		},
		"6378": {
			"op": "DUP8"
		},
		"6379": {
			"op": "ADD"
		},
		"6380": {
			"op": "SWAP3"
		},
		"6381": {
			"op": "POP"
		},
		"6382": {
			"op": "DUP5"
		},
		"6383": {
			"op": "JUMPDEST"
		},
		"6384": {
			"op": "DUP2"
		},
		"6385": {
			"op": "DUP2"
		},
		"6386": {
			"op": "LT"
		},
		"6387": {
			"op": "ISZERO"
		},
		"6388": {
			"op": "PUSH2",
			"value": "0x1910"
		},
		"6391": {
			"op": "JUMPI"
		},
		"6392": {
			"op": "PUSH2",
			"value": "0x1902"
		},
		"6395": {
			"op": "DUP4"
		},
		"6396": {
			"op": "DUP6"
		},
		"6397": {
			"op": "MLOAD"
		},
		"6398": {
			"op": "PUSH2",
			"value": "0x17B9"
		},
		"6401": {
			"jump": "i",
			"op": "JUMP"
		},
		"6402": {
			"op": "JUMPDEST"
		},
		"6403": {
			"op": "SWAP4"
		},
		"6404": {
			"op": "DUP6"
		},
		"6405": {
			"op": "ADD"
		},
		"6406": {
			"op": "SWAP4"
		},
		"6407": {
			"op": "SWAP3"
		},
		"6408": {
			"op": "POP"
		},
		"6409": {
			"op": "PUSH1",
			"value": "0x1"
		},
		"6411": {
			"op": "ADD"
		},
		"6412": {
			"op": "PUSH2",
			"value": "0x18EF"
		},
		"6415": {
			"op": "JUMP"
		},
		"6416": {
			"op": "JUMPDEST"
		},
		"6417": {
			"op": "POP"
		},
		"6418": {
			"op": "SWAP1"
		},
		"6419": {
			"op": "SWAP8"
		},
		"6420": {
			"op": "SWAP7"
		},
		"6421": {
			"op": "POP"
		},
		"6422": {
			"op": "POP"
		},
		"6423": {
			"op": "POP"
		},
		"6424": {
			"op": "POP"
		},
		"6425": {
			"op": "POP"
		},
		"6426": {
			"op": "POP"
		},
		"6427": {
			"op": "POP"
		},
		"6428": {
			"jump": "o",
			"op": "JUMP"
		},
		"6429": {
			"op": "JUMPDEST"
		},
		"6430": {
			"op": "SWAP1"
		},
		"6431": {
			"op": "ISZERO"
		},
		"6432": {
			"op": "ISZERO"
		},
		"6433": {
			"op": "DUP2"
		},
		"6434": {
			"op": "MSTORE"
		},
		"6435": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6437": {
			"op": "ADD"
		},
		"6438": {
			"op": "SWAP1"
		},
		"6439": {
			"jump": "o",
			"op": "JUMP"
		},
		"6440": {
			"op": "JUMPDEST"
		},
		"6441": {
			"op": "SWAP1"
		},
		"6442": {
			"op": "DUP2"
		},
		"6443": {
			"op": "MSTORE"
		},
		"6444": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6446": {
			"op": "ADD"
		},
		"6447": {
			"op": "SWAP1"
		},
		"6448": {
			"jump": "o",
			"op": "JUMP"
		},
		"6449": {
			"op": "JUMPDEST"
		},
		"6450": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"6452": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6454": {
			"op": "DUP1"
		},
		"6455": {
			"op": "DUP4"
		},
		"6456": {
			"op": "MSTORE"
		},
		"6457": {
			"op": "DUP4"
		},
		"6458": {
			"op": "MLOAD"
		},
		"6459": {
			"op": "DUP1"
		},
		"6460": {
			"op": "DUP3"
		},
		"6461": {
			"op": "DUP6"
		},
		"6462": {
			"op": "ADD"
		},
		"6463": {
			"op": "MSTORE"
		},
		"6464": {
			"op": "DUP3"
		},
		"6465": {
			"op": "JUMPDEST"
		},
		"6466": {
			"op": "DUP2"
		},
		"6467": {
			"op": "DUP2"
		},
		"6468": {
			"op": "LT"
		},
		"6469": {
			"op": "ISZERO"
		},
		"6470": {
			"op": "PUSH2",
			"value": "0x195D"
		},
		"6473": {
			"op": "JUMPI"
		},
		"6474": {
			"op": "DUP6"
		},
		"6475": {
			"op": "DUP2"
		},
		"6476": {
			"op": "ADD"
		},
		"6477": {
			"op": "DUP4"
		},
		"6478": {
			"op": "ADD"
		},
		"6479": {
			"op": "MLOAD"
		},
		"6480": {
			"op": "DUP6"
		},
		"6481": {
			"op": "DUP3"
		},
		"6482": {
			"op": "ADD"
		},
		"6483": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6485": {
			"op": "ADD"
		},
		"6486": {
			"op": "MSTORE"
		},
		"6487": {
			"op": "DUP3"
		},
		"6488": {
			"op": "ADD"
		},
		"6489": {
			"op": "PUSH2",
			"value": "0x1941"
		},
		"6492": {
			"op": "JUMP"
		},
		"6493": {
			"op": "JUMPDEST"
		},
		"6494": {
			"op": "DUP2"
		},
		"6495": {
			"op": "DUP2"
		},
		"6496": {
			"op": "GT"
		},
		"6497": {
			"op": "ISZERO"
		},
		"6498": {
			"op": "PUSH2",
			"value": "0x196E"
		},
		"6501": {
			"op": "JUMPI"
		},
		"6502": {
			"op": "DUP4"
		},
		"6503": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6505": {
			"op": "DUP4"
		},
		"6506": {
			"op": "DUP8"
		},
		"6507": {
			"op": "ADD"
		},
		"6508": {
			"op": "ADD"
		},
		"6509": {
			"op": "MSTORE"
		},
		"6510": {
			"op": "JUMPDEST"
		},
		"6511": {
			"op": "POP"
		},
		"6512": {
			"op": "PUSH1",
			"value": "0x1F"
		},
		"6514": {
			"op": "ADD"
		},
		"6515": {
			"op": "PUSH1",
			"value": "0x1F"
		},
		"6517": {
			"op": "NOT"
		},
		"6518": {
			"op": "AND"
		},
		"6519": {
			"op": "SWAP3"
		},
		"6520": {
			"op": "SWAP1"
		},
		"6521": {
			"op": "SWAP3"
		},
		"6522": {
			"op": "ADD"
		},
		"6523": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6525": {
			"op": "ADD"
		},
		"6526": {
			"op": "SWAP4"
		},
		"6527": {
			"op": "SWAP3"
		},
		"6528": {
			"op": "POP"
		},
		"6529": {
			"op": "POP"
		},
		"6530": {
			"op": "POP"
		},
		"6531": {
			"jump": "o",
			"op": "JUMP"
		},
		"6532": {
			"op": "JUMPDEST"
		},
		"6533": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6535": {
			"op": "DUP1"
		},
		"6536": {
			"op": "DUP3"
		},
		"6537": {
			"op": "MSTORE"
		},
		"6538": {
			"op": "PUSH1",
			"value": "0x22"
		},
		"6540": {
			"op": "SWAP1"
		},
		"6541": {
			"op": "DUP3"
		},
		"6542": {
			"op": "ADD"
		},
		"6543": {
			"op": "MSTORE"
		},
		"6544": {
			"op": "PUSH32",
			"value": "0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E"
		},
		"6577": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6579": {
			"op": "DUP3"
		},
		"6580": {
			"op": "ADD"
		},
		"6581": {
			"op": "MSTORE"
		},
		"6582": {
			"op": "PUSH2",
			"value": "0x6473"
		},
		"6585": {
			"op": "PUSH1",
			"value": "0xF0"
		},
		"6587": {
			"op": "SHL"
		},
		"6588": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"6590": {
			"op": "DUP3"
		},
		"6591": {
			"op": "ADD"
		},
		"6592": {
			"op": "MSTORE"
		},
		"6593": {
			"op": "PUSH1",
			"value": "0x80"
		},
		"6595": {
			"op": "ADD"
		},
		"6596": {
			"op": "SWAP1"
		},
		"6597": {
			"jump": "o",
			"op": "JUMP"
		},
		"6598": {
			"op": "JUMPDEST"
		},
		"6599": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6601": {
			"op": "DUP1"
		},
		"6602": {
			"op": "DUP3"
		},
		"6603": {
			"op": "MSTORE"
		},
		"6604": {
			"op": "PUSH1",
			"value": "0x2F"
		},
		"6606": {
			"op": "SWAP1"
		},
		"6607": {
			"op": "DUP3"
		},
		"6608": {
			"op": "ADD"
		},
		"6609": {
			"op": "MSTORE"
		},
		"6610": {
			"op": "PUSH32",
			"value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
		},
		"6643": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6645": {
			"op": "DUP3"
		},
		"6646": {
			"op": "ADD"
		},
		"6647": {
			"op": "MSTORE"
		},
		"6648": {
			"op": "PUSH15",
			"value": "0x818591B5A5B881D1BC819DC985B9D"
		},
		"6664": {
			"op": "PUSH1",
			"value": "0x8A"
		},
		"6666": {
			"op": "SHL"
		},
		"6667": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"6669": {
			"op": "DUP3"
		},
		"6670": {
			"op": "ADD"
		},
		"6671": {
			"op": "MSTORE"
		},
		"6672": {
			"op": "PUSH1",
			"value": "0x80"
		},
		"6674": {
			"op": "ADD"
		},
		"6675": {
			"op": "SWAP1"
		},
		"6676": {
			"jump": "o",
			"op": "JUMP"
		},
		"6677": {
			"op": "JUMPDEST"
		},
		"6678": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6680": {
			"op": "DUP1"
		},
		"6681": {
			"op": "DUP3"
		},
		"6682": {
			"op": "MSTORE"
		},
		"6683": {
			"op": "PUSH1",
			"value": "0x14"
		},
		"6685": {
			"op": "SWAP1"
		},
		"6686": {
			"op": "DUP3"
		},
		"6687": {
			"op": "ADD"
		},
		"6688": {
			"op": "MSTORE"
		},
		"6689": {
			"op": "PUSH20",
			"value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
		},
		"6710": {
			"op": "PUSH1",
			"value": "0x62"
		},
		"6712": {
			"op": "SHL"
		},
		"6713": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6715": {
			"op": "DUP3"
		},
		"6716": {
			"op": "ADD"
		},
		"6717": {
			"op": "MSTORE"
		},
		"6718": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"6720": {
			"op": "ADD"
		},
		"6721": {
			"op": "SWAP1"
		},
		"6722": {
			"jump": "o",
			"op": "JUMP"
		},
		"6723": {
			"op": "JUMPDEST"
		},
		"6724": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6726": {
			"op": "DUP1"
		},
		"6727": {
			"op": "DUP3"
		},
		"6728": {
			"op": "MSTORE"
		},
		"6729": {
			"op": "PUSH1",
			"value": "0xF"
		},
		"6731": {
			"op": "SWAP1"
		},
		"6732": {
			"op": "DUP3"
		},
		"6733": {
			"op": "ADD"
		},
		"6734": {
			"op": "MSTORE"
		},
		"6735": {
			"op": "PUSH15",
			"value": "0x151C985B9CD9995C8819985A5B1959"
		},
		"6751": {
			"op": "PUSH1",
			"value": "0x8A"
		},
		"6753": {
			"op": "SHL"
		},
		"6754": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6756": {
			"op": "DUP3"
		},
		"6757": {
			"op": "ADD"
		},
		"6758": {
			"op": "MSTORE"
		},
		"6759": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"6761": {
			"op": "ADD"
		},
		"6762": {
			"op": "SWAP1"
		},
		"6763": {
			"jump": "o",
			"op": "JUMP"
		},
		"6764": {
			"op": "JUMPDEST"
		},
		"6765": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6767": {
			"op": "DUP1"
		},
		"6768": {
			"op": "DUP3"
		},
		"6769": {
			"op": "MSTORE"
		},
		"6770": {
			"op": "PUSH1",
			"value": "0x1B"
		},
		"6772": {
			"op": "SWAP1"
		},
		"6773": {
			"op": "DUP3"
		},
		"6774": {
			"op": "ADD"
		},
		"6775": {
			"op": "MSTORE"
		},
		"6776": {
			"op": "PUSH32",
			"value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
		},
		"6809": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6811": {
			"op": "DUP3"
		},
		"6812": {
			"op": "ADD"
		},
		"6813": {
			"op": "MSTORE"
		},
		"6814": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"6816": {
			"op": "ADD"
		},
		"6817": {
			"op": "SWAP1"
		},
		"6818": {
			"jump": "o",
			"op": "JUMP"
		},
		"6819": {
			"op": "JUMPDEST"
		},
		"6820": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6822": {
			"op": "DUP1"
		},
		"6823": {
			"op": "DUP3"
		},
		"6824": {
			"op": "MSTORE"
		},
		"6825": {
			"op": "PUSH1",
			"value": "0xE"
		},
		"6827": {
			"op": "SWAP1"
		},
		"6828": {
			"op": "DUP3"
		},
		"6829": {
			"op": "ADD"
		},
		"6830": {
			"op": "MSTORE"
		},
		"6831": {
			"op": "PUSH14",
			"value": "0x125B98DBDC9C9958DD081C9BDBDD"
		},
		"6846": {
			"op": "PUSH1",
			"value": "0x92"
		},
		"6848": {
			"op": "SHL"
		},
		"6849": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6851": {
			"op": "DUP3"
		},
		"6852": {
			"op": "ADD"
		},
		"6853": {
			"op": "MSTORE"
		},
		"6854": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"6856": {
			"op": "ADD"
		},
		"6857": {
			"op": "SWAP1"
		},
		"6858": {
			"jump": "o",
			"op": "JUMP"
		},
		"6859": {
			"op": "JUMPDEST"
		},
		"6860": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6862": {
			"op": "DUP1"
		},
		"6863": {
			"op": "DUP3"
		},
		"6864": {
			"op": "MSTORE"
		},
		"6865": {
			"op": "PUSH1",
			"value": "0x30"
		},
		"6867": {
			"op": "SWAP1"
		},
		"6868": {
			"op": "DUP3"
		},
		"6869": {
			"op": "ADD"
		},
		"6870": {
			"op": "MSTORE"
		},
		"6871": {
			"op": "PUSH32",
			"value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
		},
		"6904": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6906": {
			"op": "DUP3"
		},
		"6907": {
			"op": "ADD"
		},
		"6908": {
			"op": "MSTORE"
		},
		"6909": {
			"op": "PUSH16",
			"value": "0x2061646D696E20746F207265766F6B65"
		},
		"6926": {
			"op": "PUSH1",
			"value": "0x80"
		},
		"6928": {
			"op": "SHL"
		},
		"6929": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"6931": {
			"op": "DUP3"
		},
		"6932": {
			"op": "ADD"
		},
		"6933": {
			"op": "MSTORE"
		},
		"6934": {
			"op": "PUSH1",
			"value": "0x80"
		},
		"6936": {
			"op": "ADD"
		},
		"6937": {
			"op": "SWAP1"
		},
		"6938": {
			"jump": "o",
			"op": "JUMP"
		},
		"6939": {
			"op": "JUMPDEST"
		},
		"6940": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6942": {
			"op": "DUP1"
		},
		"6943": {
			"op": "DUP3"
		},
		"6944": {
			"op": "MSTORE"
		},
		"6945": {
			"op": "PUSH1",
			"value": "0x10"
		},
		"6947": {
			"op": "SWAP1"
		},
		"6948": {
			"op": "DUP3"
		},
		"6949": {
			"op": "ADD"
		},
		"6950": {
			"op": "MSTORE"
		},
		"6951": {
			"op": "PUSH16",
			"value": "0x14185D5CD8589B194E881C185D5CD959"
		},
		"6968": {
			"op": "PUSH1",
			"value": "0x82"
		},
		"6970": {
			"op": "SHL"
		},
		"6971": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"6973": {
			"op": "DUP3"
		},
		"6974": {
			"op": "ADD"
		},
		"6975": {
			"op": "MSTORE"
		},
		"6976": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"6978": {
			"op": "ADD"
		},
		"6979": {
			"op": "SWAP1"
		},
		"6980": {
			"jump": "o",
			"op": "JUMP"
		},
		"6981": {
			"op": "JUMPDEST"
		},
		"6982": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"6984": {
			"op": "DUP1"
		},
		"6985": {
			"op": "DUP3"
		},
		"6986": {
			"op": "MSTORE"
		},
		"6987": {
			"op": "PUSH1",
			"value": "0x16"
		},
		"6989": {
			"op": "SWAP1"
		},
		"6990": {
			"op": "DUP3"
		},
		"6991": {
			"op": "ADD"
		},
		"6992": {
			"op": "MSTORE"
		},
		"6993": {
			"op": "PUSH22",
			"value": "0x92DCC6DEE4E4CAC6E840C6DEDCE8CADCE840D0C2E6D"
		},
		"7016": {
			"op": "PUSH1",
			"value": "0x53"
		},
		"7018": {
			"op": "SHL"
		},
		"7019": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"7021": {
			"op": "DUP3"
		},
		"7022": {
			"op": "ADD"
		},
		"7023": {
			"op": "MSTORE"
		},
		"7024": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"7026": {
			"op": "ADD"
		},
		"7027": {
			"op": "SWAP1"
		},
		"7028": {
			"jump": "o",
			"op": "JUMP"
		},
		"7029": {
			"op": "JUMPDEST"
		},
		"7030": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"7032": {
			"op": "DUP1"
		},
		"7033": {
			"op": "DUP3"
		},
		"7034": {
			"op": "MSTORE"
		},
		"7035": {
			"op": "PUSH1",
			"value": "0x2E"
		},
		"7037": {
			"op": "SWAP1"
		},
		"7038": {
			"op": "DUP3"
		},
		"7039": {
			"op": "ADD"
		},
		"7040": {
			"op": "MSTORE"
		},
		"7041": {
			"op": "PUSH32",
			"value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
		},
		"7074": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"7076": {
			"op": "DUP3"
		},
		"7077": {
			"op": "ADD"
		},
		"7078": {
			"op": "MSTORE"
		},
		"7079": {
			"op": "PUSH14",
			"value": "0x191E481A5B9A5D1A585B1A5E9959"
		},
		"7094": {
			"op": "PUSH1",
			"value": "0x92"
		},
		"7096": {
			"op": "SHL"
		},
		"7097": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"7099": {
			"op": "DUP3"
		},
		"7100": {
			"op": "ADD"
		},
		"7101": {
			"op": "MSTORE"
		},
		"7102": {
			"op": "PUSH1",
			"value": "0x80"
		},
		"7104": {
			"op": "ADD"
		},
		"7105": {
			"op": "SWAP1"
		},
		"7106": {
			"jump": "o",
			"op": "JUMP"
		},
		"7107": {
			"op": "JUMPDEST"
		},
		"7108": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"7110": {
			"op": "DUP1"
		},
		"7111": {
			"op": "DUP3"
		},
		"7112": {
			"op": "MSTORE"
		},
		"7113": {
			"op": "PUSH1",
			"value": "0xF"
		},
		"7115": {
			"op": "SWAP1"
		},
		"7116": {
			"op": "DUP3"
		},
		"7117": {
			"op": "ADD"
		},
		"7118": {
			"op": "MSTORE"
		},
		"7119": {
			"op": "PUSH15",
			"value": "0x37B7363CA937B7BA2AB83230BA32B9"
		},
		"7135": {
			"op": "PUSH1",
			"value": "0x89"
		},
		"7137": {
			"op": "SHL"
		},
		"7138": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"7140": {
			"op": "DUP3"
		},
		"7141": {
			"op": "ADD"
		},
		"7142": {
			"op": "MSTORE"
		},
		"7143": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"7145": {
			"op": "ADD"
		},
		"7146": {
			"op": "SWAP1"
		},
		"7147": {
			"jump": "o",
			"op": "JUMP"
		},
		"7148": {
			"op": "JUMPDEST"
		},
		"7149": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"7151": {
			"op": "DUP1"
		},
		"7152": {
			"op": "DUP3"
		},
		"7153": {
			"op": "MSTORE"
		},
		"7154": {
			"op": "PUSH1",
			"value": "0xD"
		},
		"7156": {
			"op": "SWAP1"
		},
		"7157": {
			"op": "DUP3"
		},
		"7158": {
			"op": "ADD"
		},
		"7159": {
			"op": "MSTORE"
		},
		"7160": {
			"op": "PUSH13",
			"value": "0x496E76616C6964206379636C65"
		},
		"7174": {
			"op": "PUSH1",
			"value": "0x98"
		},
		"7176": {
			"op": "SHL"
		},
		"7177": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"7179": {
			"op": "DUP3"
		},
		"7180": {
			"op": "ADD"
		},
		"7181": {
			"op": "MSTORE"
		},
		"7182": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"7184": {
			"op": "ADD"
		},
		"7185": {
			"op": "SWAP1"
		},
		"7186": {
			"jump": "o",
			"op": "JUMP"
		},
		"7187": {
			"op": "JUMPDEST"
		},
		"7188": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"7190": {
			"op": "DUP1"
		},
		"7191": {
			"op": "DUP3"
		},
		"7192": {
			"op": "MSTORE"
		},
		"7193": {
			"op": "PUSH1",
			"value": "0x17"
		},
		"7195": {
			"op": "SWAP1"
		},
		"7196": {
			"op": "DUP3"
		},
		"7197": {
			"op": "ADD"
		},
		"7198": {
			"op": "MSTORE"
		},
		"7199": {
			"op": "PUSH32",
			"value": "0x436C61696D656420616D6F756E74206D69736D61746368000000000000000000"
		},
		"7232": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"7234": {
			"op": "DUP3"
		},
		"7235": {
			"op": "ADD"
		},
		"7236": {
			"op": "MSTORE"
		},
		"7237": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"7239": {
			"op": "ADD"
		},
		"7240": {
			"op": "SWAP1"
		},
		"7241": {
			"jump": "o",
			"op": "JUMP"
		},
		"7242": {
			"op": "JUMPDEST"
		},
		"7243": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"7245": {
			"op": "DUP1"
		},
		"7246": {
			"op": "DUP3"
		},
		"7247": {
			"op": "MSTORE"
		},
		"7248": {
			"op": "PUSH1",
			"value": "0xF"
		},
		"7250": {
			"op": "SWAP1"
		},
		"7251": {
			"op": "DUP3"
		},
		"7252": {
			"op": "ADD"
		},
		"7253": {
			"op": "MSTORE"
		},
		"7254": {
			"op": "PUSH15",
			"value": "0x45786365737369766520636C61696D"
		},
		"7270": {
			"op": "PUSH1",
			"value": "0x88"
		},
		"7272": {
			"op": "SHL"
		},
		"7273": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"7275": {
			"op": "DUP3"
		},
		"7276": {
			"op": "ADD"
		},
		"7277": {
			"op": "MSTORE"
		},
		"7278": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"7280": {
			"op": "ADD"
		},
		"7281": {
			"op": "SWAP1"
		},
		"7282": {
			"jump": "o",
			"op": "JUMP"
		},
		"7283": {
			"op": "JUMPDEST"
		},
		"7284": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"7286": {
			"op": "DUP1"
		},
		"7287": {
			"op": "DUP3"
		},
		"7288": {
			"op": "MSTORE"
		},
		"7289": {
			"op": "PUSH1",
			"value": "0xC"
		},
		"7291": {
			"op": "SWAP1"
		},
		"7292": {
			"op": "DUP3"
		},
		"7293": {
			"op": "ADD"
		},
		"7294": {
			"op": "MSTORE"
		},
		"7295": {
			"op": "PUSH12",
			"value": "0x37B7363CA3BAB0B93234B0B7"
		},
		"7308": {
			"op": "PUSH1",
			"value": "0xA1"
		},
		"7310": {
			"op": "SHL"
		},
		"7311": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"7313": {
			"op": "DUP3"
		},
		"7314": {
			"op": "ADD"
		},
		"7315": {
			"op": "MSTORE"
		},
		"7316": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"7318": {
			"op": "ADD"
		},
		"7319": {
			"op": "SWAP1"
		},
		"7320": {
			"jump": "o",
			"op": "JUMP"
		},
		"7321": {
			"op": "JUMPDEST"
		},
		"7322": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"7324": {
			"op": "DUP1"
		},
		"7325": {
			"op": "DUP3"
		},
		"7326": {
			"op": "MSTORE"
		},
		"7327": {
			"op": "PUSH1",
			"value": "0xD"
		},
		"7329": {
			"op": "SWAP1"
		},
		"7330": {
			"op": "DUP3"
		},
		"7331": {
			"op": "ADD"
		},
		"7332": {
			"op": "MSTORE"
		},
		"7333": {
			"op": "PUSH13",
			"value": "0x24B73B30B634B210383937B7B3"
		},
		"7347": {
			"op": "PUSH1",
			"value": "0x99"
		},
		"7349": {
			"op": "SHL"
		},
		"7350": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"7352": {
			"op": "DUP3"
		},
		"7353": {
			"op": "ADD"
		},
		"7354": {
			"op": "MSTORE"
		},
		"7355": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"7357": {
			"op": "ADD"
		},
		"7358": {
			"op": "SWAP1"
		},
		"7359": {
			"jump": "o",
			"op": "JUMP"
		},
		"7360": {
			"op": "JUMPDEST"
		},
		"7361": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"7363": {
			"op": "DUP1"
		},
		"7364": {
			"op": "DUP3"
		},
		"7365": {
			"op": "MSTORE"
		},
		"7366": {
			"op": "PUSH1",
			"value": "0xF"
		},
		"7368": {
			"op": "SWAP1"
		},
		"7369": {
			"op": "DUP3"
		},
		"7370": {
			"op": "ADD"
		},
		"7371": {
			"op": "MSTORE"
		},
		"7372": {
			"op": "PUSH15",
			"value": "0x496E636F7272656374206379636C65"
		},
		"7388": {
			"op": "PUSH1",
			"value": "0x88"
		},
		"7390": {
			"op": "SHL"
		},
		"7391": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"7393": {
			"op": "DUP3"
		},
		"7394": {
			"op": "ADD"
		},
		"7395": {
			"op": "MSTORE"
		},
		"7396": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"7398": {
			"op": "ADD"
		},
		"7399": {
			"op": "SWAP1"
		},
		"7400": {
			"jump": "o",
			"op": "JUMP"
		},
		"7401": {
			"op": "JUMPDEST"
		},
		"7402": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"7404": {
			"op": "DUP1"
		},
		"7405": {
			"op": "DUP3"
		},
		"7406": {
			"op": "MSTORE"
		},
		"7407": {
			"op": "PUSH1",
			"value": "0x2F"
		},
		"7409": {
			"op": "SWAP1"
		},
		"7410": {
			"op": "DUP3"
		},
		"7411": {
			"op": "ADD"
		},
		"7412": {
			"op": "MSTORE"
		},
		"7413": {
			"op": "PUSH32",
			"value": "0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
		},
		"7446": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"7448": {
			"op": "DUP3"
		},
		"7449": {
			"op": "ADD"
		},
		"7450": {
			"op": "MSTORE"
		},
		"7451": {
			"op": "PUSH15",
			"value": "0x103937B632B9903337B91039B2B633"
		},
		"7467": {
			"op": "PUSH1",
			"value": "0x89"
		},
		"7469": {
			"op": "SHL"
		},
		"7470": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"7472": {
			"op": "DUP3"
		},
		"7473": {
			"op": "ADD"
		},
		"7474": {
			"op": "MSTORE"
		},
		"7475": {
			"op": "PUSH1",
			"value": "0x80"
		},
		"7477": {
			"op": "ADD"
		},
		"7478": {
			"op": "SWAP1"
		},
		"7479": {
			"jump": "o",
			"op": "JUMP"
		},
		"7480": {
			"op": "JUMPDEST"
		},
		"7481": {
			"op": "DUP2"
		},
		"7482": {
			"op": "MLOAD"
		},
		"7483": {
			"op": "DUP2"
		},
		"7484": {
			"op": "MSTORE"
		},
		"7485": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"7487": {
			"op": "DUP1"
		},
		"7488": {
			"op": "DUP4"
		},
		"7489": {
			"op": "ADD"
		},
		"7490": {
			"op": "MLOAD"
		},
		"7491": {
			"op": "SWAP1"
		},
		"7492": {
			"op": "DUP3"
		},
		"7493": {
			"op": "ADD"
		},
		"7494": {
			"op": "MSTORE"
		},
		"7495": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"7497": {
			"op": "DUP1"
		},
		"7498": {
			"op": "DUP4"
		},
		"7499": {
			"op": "ADD"
		},
		"7500": {
			"op": "MLOAD"
		},
		"7501": {
			"op": "SWAP1"
		},
		"7502": {
			"op": "DUP3"
		},
		"7503": {
			"op": "ADD"
		},
		"7504": {
			"op": "MSTORE"
		},
		"7505": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"7507": {
			"op": "SWAP2"
		},
		"7508": {
			"op": "DUP3"
		},
		"7509": {
			"op": "ADD"
		},
		"7510": {
			"op": "MLOAD"
		},
		"7511": {
			"op": "SWAP2"
		},
		"7512": {
			"op": "DUP2"
		},
		"7513": {
			"op": "ADD"
		},
		"7514": {
			"op": "SWAP2"
		},
		"7515": {
			"op": "SWAP1"
		},
		"7516": {
			"op": "SWAP2"
		},
		"7517": {
			"op": "MSTORE"
		},
		"7518": {
			"op": "PUSH1",
			"value": "0x80"
		},
		"7520": {
			"op": "ADD"
		},
		"7521": {
			"op": "SWAP1"
		},
		"7522": {
			"jump": "o",
			"op": "JUMP"
		},
		"7523": {
			"op": "JUMPDEST"
		},
		"7524": {
			"op": "SWAP3"
		},
		"7525": {
			"op": "DUP4"
		},
		"7526": {
			"op": "MSTORE"
		},
		"7527": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"7529": {
			"op": "DUP4"
		},
		"7530": {
			"op": "ADD"
		},
		"7531": {
			"op": "SWAP2"
		},
		"7532": {
			"op": "SWAP1"
		},
		"7533": {
			"op": "SWAP2"
		},
		"7534": {
			"op": "MSTORE"
		},
		"7535": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"7537": {
			"op": "DUP3"
		},
		"7538": {
			"op": "ADD"
		},
		"7539": {
			"op": "MSTORE"
		},
		"7540": {
			"op": "PUSH1",
			"value": "0x60"
		},
		"7542": {
			"op": "ADD"
		},
		"7543": {
			"op": "SWAP1"
		},
		"7544": {
			"jump": "o",
			"op": "JUMP"
		},
		"7545": {
			"op": "JUMPDEST"
		},
		"7546": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"7548": {
			"op": "MLOAD"
		},
		"7549": {
			"op": "DUP2"
		},
		"7550": {
			"op": "DUP2"
		},
		"7551": {
			"op": "ADD"
		},
		"7552": {
			"op": "PUSH8",
			"value": "0xFFFFFFFFFFFFFFFF"
		},
		"7561": {
			"op": "DUP2"
		},
		"7562": {
			"op": "GT"
		},
		"7563": {
			"op": "DUP3"
		},
		"7564": {
			"op": "DUP3"
		},
		"7565": {
			"op": "LT"
		},
		"7566": {
			"op": "OR"
		},
		"7567": {
			"op": "ISZERO"
		},
		"7568": {
			"op": "PUSH2",
			"value": "0x1D98"
		},
		"7571": {
			"op": "JUMPI"
		},
		"7572": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"7574": {
			"op": "DUP1"
		},
		"7575": {
			"op": "REVERT"
		},
		"7576": {
			"op": "JUMPDEST"
		},
		"7577": {
			"op": "PUSH1",
			"value": "0x40"
		},
		"7579": {
			"op": "MSTORE"
		},
		"7580": {
			"op": "SWAP2"
		},
		"7581": {
			"op": "SWAP1"
		},
		"7582": {
			"op": "POP"
		},
		"7583": {
			"jump": "o",
			"op": "JUMP"
		},
		"7584": {
			"op": "JUMPDEST"
		},
		"7585": {
			"op": "PUSH1",
			"value": "0x0"
		},
		"7587": {
			"op": "PUSH8",
			"value": "0xFFFFFFFFFFFFFFFF"
		},
		"7596": {
			"op": "DUP3"
		},
		"7597": {
			"op": "GT"
		},
		"7598": {
			"op": "ISZERO"
		},
		"7599": {
			"op": "PUSH2",
			"value": "0x1DB6"
		},
		"7602": {
			"op": "JUMPI"
		},
		"7603": {
			"op": "DUP1"
		},
		"7604": {
			"op": "DUP2"
		},
		"7605": {
			"op": "REVERT"
		},
		"7606": {
			"op": "JUMPDEST"
		},
		"7607": {
			"op": "POP"
		},
		"7608": {
			"op": "PUSH1",
			"value": "0x20"
		},
		"7610": {
			"op": "SWAP1"
		},
		"7611": {
			"op": "DUP2"
		},
		"7612": {
			"op": "MUL"
		},
		"7613": {
			"op": "ADD"
		},
		"7614": {
			"op": "SWAP1"
		},
		"7615": {
			"jump": "o",
			"op": "JUMP"
		}
	},
	"sha1": "cd49f8da63d5566f84cd2f4fecfea475ade2900e",
	"source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"deps/@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol\";\nimport \"deps/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"deps/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"deps/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\nimport \"deps/@openzeppelin/contracts-upgradeable/cryptography/MerkleProofUpgradeable.sol\";\nimport \"interfaces/badger/ICumulativeMultiTokenMerkleDistributor.sol\";\n\ncontract BadgerTree is Initializable, AccessControlUpgradeable, ICumulativeMultiTokenMerkleDistributor, PausableUpgradeable {\n    using SafeMathUpgradeable for uint256;\n\n    struct MerkleData {\n        bytes32 root;\n        bytes32 contentHash;\n        uint256 timestamp;\n        uint256 blockNumber;\n    }\n\n    bytes32 public constant ROOT_UPDATER_ROLE = keccak256(\"ROOT_UPDATER_ROLE\");\n    bytes32 public constant GUARDIAN_ROLE = keccak256(\"GUARDIAN_ROLE\");\n\n    uint256 public currentCycle;\n    bytes32 public merkleRoot;\n    bytes32 public merkleContentHash;\n    uint256 public lastPublishTimestamp;\n    uint256 public lastPublishBlockNumber;\n\n    uint256 public pendingCycle;\n    bytes32 public pendingMerkleRoot;\n    bytes32 public pendingMerkleContentHash;\n    uint256 public lastProposeTimestamp;\n    uint256 public lastProposeBlockNumber;\n\n    mapping(address => mapping(address => uint256)) public claimed;\n    mapping(address => uint256) public totalClaimed;\n\n    function initialize(\n        address admin,\n        address initialUpdater,\n        address initialGuardian\n    ) public initializer {\n        __AccessControl_init();\n        __Pausable_init_unchained();\n\n        _setupRole(DEFAULT_ADMIN_ROLE, admin); // The admin can edit all role permissions\n        _setupRole(ROOT_UPDATER_ROLE, initialUpdater);\n        _setupRole(GUARDIAN_ROLE, initialGuardian);\n    }\n\n    /// ===== Modifiers =====\n\n    /// @notice Admins can approve new root updaters or admins\n    function _onlyAdmin() internal view {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"onlyAdmin\");\n    }\n\n    /// @notice Root updaters can update the root\n    function _onlyRootUpdater() internal view {\n        require(hasRole(ROOT_UPDATER_ROLE, msg.sender), \"onlyRootUpdater\");\n    }\n\n    function _onlyGuardian() internal view {\n        require(hasRole(GUARDIAN_ROLE, msg.sender), \"onlyGuardian\");\n    }\n\n    function getCurrentMerkleData() external view returns (MerkleData memory) {\n        return MerkleData(merkleRoot, merkleContentHash, lastPublishTimestamp, lastProposeBlockNumber);\n    }\n\n    function getPendingMerkleData() external view returns (MerkleData memory) {\n        return MerkleData(pendingMerkleRoot, pendingMerkleContentHash, lastProposeTimestamp, lastProposeBlockNumber);\n    }\n\n    function hasPendingRoot() external view returns (bool) {\n        return pendingCycle == currentCycle.add(1);\n    }\n\n    function getClaimedFor(address user, address[] memory tokens) public view returns(address[] memory, uint256[] memory) {\n        uint256[] memory userClaimed = new uint256[](tokens.length);\n        for (uint256 i = 0; i < tokens.length; i++) {\n            userClaimed[i] = claimed[user][tokens[i]];\n        }\n        return (tokens, userClaimed);\n    }\n\n    /// @notice Claim accumulated rewards for a set of tokens at a given cycle number\n    function claim(\n        address[] calldata tokens,\n        uint256[] calldata cumulativeAmounts,\n        uint256 index,\n        uint256 cycle,\n        bytes32[] calldata merkleProof\n    ) external whenNotPaused {\n        require(cycle == currentCycle, \"Invalid cycle\");\n\n        // Verify the merkle proof.\n        bytes32 node = keccak256(abi.encodePacked(index, msg.sender, cycle, tokens, cumulativeAmounts));\n        require(MerkleProofUpgradeable.verify(merkleProof, merkleRoot, node), \"Invalid proof\");\n\n        // Claim each token\n        for (uint256 i = 0; i < tokens.length; i++) {\n            uint256 claimable = cumulativeAmounts[i].sub(claimed[msg.sender][tokens[i]]);\n\n            require(claimable > 0, \"Excessive claim\");\n\n            claimed[msg.sender][tokens[i]] = claimed[msg.sender][tokens[i]].add(claimable);\n\n            require(claimed[msg.sender][tokens[i]] == cumulativeAmounts[i], \"Claimed amount mismatch\");\n            require(IERC20Upgradeable(tokens[i]).transfer(msg.sender, cumulativeAmounts[i]), \"Transfer failed\");\n\n            emit Claimed(msg.sender, tokens[i], cumulativeAmounts[i], cycle, now, block.number);\n        }\n    }\n\n    // ===== Root Updater Restricted =====\n\n    /// @notice Propose a new root and content hash, which will be stored as pending until approved\n    function proposeRoot(\n        bytes32 root,\n        bytes32 contentHash,\n        uint256 cycle\n    ) external whenNotPaused {\n        _onlyRootUpdater();\n        require(cycle == currentCycle.add(1), \"Incorrect cycle\");\n\n        pendingCycle = cycle;\n        pendingMerkleRoot = root;\n        pendingMerkleContentHash = contentHash;\n        lastProposeTimestamp = now;\n        lastProposeBlockNumber = block.number;\n\n        emit RootProposed(cycle, pendingMerkleRoot, pendingMerkleContentHash, now, block.number);\n    }\n\n    /// ===== Guardian Restricted =====\n\n    /// @notice Approve the current pending root and content hash\n    function approveRoot(\n        bytes32 root,\n        bytes32 contentHash,\n        uint256 cycle\n    ) external {\n        require(root == pendingMerkleRoot, \"Incorrect root\");\n        require(contentHash == pendingMerkleContentHash, \"Incorrect content hash\");\n        require(cycle == pendingCycle, \"Incorrect cycle\");\n\n        currentCycle = currentCycle.add(1);\n        merkleRoot = root;\n        merkleContentHash = contentHash;\n        lastPublishTimestamp = now;\n        lastPublishBlockNumber = block.number;\n\n        emit RootUpdated(currentCycle, root, contentHash, now, block.number);\n    }\n\n    /// @notice Pause publishing of new roots\n    function pause() external {\n        _onlyGuardian();\n        _pause();\n    }\n\n    /// @notice Unpause publishing of new roots\n    function unpause() external {\n        _onlyGuardian();\n        _unpause();\n    }\n}\n",
	"sourceMap": "588:5668:0:-:0;;;;;;;;;;;;;;;;;;;",
	"sourcePath": "contracts/badger-geyser/BadgerTree.sol",
	"type": "contract"
}