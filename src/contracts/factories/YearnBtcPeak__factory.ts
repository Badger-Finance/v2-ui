/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import { Provider } from '@ethersproject/providers';
import type { YearnBtcPeak, YearnBtcPeakInterface } from '../YearnBtcPeak';

const _abi = [
	{
		inputs: [
			{
				internalType: 'address',
				name: '_core',
				type: 'address',
			},
			{
				internalType: 'address',
				name: '_byvWBTC',
				type: 'address',
			},
		],
		stateMutability: 'nonpayable',
		type: 'constructor',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: 'address',
				name: 'account',
				type: 'address',
			},
			{
				indexed: false,
				internalType: 'uint256',
				name: 'ibBTC',
				type: 'uint256',
			},
			{
				indexed: false,
				internalType: 'uint256',
				name: 'byvWBTC',
				type: 'uint256',
			},
		],
		name: 'Mint',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: 'address',
				name: 'previousOwner',
				type: 'address',
			},
			{
				indexed: true,
				internalType: 'address',
				name: 'newOwner',
				type: 'address',
			},
		],
		name: 'OwnershipTransferred',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: 'address',
				name: 'account',
				type: 'address',
			},
			{
				indexed: false,
				internalType: 'uint256',
				name: 'ibBTC',
				type: 'uint256',
			},
			{
				indexed: false,
				internalType: 'uint256',
				name: 'byvWBTC',
				type: 'uint256',
			},
		],
		name: 'Redeem',
		type: 'event',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'account',
				type: 'address',
			},
		],
		name: 'approveContractAccess',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: '',
				type: 'address',
			},
		],
		name: 'approved',
		outputs: [
			{
				internalType: 'bool',
				name: '',
				type: 'bool',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: '',
				type: 'address',
			},
		],
		name: 'blockLock',
		outputs: [
			{
				internalType: 'uint256',
				name: '',
				type: 'uint256',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'byvWBTC',
		outputs: [
			{
				internalType: 'contract IbyvWbtc',
				name: '',
				type: 'address',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'uint256',
				name: 'inAmount',
				type: 'uint256',
			},
		],
		name: 'calcMint',
		outputs: [
			{
				internalType: 'uint256',
				name: 'bBTC',
				type: 'uint256',
			},
			{
				internalType: 'uint256',
				name: 'fee',
				type: 'uint256',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'uint256',
				name: 'bBtc',
				type: 'uint256',
			},
		],
		name: 'calcRedeem',
		outputs: [
			{
				internalType: 'uint256',
				name: 'sett',
				type: 'uint256',
			},
			{
				internalType: 'uint256',
				name: 'fee',
				type: 'uint256',
			},
			{
				internalType: 'uint256',
				name: 'max',
				type: 'uint256',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'core',
		outputs: [
			{
				internalType: 'contract ICore',
				name: '',
				type: 'address',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'uint256',
				name: 'inAmount',
				type: 'uint256',
			},
			{
				internalType: 'bytes32[]',
				name: 'merkleProof',
				type: 'bytes32[]',
			},
		],
		name: 'mint',
		outputs: [
			{
				internalType: 'uint256',
				name: 'outAmount',
				type: 'uint256',
			},
		],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [],
		name: 'owner',
		outputs: [
			{
				internalType: 'address',
				name: '_owner',
				type: 'address',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'portfolioValue',
		outputs: [
			{
				internalType: 'uint256',
				name: '',
				type: 'uint256',
			},
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'uint256',
				name: 'inAmount',
				type: 'uint256',
			},
		],
		name: 'redeem',
		outputs: [
			{
				internalType: 'uint256',
				name: 'outAmount',
				type: 'uint256',
			},
		],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'account',
				type: 'address',
			},
		],
		name: 'revokeContractAccess',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: 'newOwner',
				type: 'address',
			},
		],
		name: 'transferOwnership',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
];

export class YearnBtcPeak__factory {
	static readonly abi = _abi;
	static createInterface(): YearnBtcPeakInterface {
		return new utils.Interface(_abi) as YearnBtcPeakInterface;
	}
	static connect(address: string, signerOrProvider: Signer | Provider): YearnBtcPeak {
		return new Contract(address, _abi, signerOrProvider) as YearnBtcPeak;
	}
}
