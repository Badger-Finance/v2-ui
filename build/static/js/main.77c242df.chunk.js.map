{"version":3,"sources":["assets/itchiro-logo.png","context/store-context.ts","mobx/stores/app-store.ts","mobx/store.ts","config/constants.ts","components/Loader/index.tsx","components/Home/index.tsx","components/Asset/AssetImage.tsx","components/Asset/AssetInfo.tsx","components/Asset/AssetSales.tsx","components/Asset/index.tsx","components/Accounts/index.tsx","components/Collection/AssetCard.tsx","components/Collection/index.tsx","config/routes.tsx","components/Sidebar/Wallet.tsx","components/Sidebar/index.tsx","index.tsx"],"names":["module","exports","StoreContext","createContext","StoreProvider","Provider","AppStore","title","user","collection","orders","asset","seaport","provider","errorMessage","setTitle","action","setProvider","OpenSeaPort","networkName","Network","Main","fetchCollection","console","log","api","getAssets","asset_contract_address","order_by","limit","then","assets","fetchAsset","id","getAsset","tokenAddress","tokenId","getOrders","token_id","count","buyOrder","order","fulfillOrder","accountAddress","selectedAddress","catch","error","message","Web3","providers","HttpProvider","extendObservable","this","undefined","store","router","app","RouterStore","collections","address","useStyles","makeStyles","theme","root","width","height","display","justifyContent","alignItems","Loader","useContext","classes","className","CircularProgress","Home","observer","goTo","views","media","paddingTop","backgroundSize","AssetImage","props","Card","CardMedia","image","imageUrlOriginal","name","price","margin","spacing","priceCopy","marginRight","marginBottom","AssetInfo","buyClicked","CardHeader","avatar","Avatar","aria-label","src","owner","profileImgUrl","IconButton","onClick","username","subheader","CardContent","Typography","variant","sellOrders","length","Button","size","utils","fromWei","currentPrice","toString","component","description","AssetSales","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","key","v","makerAccount","Date","listingTime","toNumber","toLocaleTimeString","expirationTime","toLocaleDateString","quantity","cancelledOrFinalized","taker","assetContainer","paddingRight","Asset","enqueueSnackbar","useSnackbar","params","Container","maxWidth","Grid","container","item","xs","startIcon","ArrowBack","md","Account","account","thumbnail","cursor","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","padding","AssetCard","lg","CardActionArea","imageUrlThumbnail","headerContainer","Collection","openAsset","assetContract","imageUrl","routes","home","Route","path","onEnter","route","beforeExit","onParamsChange","_","_p","redDot","borderRadius","background","palette","main","greenDot","success","Wallet","wallet","useWallet","useEffect","ethereum","status","fullWidth","reset","slice","connect","logo","minWidth","listHeader","fontSize","textTransform","color","primary","link","textDecoration","flexDirection","listItem","paddingLeft","activeListItem","Sidebar","chainId","connectors","portis","dAppId","require","List","ListItem","createMuiTheme","type","typography","h1","fontFamily","h2","h3","h4","h5","h6","startRouter","html5history","ReactDOM","render","value","ThemeProvider","CssBaseline","maxSnack","anchorOrigin","vertical","horizontal","style","overflow","overflowY","document","getElementById"],"mappings":"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","file":"static/js/main.77c242df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/itchiro-logo.153cc9da.png\";","import { createContext } from \"react\";\nimport { RootStore } from \"../mobx/store\";\n\n// Use React context to make your store available in your application\nexport const StoreContext = createContext({} as RootStore);\nexport const StoreProvider = StoreContext.Provider;","import { extendObservable, action } from 'mobx';\nimport Web3 from 'web3'\nimport { OpenSeaPort, Network } from 'opensea-js'\nimport { OpenSeaAsset, OrderSide } from 'opensea-js/lib/types';\nimport { TimerSharp } from '@material-ui/icons';\n\nclass AppStore {\n\tpublic title?: string;\n\tpublic user?: any;\n\tpublic collection?: OpenSeaAsset[];\n\tpublic orders?: any[];\n\tpublic asset?: OpenSeaAsset;\n\tpublic seaport?: OpenSeaPort;\n\tpublic provider?: any;\n\n\tpublic errorMessage?: String;\n\n\n\tconstructor() {\n\t\tconst provider = new Web3.providers.HttpProvider('https://mainnet.infura.io/v3/77a0f6647eb04f5ca1409bba62ae9128')\n\t\tconst seaport = new OpenSeaPort(provider, {\n\t\t\tnetworkName: Network.Main\n\t\t})\n\n\t\textendObservable(this, {\n\t\t\ttitle: 'Itchiro Games DEX',\n\t\t\tuser: undefined,\n\t\t\tseaport: seaport,\n\t\t\tcollection: undefined,\n\t\t\torders: undefined,\n\t\t\tasset: undefined,\n\t\t\tprovider: undefined,\n\t\t\terrorMessage: undefined\n\t\t});\n\t}\n\n\tsetTitle = action((title: string | undefined) => {\n\t\tthis.title = title;\n\t});\n\tsetProvider = action((provider: any) => {\n\t\tthis.provider = provider\n\t\tthis.seaport = new OpenSeaPort(provider, {\n\t\t\tnetworkName: Network.Main\n\t\t})\n\t});\n\n\n\tfetchCollection = action((collection: string) => {\n\t\tconsole.log(\"fetching\")\n\t\tif (!this.seaport)\n\t\t\treturn\n\n\t\tthis.seaport!.api.getAssets({\n\t\t\tasset_contract_address: collection, // string\n\t\t\torder_by: 'tokenId', // string | number | null\n\t\t\tlimit: 100,\n\n\t\t}).then((asset) => {\n\t\t\tconsole.log(asset)\n\t\t\tthis.collection = asset.assets\n\t\t})\n\t});\n\n\tfetchAsset = action((collection: string, id: string) => {\n\t\tconsole.log(\"fetching\")\n\t\tif (!this.seaport)\n\t\t\treturn\n\n\t\tthis.seaport!.api.getAsset({\n\t\t\ttokenAddress: collection, // string\n\t\t\ttokenId: id // string | number | null\n\t\t}).then((asset) => {\n\t\t\tconsole.log(asset)\n\t\t\tthis.asset = asset\n\t\t})\n\n\t\tthis.seaport!.api.getOrders({\n\t\t\tasset_contract_address: collection,\n\t\t\ttoken_id: id\n\t\t}).then(({ orders, count }) => {\n\t\t\tconsole.log(orders)\n\t\t\tthis.orders = orders\n\t\t})\n\t});\n\n\tbuyOrder = action((order: any) => {\n\t\tconsole.log(\"buying\")\n\t\tif (!this.seaport)\n\t\t\treturn\n\n\n\n\t\tthis.seaport!.fulfillOrder({\n\t\t\torder: order, // string\n\t\t\taccountAddress: this.provider.selectedAddress // string | number | null\n\t\t}).then((asset) => {\n\t\t\tconsole.log(asset)\n\t\t}).catch((error) => {\n\t\t\tthis.errorMessage = error.message\n\t\t})\n\n\t});\n\n}\n\nexport default AppStore;","import { RouterStore } from 'mobx-router';\nimport AppStore from './stores/app-store';\n\nexport class RootStore {\n  public router: RouterStore<RootStore>;\n  public app: AppStore;\n\n  constructor() {\n    this.router = new RouterStore<RootStore>(this);\n    this.app = new AppStore();\n  }\n}\n\nconst store = new RootStore();\n\nexport default store;","export const collections = [\n\t{ title: \"Decentraland\", address: \"0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d\" },\n\t{ title: \"Battle Racers\", address: \"0x0f3b491841680eb40bd2be42bce7104f2511dbd9\" },\n\t{ title: \"Alphalpha City\", address: \"0xc7e5e9434f4a71e6db978bd65b4d61d3593e5f27\" },\n\t{ title: \"The Sandbox\", address: \"0x067a1eb5e383ed24b66d72aaf80d8d7db3d299a8\" },\n\t{ title: \"Vegas City\", address: \"0xf4618abb5e8031454238696a0f013dcd1476dc33\" },\n\t{ title: \"Crypto Avatars\", address: \"0xc1def47cf1e15ee8c2a92f4e0e968372880d18d1\" },\n]","import React, { useContext } from 'react';\nimport { map } from 'lodash';\nimport { observer } from 'mobx-react-lite';\nimport views from '../../config/routes';\nimport { StoreContext } from '../../context/store-context';\nimport { OpenSeaAsset } from 'opensea-js/lib/types';\nimport { Grid, CircularProgress, Avatar } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: \"100%\",\n\t\theight: \"100vh\",\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center'\n\t}\n\n}));\nexport const Loader = () => {\n\tconst store = useContext(StoreContext);\n\tconst classes = useStyles();\n\n\treturn <div className={classes.root}><CircularProgress /></div>\n\n\n}\n\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Link } from 'mobx-router';\nimport views from '../../config/routes';\nimport { useContext } from 'react';\nimport { StoreContext } from '../../context/store-context';\nimport { collections } from '../../config/constants';\nimport { Loader } from '../Loader';\n\nexport const Home = observer(() => {\n\tconst store = useContext(StoreContext);\n\tconst { router: { goTo } } = store;\n\n\tgoTo(views.collection, { collection: collections[0].address })\n\n\treturn (\n\t\t<Loader />\n\t);\n});\n","import React, { useContext } from 'react';\nimport { OpenSeaAsset } from 'opensea-js/lib/types';\nimport {\n\tGrid, CircularProgress, Typography,\n\tCard, CardHeader, CardMedia, CardContent, CardActions, CardActionArea, Collapse, Avatar, IconButton,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n\n\tmedia: {\n\t\theight: 0,\n\t\tpaddingTop: '100%', // 16:9\n\t\tbackgroundSize: \"contain\",\n\t\twidth: \"100%\"\n\t},\n\troot: {\n\t\twidth: \"100%\"\n\t}\n\n\n}));\n\nexport const AssetImage = (props: { asset: OpenSeaAsset }) => {\n\tconst { asset } = props;\n\tconst classes = useStyles();\n\n\tif (!asset) {\n\t\treturn <CircularProgress />\n\t}\n\n\n\treturn <Card className={classes.root}>\n\t\t<CardMedia\n\t\t\tclassName={classes.media}\n\t\t\timage={asset.imageUrlOriginal}\n\t\t\ttitle={asset.name}\n\n\t\t/>\n\n\t</Card>\n\n\n\n}\n","import React, { useContext } from 'react';\nimport { OpenSeaAsset } from 'opensea-js/lib/types';\nimport {\n\tGrid, CircularProgress, Typography,\n\tCard, CardHeader, CardMedia, CardContent, CardActions, CardActionArea, Collapse, Avatar, IconButton,\n\tButton\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Web3 from 'web3';\n\nconst useStyles = makeStyles((theme) => ({\n\n\tmedia: {\n\t\theight: 0,\n\t\tpaddingTop: '56.25%', // 16:9\n\t\tbackgroundSize: \"contain\",\n\t\twidth: \"100%\"\n\t},\n\troot: {\n\t\twidth: \"100%\"\n\t},\n\tprice: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tmargin: theme.spacing(2, 0)\n\t},\n\tpriceCopy: {\n\t\tmarginRight: theme.spacing(2)\n\t},\n\tname: {\n\t\tmarginBottom: theme.spacing(2)\n\t}\n\n\n}));\n\nexport const AssetInfo = (props: { asset: OpenSeaAsset, buyClicked: any }) => {\n\tconst { asset, buyClicked } = props;\n\tconst classes = useStyles();\n\n\tif (!asset) {\n\t\treturn <CircularProgress />\n\t}\n\n\n\treturn <Card className={classes.root}>\n\t\t<CardHeader\n\t\t\tavatar={\n\t\t\t\t<Avatar aria-label=\"recipe\" src={asset.owner.profileImgUrl} >\n\n\t\t\t\t</Avatar>\n\t\t\t}\n\t\t\taction={\n\t\t\t\t<IconButton aria-label=\"settings\" onClick={() => { }}>\n\t\t\t\t\t<MoreVertIcon />\n\t\t\t\t</IconButton>\n\t\t\t}\n\t\t\ttitle={asset.owner.user?.username}\n\t\t\tsubheader={asset.collection.name}\n\t\t/>\n\n\t\t<CardContent>\n\t\t\t<Typography variant=\"h2\" className={classes.name}>\n\t\t\t\t{asset.name}\n\t\t\t</Typography>\n\t\t\t{asset.sellOrders!.length > 0 && <div className={classes.price}>\n\t\t\t\t<Typography variant=\"body2\" className={classes.priceCopy}>\n\t\t\t\t\tCurrent Price:\n\t\t\t\t</Typography>\n\t\t\t\t<Button variant=\"outlined\" size=\"large\" onClick={() => buyClicked(asset.sellOrders![0])}>\n\t\t\t\t\t{Web3.utils.fromWei(asset.sellOrders![0].currentPrice!.toString())}Ξ\n\t\t\t</Button>\n\t\t\t</div>\n\t\t\t}\n\t\t\t<Typography variant=\"body1\" component=\"p\">\n\t\t\t\t{asset.description || \"No Description\"}\n\t\t\t</Typography>\n\t\t</CardContent>\n\n\n\t</Card>\n\n\n\n}\n","import React, { useContext } from 'react';\nimport { OpenSeaAsset } from 'opensea-js/lib/types';\nimport {\n\tGrid, CircularProgress, Typography,\n\tCard, CardHeader, CardMedia, CardContent, CardActions, CardActionArea, Collapse, Avatar, IconButton,\n\tTableContainer,\n\tTableBody,\n\tTable,\n\tTableHead,\n\tTableRow,\n\tTableCell\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Web3 from 'web3';\n\nconst useStyles = makeStyles((theme) => ({\n\n\troot: {\n\n\t}\n\n\n}));\n\nexport const AssetSales = (props: { orders: any[] | undefined }) => {\n\tconst { orders } = props;\n\tconst classes = useStyles();\n\n\n\tconst renderSales = () => {\n\t\treturn orders!.map((row) => (\n\t\t\t<TableRow key={row.v}>\n\t\t\t\t<TableCell align=\"left\">{row.makerAccount?.user?.username}</TableCell>\n\t\t\t\t<TableCell align=\"left\">{new Date(row.listingTime?.toNumber() || 0).toLocaleTimeString()}</TableCell>\n\t\t\t\t<TableCell align=\"left\">{new Date(row.expirationTime?.toNumber() || 0).toLocaleDateString()}</TableCell>\n\t\t\t\t<TableCell align=\"right\">{Web3.utils.fromWei(row.currentPrice!.toString())}Ξ</TableCell>\n\t\t\t\t<TableCell align=\"right\">{row.quantity.toString()}</TableCell>\n\t\t\t\t<TableCell align=\"right\">{!!row.cancelledOrFinalized ? row.taker == \"0x0000000000000000000000000000000000000000\" ? \"Cancelled\" : \"Sold\" : \"Live\"}</TableCell>\n\t\t\t</TableRow>\n\t\t))\n\n\t}\n\n\tif (!orders) {\n\t\treturn <CircularProgress />\n\t}\n\n\n\n\treturn <Card className={classes.root}>\n\n\t\t<CardHeader\n\n\t\t\taction={\n\t\t\t\t<IconButton aria-label=\"settings\" onClick={() => { }}>\n\t\t\t\t\t<MoreVertIcon />\n\t\t\t\t</IconButton>\n\t\t\t}\n\t\t\ttitle={\"Trading history\"}\n\t\t\tsubheader={orders.length > 0 ? orders.length + ' Events' : 'No history found.'}\n\t\t/>\n\n\t\t<CardContent>\n\n\t\t\t<TableContainer >\n\t\t\t\t<Table aria-label=\"simple table\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell align=\"left\">Listed by</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"left\">Listing time</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"left\">Expiration</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">Current Price</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">Quantity</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">Status</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{renderSales()}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t</CardContent>\n\n\n\t</Card>\n\n\n\n\n}\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useContext } from 'react';\nimport { StoreContext } from '../../context/store-context';\nimport views from '../../config/routes';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n\tGrid, Button, Container\n} from '@material-ui/core';\nimport { AssetImage } from './AssetImage';\nimport { AssetInfo } from './AssetInfo';\nimport { AssetSales } from './AssetSales';\nimport { ArrowBack } from '@material-ui/icons';\n\nimport { SnackbarProvider, useSnackbar } from 'notistack';\nimport { Loader } from '../Loader';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n\tassetContainer: {\n\t\tpaddingRight: theme.spacing(2),\n\t\tpaddingTop: theme.spacing(2)\n\t}\n\n}));\n//style\nexport const Asset = observer(() => {\n\tconst classes = useStyles();\n\tconst { enqueueSnackbar } = useSnackbar();\n\n\tconst store = useContext(StoreContext);\n\tconst { router: { params, goTo }, app: { asset, orders, buyOrder, provider } } = store;\n\n\tconst goBack = () => goTo(views.collection, { collection: asset?.tokenAddress || '0x' })\n\tconst buyClicked = (order: any) => {\n\t\tif (!provider)\n\t\t\treturn enqueueSnackbar('Please connect your wallet before purchasing.', { variant: 'error' })\n\n\t\tbuyOrder(order)\n\t}\n\n\tif (!asset) {\n\t\treturn <Loader />\n\t}\n\n\treturn (\n\t\t<Container maxWidth=\"lg\">\n\t\t\t<Grid container spacing={2} className={classes.assetContainer}>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Button onClick={goBack} startIcon={<ArrowBack />} >{asset!.collection.name}</Button>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={5}>\n\t\t\t\t\t<AssetImage asset={asset} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={7}>\n\t\t\t\t\t<AssetInfo asset={asset} buyClicked={buyClicked} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<AssetSales orders={orders} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Container>\n\t);\n});\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useContext } from 'react';\nimport { StoreContext } from '../../context/store-context';\n\nexport const Account = observer(() => {\n\tconst { router: { params } } = useContext(StoreContext);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1> Account: {params?.account} </h1>\n\t\t</div>\n\t);\n});\n","import React, { useContext } from 'react';\nimport { OpenSeaAsset } from 'opensea-js/lib/types';\nimport {\n\tGrid, CircularProgress, Typography,\n\tCard, CardHeader, CardMedia, CardContent, CardActions, CardActionArea, Collapse, Avatar, IconButton,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Web3 from 'web3';\n\nconst useStyles = makeStyles((theme) => ({\n\tthumbnail: {\n\t\twidth: \"4rem\"\n\t},\n\troot: {\n\t\t// maxWidth: 345,\n\t\tcursor: 'pointer'\n\t},\n\tmedia: {\n\t\theight: 0,\n\t\tpaddingTop: '56.25%', // 16:9\n\t\tbackgroundSize: \"contain\"\n\t},\n\texpand: {\n\t\ttransform: 'rotate(0deg)',\n\t\tmarginLeft: 'auto',\n\t\ttransition: theme.transitions.create('transform', {\n\t\t\tduration: theme.transitions.duration.shortest,\n\t\t}),\n\t},\n\texpandOpen: {\n\t\ttransform: 'rotate(180deg)',\n\t},\n\tname: {\n\t\tpadding: theme.spacing(2, 0, 1)\n\t}\n\n\n\n\n}));\n\nexport const AssetCard = (props: { asset: OpenSeaAsset, onClick: any }) => {\n\tconst { asset, onClick } = props;\n\tconst classes = useStyles();\n\n\tif (!asset) {\n\t\treturn <CircularProgress />\n\t}\n\n\n\treturn <Grid item xs={12} md={4} lg={3}>\n\t\t<Card className={classes.root} >\n\t\t\t<CardActionArea onClick={() => onClick(asset)}>\n\t\t\t\t<CardHeader\n\t\t\t\t\tavatar={\n\t\t\t\t\t\t<Avatar aria-label=\"recipe\" src={asset.owner.profileImgUrl} >\n\n\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t}\n\t\t\t\t\taction={\n\t\t\t\t\t\t<IconButton aria-label=\"settings\" >\n\t\t\t\t\t\t\t<MoreVertIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t}\n\t\t\t\t\ttitle={asset.owner.user?.username}\n\t\t\t\t\tsubheader={asset.collection.name}\n\t\t\t\t/>\n\t\t\t\t<CardMedia\n\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\timage={asset.imageUrlThumbnail}\n\t\t\t\t\ttitle={asset.name}\n\n\t\t\t\t/>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography variant=\"h4\" className={classes.name}>\n\t\t\t\t\t\t{asset.name}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\n\t\t\t\t\t\t{asset.description || \"No Description\"}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{!!asset.sellOrders && asset.sellOrders.length > 0 && <Typography variant=\"body2\" component=\"p\">\n\t\t\t\t\t\tΞ {Web3.utils.fromWei(asset.sellOrders![0].currentPrice!.toString())}\n\t\t\t\t\t</Typography>}\n\t\t\t\t</CardContent>\n\t\t\t</CardActionArea>\n\n\t\t</Card>\n\t</Grid >\n\n\n}\n","import React, { useContext } from 'react';\nimport { map } from 'lodash';\nimport { observer } from 'mobx-react-lite';\nimport views from '../../config/routes';\nimport { StoreContext } from '../../context/store-context';\nimport { OpenSeaAsset } from 'opensea-js/lib/types';\nimport { Grid, CircularProgress, Avatar } from '@material-ui/core';\nimport { AssetCard } from './AssetCard';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Loader } from '../Loader';\n\nconst useStyles = makeStyles((theme) => ({\n\tassets: {\n\t\tpaddingTop: theme.spacing(2),\n\t\tpaddingRight: theme.spacing(2)\n\t},\n\tavatar: {\n\t\twidth: \"6rem\",\n\t\theight: \"6rem\"\n\t},\n\theaderContainer: {\n\t\tpadding: theme.spacing(10, 5, 10, 10)\n\t}\n\n}));\nexport const Collection = observer(() => {\n\tconst store = useContext(StoreContext);\n\tconst classes = useStyles();\n\n\tconst { router: { params, goTo }, app: { collection } } = store;\n\n\tconst openAsset = (asset: OpenSeaAsset) => {\n\t\tgoTo(views.asset, { collection: asset.tokenAddress!, id: asset.tokenId! })\n\t}\n\n\tconst renderCollection = () => {\n\t\tif (!collection) {\n\t\t\treturn <Loader />\n\t\t}\n\t\treturn collection!.map((asset) => {\n\t\t\treturn <AssetCard asset={asset} onClick={openAsset} />\n\t\t})\n\t}\n\n\tif (!collection) {\n\t\treturn <Loader />\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<Grid container spacing={2} alignItems=\"center\" className={classes.headerContainer}>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Avatar src={collection[0].assetContract.imageUrl} className={classes.avatar}></Avatar>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={9}>\n\t\t\t\t\t<Typography variant=\"h1\">{collection[0].assetContract.name} </Typography >\n\t\t\t\t\t<Typography variant=\"body1\">{collection[0].assetContract.description} </Typography>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid container spacing={2} alignItems=\"center\" className={classes.assets}>\n\t\t\t\t{renderCollection()}\n\t\t\t</Grid>\n\t\t</div>\n\t);\n});\n\n","import React from 'react';\n\n//models\nimport { Route } from 'mobx-router';\n\n//components\nimport { Home } from '../components/Home';\nimport { Asset } from '../components/Asset';\nimport { Account } from '../components/Accounts';\nimport { Collection } from '../components/Collection';\nimport { RootStore } from '../mobx/store';\n\nconst routes = {\n\thome: new Route<RootStore>({\n\t\tpath: '/',\n\t\tcomponent: <Home />\n\t}),\n\n\tcollection: new Route<RootStore, {\n\t\tcollection: string;\n\t}>({\n\t\tpath: '/collection/:collection',\n\t\tcomponent: <Collection />,\n\t\tonEnter: (route, { collection }, store) => {\n\t\t\tconsole.log(`entering collection: ${collection}!`);\n\t\t\tstore.app.fetchCollection(collection)\n\t\t},\n\t\tbeforeExit: () => {\n\t\t\tconsole.log('exiting collection!');\n\t\t},\n\t\tonParamsChange: (route, { collection }, store) => {\n\t\t\tconsole.log('collection changed to', collection);\n\t\t\tstore.app.fetchCollection(collection)\n\n\t\t}\n\t}),\n\tasset: new Route<RootStore, {\n\t\tcollection: string;\n\t\tid: string;\n\t}>({\n\t\tpath: '/asset/:collection/:id',\n\t\tcomponent: <Asset />,\n\t\tonEnter: (_, { collection, id }, store) => {\n\t\t\tconsole.log(`entering asset: ${collection} + ${id}`);\n\t\t\tstore.app.fetchAsset(collection, id)\n\n\n\t\t},\n\t\tbeforeExit: (_, _p, store) => {\n\t\t\tconsole.log('exiting asset');\n\t\t\tstore.app.asset = undefined\n\t\t},\n\t\tonParamsChange: (route, { collection, id }, store) => {\n\t\t\tconsole.log('params changed to', collection, id);\n\t\t\tstore.app.fetchAsset(collection, id)\n\n\t\t}\n\t}),\n\taccount: new Route<RootStore, {\n\t\taccount: string;\n\t}>({\n\t\tpath: '/accounts/:account',\n\t\tcomponent: <Account />,\n\t\tonEnter: (_, { account }) => {\n\t\t\tconsole.log(`entering account: ${account}!`);\n\t\t},\n\t\tbeforeExit: () => {\n\t\t\tconsole.log('exiting account!');\n\t\t},\n\t\tonParamsChange: (route, params) => {\n\t\t\tconsole.log('params changed to', params);\n\t\t}\n\t}),\n\n};\nexport default routes;","import React, { useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Link } from 'mobx-router';\nimport views from '../../config/routes';\nimport { useContext } from 'react';\nimport { StoreContext } from '../../context/store-context';\nimport { Container, CssBaseline, Grid, List, ListItem, ListItemText, Button } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { collections } from '../../config/constants';\nimport { useWallet, UseWalletProvider } from 'use-wallet'\n\nconst useStyles = makeStyles((theme) => ({\n\n\troot: {\n\t\tpadding: theme.spacing(0, 2, 2, 2)\n\t},\n\tredDot: {\n\t\tdisplay: \"inline-block\",\n\t\twidth: theme.spacing(1),\n\t\theight: theme.spacing(1),\n\t\tmarginRight: theme.spacing(1),\n\t\tborderRadius: theme.spacing(1),\n\t\tbackground: theme.palette.error.main\n\t},\n\tgreenDot: {\n\t\tdisplay: \"inline-block\",\n\t\twidth: theme.spacing(1),\n\t\theight: theme.spacing(1),\n\t\tmarginRight: theme.spacing(1),\n\t\tborderRadius: theme.spacing(1),\n\t\tbackground: theme.palette.success.main\n\t}\n}));\n\nexport const Wallet = observer(() => {\n\tconst classes = useStyles();\n\tconst wallet = useWallet()\n\n\tconst store = useContext(StoreContext);\n\tconst { router: { goTo }, app: { setProvider } } = store;\n\n\tconst shortenAddress = (address: String) => {\n\t\treturn address.slice(0, 6) + '...' + address.slice(address.length - 4, address.length)\n\t}\n\n\tconst connect = () => {\n\t\twallet.connect('provided')\n\t}\n\n\tuseEffect(() => { !!wallet.ethereum && setProvider(wallet.ethereum) }, [wallet.ethereum])\n\n\tif (wallet.status === 'connected')\n\t\treturn <div className={classes.root}>\n\t\t\t<Button\n\t\t\t\tfullWidth\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tonClick={() => wallet.reset()}>\n\t\t\t\t<div className={wallet.status !== 'connected' ? classes.redDot : classes.greenDot} />\n\t\t\t\t{shortenAddress(wallet.account!)}\n\n\t\t\t</Button>\n\t\t</div>\n\telse\n\t\treturn <div className={classes.root}>\n\n\t\t\t<Button\n\t\t\t\tfullWidth\n\t\t\t\tonClick={connect}\n\t\t\t\tvariant=\"outlined\">\n\t\t\t\t<div className={wallet.status !== 'connected' ? classes.redDot : classes.greenDot} />\n\t\t\t\t{wallet.status}\n\t\t\t</Button>\n\t\t</div>\n\n});\n","import React, { useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Link } from 'mobx-router';\nimport views from '../../config/routes';\nimport { useContext } from 'react';\nimport { StoreContext } from '../../context/store-context';\nimport { Container, CssBaseline, Grid, List, ListItem, ListItemText } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { collections } from '../../config/constants';\nimport { Wallet } from './Wallet';\nimport { UseWalletProvider } from 'use-wallet'\nimport { SnackbarProvider, useSnackbar } from 'notistack';\n\nconst useStyles = makeStyles((theme) => ({\n\tlogo: {\n\t\twidth: \"50%\",\n\t\tminWidth: \"7rem\",\n\t\tmargin: \"1rem auto 3rem\",\n\t\tdisplay: \"block\"\n\t},\n\tlistHeader: {\n\t\tfontSize: \".8rem\",\n\t\ttextTransform: \"uppercase\",\n\t\tmarginLeft: theme.spacing(4),\n\t\tcolor: theme.palette.primary.main\n\t},\n\tlink: {\n\t\tcolor: 'inherit',\n\t\ttextDecoration: 'none'\n\t},\n\troot: {\n\t\theight: \"100vh\",\n\t\tpaddingTop: theme.spacing(2),\n\t\tmarginRight: theme.spacing(-2),\n\t\tmarginLeft: theme.spacing(-2),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-between'\n\t},\n\tlistItem: {\n\t\tcursor: \"pointer\",\n\t\t\"&:hover\": {\n\t\t\tbackground: \"rgba(255,255,255,.05)\"\n\n\t\t},\n\t\tpaddingLeft: theme.spacing(4)\n\t},\n\tactiveListItem: {\n\t\tbackground: \"rgba(255,255,255,.1)\"\n\t}\n\n\n}));\n\nexport const Sidebar = observer(() => {\n\tconst classes = useStyles();\n\n\tconst store = useContext(StoreContext);\n\tconst { router: { goTo }, app: { errorMessage } } = store;\n\n\tconst { enqueueSnackbar } = useSnackbar();\n\n\tuseEffect(() => {\n\t\tif (!!errorMessage)\n\t\t\tenqueueSnackbar(errorMessage, { variant: 'error' })\n\n\t}, [errorMessage])\n\n\tconst renderCollections = () => {\n\t\treturn collections.map((collection) => {\n\n\t\t\treturn <ListItem className={classes.listItem + ' ' + (store.router.params?.collection === collection.address ? classes.activeListItem : '')}\n\t\t\t\tonClick={() => goTo(views.collection, { collection: collection.address })}>\n\n\t\t\t\t{collection.title}\n\n\t\t\t</ListItem>\n\t\t})\n\t}\n\n\treturn (\n\t\t<UseWalletProvider\n\t\t\tchainId={1}\n\t\t\tconnectors={{\n\t\t\t\t// This is how connectors get configured\n\t\t\t\tportis: { dAppId: 'itchiro-dex' },\n\t\t\t}}\n\t\t>\n\n\t\t\t<div className={classes.root}>\n\t\t\t\t<div>\n\n\t\t\t\t\t<img src={require('../../assets/itchiro-logo.png')} className={classes.logo} />\n\n\t\t\t\t\t<h2 className={classes.listHeader}>Collections</h2>\n\t\t\t\t\t<List >\n\t\t\t\t\t\t{renderCollections()}\n\t\t\t\t\t</List>\n\n\t\t\t\t\t<h2 className={classes.listHeader}>Library</h2>\n\t\t\t\t\t<List>\n\t\t\t\t\t\t<ListItem className={classes.listItem}>\n\t\t\t\t\t\t\t<Link className={classes.link} router={store.router} route={views.account} params={{ account: \"0x926b69693d22fd939d91bcb403e46e6a5094cc94\" }} title=\"My Items\" />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t</List>\n\t\t\t\t</div>\n\t\t\t\t<Wallet />\n\n\n\n\t\t\t\t{/* <button onClick={() => goTo(views.userProfile, { username: 'kitze', tab: 'articles' })}>\n        go to user kitze\n    \t</button> */}\n\n\t\t\t</div >\n\t\t</UseWalletProvider>\n\t);\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MobxRouter, startRouter } from 'mobx-router';\n\nimport { StoreProvider } from \"./context/store-context\";\n\n//material\nimport { Container, CssBaseline, Grid, List, ListItem, ListItemText } from \"@material-ui/core\"\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { SnackbarProvider, useSnackbar } from 'notistack';\n\n//mobx\nimport store from './mobx/store';\n\n//router\nimport routes from './config/routes';\nimport { Sidebar } from './components/Sidebar';\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\ttype: 'dark',\n\t\tprimary: { main: \"#12a9b4\" },\n\n\t},\n\ttypography: {\n\t\th1: { fontFamily: \"'Press Start 2P'\", fontSize: \"2.5rem\" },\n\t\th2: { fontFamily: \"'Press Start 2P'\", fontSize: \"2rem\" },\n\t\th3: { fontFamily: \"'Press Start 2P'\", fontSize: \"1.8rem\" },\n\t\th4: { fontFamily: \"'Press Start 2P'\", fontSize: \"1rem\" },\n\t\th5: { fontFamily: \"'Press Start 2P'\" },\n\t\th6: { fontFamily: \"'Press Start 2P'\" },\n\t}\n});\n\n\nstartRouter(routes, store, {\n\thtml5history: true, // or false if you want to use hash based routing\n});\n\nReactDOM.render(\n\t<StoreProvider value={store}>\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<CssBaseline />\n\t\t\t<SnackbarProvider maxSnack={5} anchorOrigin={{ vertical: 'top', horizontal: 'right' }}>\n\n\t\t\t\t<Container maxWidth={false}>\n\t\t\t\t\t<Grid container style={{ overflow: \"hidden\" }} spacing={4}>\n\t\t\t\t\t\t<Grid item xs={3} md={2} style={{ background: \"#111\" }}>\n\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={9} md={10} style={{ height: \"100vh\", overflowY: \"scroll\" }}>\n\t\t\t\t\t\t\t<MobxRouter store={store} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Container>\n\t\t\t</SnackbarProvider>\n\n\t\t</ThemeProvider>\n\t</StoreProvider>, document.getElementById('root')\n)"],"sourceRoot":""}